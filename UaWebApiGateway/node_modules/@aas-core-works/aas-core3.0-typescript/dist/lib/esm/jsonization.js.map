{"version":3,"file":"jsonization.js","names":["AasCommon","AasTypes","AasStringification","PropertySegment","constructor","instance","name","IndexSegment","container","index","Number","isInteger","Error","Path","_segments","Array","segments","prepend","segment","unshift","toString","length","parts","push","i","join","DeserializationError","message","path","newDeserializationError","Either","booleanFromJsonable","jsonable","integerFromJsonable","numberFromJsonable","stringFromJsonable","bytesFromJsonable","either","base64Decode","error","mustValue","hasSemanticsFromJsonable","isArray","modelType","undefined","dispatch","HAS_SEMANTICS_FROM_JSONABLE_DISPATCH","get","SetterForExtension","semanticId","supplementalSemanticIds","valueType","value","refersTo","ignore","setSemanticIdFromJsonable","parsedOrError","referenceFromJsonable","setSupplementalSemanticIdsFromJsonable","Symbol","iterator","iterable","items","jsonableItem","itemOrError","setNameFromJsonable","setValueTypeFromJsonable","dataTypeDefXsdFromJsonable","setValueFromJsonable","setRefersToFromJsonable","extensionFromJsonable","setter","key","jsonableValue","setterMethod","SETTER_MAP_FOR_EXTENSION","call","Extension","hasExtensionsFromJsonable","HAS_EXTENSIONS_FROM_JSONABLE_DISPATCH","referableFromJsonable","REFERABLE_FROM_JSONABLE_DISPATCH","identifiableFromJsonable","IDENTIFIABLE_FROM_JSONABLE_DISPATCH","modellingKindFromJsonable","literal","modellingKindFromString","hasKindFromJsonable","HAS_KIND_FROM_JSONABLE_DISPATCH","hasDataSpecificationFromJsonable","HAS_DATA_SPECIFICATION_FROM_JSONABLE_DISPATCH","SetterForAdministrativeInformation","embeddedDataSpecifications","version","revision","creator","templateId","setEmbeddedDataSpecificationsFromJsonable","embeddedDataSpecificationFromJsonable","setVersionFromJsonable","setRevisionFromJsonable","setCreatorFromJsonable","setTemplateIdFromJsonable","administrativeInformationFromJsonable","SETTER_MAP_FOR_ADMINISTRATIVE_INFORMATION","AdministrativeInformation","qualifiableFromJsonable","QUALIFIABLE_FROM_JSONABLE_DISPATCH","qualifierKindFromJsonable","qualifierKindFromString","SetterForQualifier","kind","type","valueId","setKindFromJsonable","setTypeFromJsonable","setValueIdFromJsonable","qualifierFromJsonable","SETTER_MAP_FOR_QUALIFIER","Qualifier","SetterForAssetAdministrationShell","extensions","category","idShort","displayName","description","administration","id","derivedFrom","assetInformation","submodels","setExtensionsFromJsonable","setCategoryFromJsonable","setIdShortFromJsonable","setDisplayNameFromJsonable","langStringNameTypeFromJsonable","setDescriptionFromJsonable","langStringTextTypeFromJsonable","setAdministrationFromJsonable","setIdFromJsonable","setDerivedFromFromJsonable","setAssetInformationFromJsonable","assetInformationFromJsonable","setSubmodelsFromJsonable","assetAdministrationShellFromJsonable","SETTER_MAP_FOR_ASSET_ADMINISTRATION_SHELL","AssetAdministrationShell","SetterForAssetInformation","assetKind","globalAssetId","specificAssetIds","assetType","defaultThumbnail","setAssetKindFromJsonable","assetKindFromJsonable","setGlobalAssetIdFromJsonable","setSpecificAssetIdsFromJsonable","specificAssetIdFromJsonable","setAssetTypeFromJsonable","setDefaultThumbnailFromJsonable","resourceFromJsonable","SETTER_MAP_FOR_ASSET_INFORMATION","AssetInformation","SetterForResource","contentType","setPathFromJsonable","setContentTypeFromJsonable","SETTER_MAP_FOR_RESOURCE","Resource","assetKindFromString","SetterForSpecificAssetId","externalSubjectId","setExternalSubjectIdFromJsonable","SETTER_MAP_FOR_SPECIFIC_ASSET_ID","SpecificAssetId","SetterForSubmodel","qualifiers","submodelElements","setQualifiersFromJsonable","setSubmodelElementsFromJsonable","submodelElementFromJsonable","submodelFromJsonable","SETTER_MAP_FOR_SUBMODEL","Submodel","SUBMODEL_ELEMENT_FROM_JSONABLE_DISPATCH","relationshipElementFromJsonable","RELATIONSHIP_ELEMENT_FROM_JSONABLE_DISPATCH","SetterForRelationshipElement","first","second","setFirstFromJsonable","setSecondFromJsonable","relationshipElementFromJsonableWithoutDispatch","SETTER_MAP_FOR_RELATIONSHIP_ELEMENT","RelationshipElement","aasSubmodelElementsFromJsonable","aasSubmodelElementsFromString","SetterForSubmodelElementList","orderRelevant","semanticIdListElement","typeValueListElement","valueTypeListElement","setOrderRelevantFromJsonable","setSemanticIdListElementFromJsonable","setTypeValueListElementFromJsonable","setValueTypeListElementFromJsonable","submodelElementListFromJsonable","SETTER_MAP_FOR_SUBMODEL_ELEMENT_LIST","SubmodelElementList","SetterForSubmodelElementCollection","submodelElementCollectionFromJsonable","SETTER_MAP_FOR_SUBMODEL_ELEMENT_COLLECTION","SubmodelElementCollection","dataElementFromJsonable","DATA_ELEMENT_FROM_JSONABLE_DISPATCH","SetterForProperty","propertyFromJsonable","SETTER_MAP_FOR_PROPERTY","Property","SetterForMultiLanguageProperty","multiLanguagePropertyFromJsonable","SETTER_MAP_FOR_MULTI_LANGUAGE_PROPERTY","MultiLanguageProperty","SetterForRange","min","max","setMinFromJsonable","setMaxFromJsonable","rangeFromJsonable","SETTER_MAP_FOR_RANGE","Range","SetterForReferenceElement","referenceElementFromJsonable","SETTER_MAP_FOR_REFERENCE_ELEMENT","ReferenceElement","SetterForBlob","blobFromJsonable","SETTER_MAP_FOR_BLOB","Blob","SetterForFile","fileFromJsonable","SETTER_MAP_FOR_FILE","File","SetterForAnnotatedRelationshipElement","annotations","setAnnotationsFromJsonable","annotatedRelationshipElementFromJsonable","SETTER_MAP_FOR_ANNOTATED_RELATIONSHIP_ELEMENT","AnnotatedRelationshipElement","SetterForEntity","statements","entityType","setStatementsFromJsonable","setEntityTypeFromJsonable","entityTypeFromJsonable","entityFromJsonable","SETTER_MAP_FOR_ENTITY","Entity","entityTypeFromString","directionFromJsonable","directionFromString","stateOfEventFromJsonable","stateOfEventFromString","SetterForEventPayload","source","sourceSemanticId","observableReference","observableSemanticId","topic","subjectId","timeStamp","payload","setSourceFromJsonable","setSourceSemanticIdFromJsonable","setObservableReferenceFromJsonable","setObservableSemanticIdFromJsonable","setTopicFromJsonable","setSubjectIdFromJsonable","setTimeStampFromJsonable","setPayloadFromJsonable","eventPayloadFromJsonable","SETTER_MAP_FOR_EVENT_PAYLOAD","EventPayload","eventElementFromJsonable","EVENT_ELEMENT_FROM_JSONABLE_DISPATCH","SetterForBasicEventElement","observed","direction","state","messageTopic","messageBroker","lastUpdate","minInterval","maxInterval","setObservedFromJsonable","setDirectionFromJsonable","setStateFromJsonable","setMessageTopicFromJsonable","setMessageBrokerFromJsonable","setLastUpdateFromJsonable","setMinIntervalFromJsonable","setMaxIntervalFromJsonable","basicEventElementFromJsonable","SETTER_MAP_FOR_BASIC_EVENT_ELEMENT","BasicEventElement","SetterForOperation","inputVariables","outputVariables","inoutputVariables","setInputVariablesFromJsonable","operationVariableFromJsonable","setOutputVariablesFromJsonable","setInoutputVariablesFromJsonable","operationFromJsonable","SETTER_MAP_FOR_OPERATION","Operation","SetterForOperationVariable","SETTER_MAP_FOR_OPERATION_VARIABLE","OperationVariable","SetterForCapability","capabilityFromJsonable","SETTER_MAP_FOR_CAPABILITY","Capability","SetterForConceptDescription","isCaseOf","setIsCaseOfFromJsonable","conceptDescriptionFromJsonable","SETTER_MAP_FOR_CONCEPT_DESCRIPTION","ConceptDescription","referenceTypesFromJsonable","referenceTypesFromString","SetterForReference","referredSemanticId","keys","setReferredSemanticIdFromJsonable","setKeysFromJsonable","keyFromJsonable","SETTER_MAP_FOR_REFERENCE","Reference","SetterForKey","keyTypesFromJsonable","SETTER_MAP_FOR_KEY","Key","keyTypesFromString","dataTypeDefXsdFromString","abstractLangStringFromJsonable","ABSTRACT_LANG_STRING_FROM_JSONABLE_DISPATCH","SetterForLangStringNameType","language","text","setLanguageFromJsonable","setTextFromJsonable","SETTER_MAP_FOR_LANG_STRING_NAME_TYPE","LangStringNameType","SetterForLangStringTextType","SETTER_MAP_FOR_LANG_STRING_TEXT_TYPE","LangStringTextType","SetterForEnvironment","assetAdministrationShells","conceptDescriptions","setAssetAdministrationShellsFromJsonable","setConceptDescriptionsFromJsonable","environmentFromJsonable","SETTER_MAP_FOR_ENVIRONMENT","Environment","dataSpecificationContentFromJsonable","DATA_SPECIFICATION_CONTENT_FROM_JSONABLE_DISPATCH","SetterForEmbeddedDataSpecification","dataSpecificationContent","dataSpecification","setDataSpecificationContentFromJsonable","setDataSpecificationFromJsonable","SETTER_MAP_FOR_EMBEDDED_DATA_SPECIFICATION","EmbeddedDataSpecification","dataTypeIec61360FromJsonable","dataTypeIec61360FromString","SetterForLevelType","nom","typ","setNomFromJsonable","setTypFromJsonable","levelTypeFromJsonable","SETTER_MAP_FOR_LEVEL_TYPE","LevelType","SetterForValueReferencePair","valueReferencePairFromJsonable","SETTER_MAP_FOR_VALUE_REFERENCE_PAIR","ValueReferencePair","SetterForValueList","valueReferencePairs","setValueReferencePairsFromJsonable","valueListFromJsonable","SETTER_MAP_FOR_VALUE_LIST","ValueList","SetterForLangStringPreferredNameTypeIec61360","langStringPreferredNameTypeIec61360FromJsonable","SETTER_MAP_FOR_LANG_STRING_PREFERRED_NAME_TYPE_IEC_61360","LangStringPreferredNameTypeIec61360","SetterForLangStringShortNameTypeIec61360","langStringShortNameTypeIec61360FromJsonable","SETTER_MAP_FOR_LANG_STRING_SHORT_NAME_TYPE_IEC_61360","LangStringShortNameTypeIec61360","SetterForLangStringDefinitionTypeIec61360","langStringDefinitionTypeIec61360FromJsonable","SETTER_MAP_FOR_LANG_STRING_DEFINITION_TYPE_IEC_61360","LangStringDefinitionTypeIec61360","SetterForDataSpecificationIec61360","preferredName","shortName","unit","unitId","sourceOfDefinition","symbol","dataType","definition","valueFormat","valueList","levelType","setPreferredNameFromJsonable","setShortNameFromJsonable","setUnitFromJsonable","setUnitIdFromJsonable","setSourceOfDefinitionFromJsonable","setSymbolFromJsonable","setDataTypeFromJsonable","setDefinitionFromJsonable","setValueFormatFromJsonable","setValueListFromJsonable","setLevelTypeFromJsonable","dataSpecificationIec61360FromJsonable","SETTER_MAP_FOR_DATA_SPECIFICATION_IEC_61360","DataSpecificationIec61360","Map","prototype","Serializer","AbstractTransformer","transformExtension","that","transform","supplementalSemanticIdsArray","item","mustDataTypeDefXsdToString","refersToArray","transformAdministrativeInformation","embeddedDataSpecificationsArray","transformQualifier","mustQualifierKindToString","transformAssetAdministrationShell","extensionsArray","displayNameArray","descriptionArray","submodelsArray","transformAssetInformation","mustAssetKindToString","specificAssetIdsArray","transformResource","transformSpecificAssetId","transformSubmodel","mustModellingKindToString","qualifiersArray","submodelElementsArray","transformRelationshipElement","transformSubmodelElementList","mustAasSubmodelElementsToString","valueArray","transformSubmodelElementCollection","transformProperty","transformMultiLanguageProperty","transformRange","transformReferenceElement","transformBlob","base64Encode","transformFile","transformAnnotatedRelationshipElement","annotationsArray","transformEntity","statementsArray","mustEntityTypeToString","transformEventPayload","transformBasicEventElement","mustDirectionToString","mustStateOfEventToString","transformOperation","inputVariablesArray","outputVariablesArray","inoutputVariablesArray","transformOperationVariable","transformCapability","transformConceptDescription","isCaseOfArray","transformReference","mustReferenceTypesToString","keysArray","transformKey","mustKeyTypesToString","transformLangStringNameType","transformLangStringTextType","transformEnvironment","assetAdministrationShellsArray","conceptDescriptionsArray","transformEmbeddedDataSpecification","transformLevelType","transformValueReferencePair","transformValueList","valueReferencePairsArray","transformLangStringPreferredNameTypeIec61360","transformLangStringShortNameTypeIec61360","transformLangStringDefinitionTypeIec61360","transformDataSpecificationIec61360","preferredNameArray","shortNameArray","mustDataTypeIec61360ToString","definitionArray","SERIALIZER","toJsonable"],"sources":["../../../src/jsonization.ts"],"sourcesContent":["/**\n * Provide de/serialization of AAS classes to/from JSON.\n *\n * We can not use one-pass deserialization for JSON since the object\n * properties do not have fixed order, and hence we can not read\n * `modelType` property ahead of the remaining properties.\n */\n\n// This code has been automatically generated by aas-core-codegen.\n// Do NOT edit or append.\n\nimport * as AasCommon from \"./common\";\nimport * as AasTypes from \"./types\";\nimport * as AasStringification from \"./stringification\";\n\nexport type JsonValue = string | number | boolean | JsonObject | JsonArray;\n\nexport type JsonArray = Iterable<JsonValue>;\nexport type JsonObject = { [prop: string]: JsonValue };\n\n/**\n * Represent a property on a path to the erroneous value.\n */\nexport class PropertySegment {\n  /**\n   * Instance that contains the property\n   */\n  readonly instance: JsonObject;\n\n  /**\n   * Name of the property\n   */\n  readonly name: string;\n\n  constructor(instance: JsonObject, name: string) {\n    this.instance = instance;\n    this.name = name;\n  }\n}\n\n/**\n * Represent an index access on a path to the erroneous value.\n */\nexport class IndexSegment {\n  /**\n   * Container that contains the item\n   */\n  readonly container: JsonArray;\n\n  /**\n   * Index of the item\n   */\n  readonly index: number;\n\n  constructor(container: JsonArray, index: number) {\n    if (!Number.isInteger(index)) {\n      throw new Error(`Expected an integer for the index, but got: ${index}`);\n    }\n\n    this.container = container;\n    this.index = index;\n  }\n}\n\nexport type Segment = PropertySegment | IndexSegment;\n\n/**\n * Represent the relative path to the erroneous value.\n */\nexport class Path {\n  private readonly _segments = new Array<Segment>();\n\n  /**\n   * Get the segments of the path.\n   */\n  segments(): Array<Segment> {\n    return this._segments;\n  }\n\n  /**\n   * Insert the `segment` in front of the {@link segments}.\n   *\n   * @param segment - segment to be prepended to {@link segments}\n   */\n  prepend(segment: Segment): void {\n    this._segments.unshift(segment);\n  }\n\n  toString(): string {\n    if (this._segments.length === 0) {\n      return \"\";\n    }\n\n    const parts = new Array<string>();\n\n    let segment = this._segments[0];\n\n    if (segment instanceof PropertySegment) {\n      parts.push(segment.name);\n    } else if (segment instanceof IndexSegment) {\n      parts.push(`[${segment.index}]`);\n    } else {\n      throw new Error(`Unexpected segment: ${segment}`);\n    }\n\n    for (let i = 1; i < this._segments.length; i++) {\n      segment = this._segments[i];\n      if (segment instanceof PropertySegment) {\n        parts.push(`.${segment.name}`);\n      } else if (segment instanceof IndexSegment) {\n        parts.push(`[${segment.index}]`);\n      } else {\n        throw new Error(`Unexpected segment: ${segment}`);\n      }\n    }\n\n    return parts.join(\"\");\n  }\n}\n\n// region De-serialization\n\n/**\n * Signal that the JSON de-serialization could not be performed.\n */\nexport class DeserializationError {\n  /**\n   * Human-readable explanation of the error\n   */\n  readonly message: string;\n\n  /**\n   * Relative path to the erroneous value\n   */\n  readonly path: Path;\n\n  constructor(message: string, path: Path | null = null) {\n    this.message = message;\n    this.path = path ?? new Path();\n  }\n}\n\n/**\n * Create an error as {@link common.Either}.\n *\n * @param message - human-readable explanation of the error\n * @returns An {@link common.Either } with the error set\n * @typeParam T - type of the value if there had been no error\n */\nfunction newDeserializationError<T>(\n  message: string\n): AasCommon.Either<T, DeserializationError> {\n  return new AasCommon.Either<T, DeserializationError>(\n    null,\n    new DeserializationError(message)\n  );\n}\n\n/**\n * Parse `jsonable` as a boolean.\n *\n * @param jsonable - to be parsed\n * @returns parsed boolean value, or an error\n */\nfunction booleanFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<boolean, DeserializationError> {\n  // `typeof` seems to be optimized these days, so we use it instead of\n  // literal comparison, see:\n  // https://stackoverflow.com/questions/61786250/is-typeof-faster-than-literal-comparison\n\n  if (jsonable === null) {\n    return newDeserializationError<boolean>(\"Expected a boolean, but got null\");\n  }\n  if (typeof jsonable !== \"boolean\") {\n    return newDeserializationError<boolean>(\n      `Expected a boolean, but got ${typeof jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<boolean, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as an integer.\n *\n * @param jsonable - to be parsed\n * @returns parsed integer value, or an error\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction integerFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<number, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<number>(\"Expected an integer number, but got null\");\n  }\n  if (typeof jsonable !== \"number\") {\n    return newDeserializationError<number>(\n      `Expected an integer number, but got: ${typeof jsonable}`\n    );\n  }\n\n  if (!Number.isInteger(jsonable)) {\n    return newDeserializationError<number>(\n      `Expected an integer number, but got: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<number, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as a number.\n *\n * @param jsonable - to be parsed\n * @returns parsed numeric value, or an error\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction numberFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<number, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<number>(\"Expected a number, but got null\");\n  }\n  if (typeof jsonable !== \"number\") {\n    return newDeserializationError<number>(\n      `Expected a number, but got: ${typeof jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<number, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as a string.\n *\n * @param jsonable - to be parsed\n * @returns parsed string value, or an error\n */\nfunction stringFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<string, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<string>(\"Expected a string, but got null\");\n  }\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<string>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<string, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as a byte array.\n *\n * @param jsonable - to be parsed\n * @returns parsed byte array, or an error\n */\nfunction bytesFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<Uint8Array, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<Uint8Array>(\n      \"Expected a base64-encoded string, but got null\"\n    );\n  }\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<Uint8Array>(\n      `Expected a base64-encoded string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const either = AasCommon.base64Decode(jsonable);\n  if (either.error !== null) {\n    return newDeserializationError<Uint8Array>(either.error);\n  }\n  return new AasCommon.Either<Uint8Array, DeserializationError>(\n    either.mustValue(),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasSemantics}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasSemanticsFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasSemantics, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_SEMANTICS_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      `Unexpected model type for IHasSemantics: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Extension}.\n */\nclass SetterForExtension {\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  name: string | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  value: string | null = null;\n\n  refersTo: Array<AasTypes.Reference> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link name}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.name = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link refersTo}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setRefersToFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.refersTo = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Extension} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Extension},\n * or an error if any\n */\nexport function extensionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Extension, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Extension>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Extension>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Extension>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForExtension();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_EXTENSION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Extension, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.name === null) {\n    return newDeserializationError<AasTypes.Extension>(\n      \"The required property 'name' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Extension, DeserializationError>(\n    new AasTypes.Extension(\n      setter.name,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.valueType,\n      setter.value,\n      setter.refersTo\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasExtensions}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasExtensionsFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasExtensions, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_EXTENSIONS_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      `Unexpected model type for IHasExtensions: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IReferable}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function referableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IReferable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IReferable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IReferable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IReferable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IReferable>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IReferable>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = REFERABLE_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IReferable>(\n      `Unexpected model type for IReferable: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IIdentifiable}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function identifiableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IIdentifiable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = IDENTIFIABLE_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      `Unexpected model type for IIdentifiable: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!ModellingKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function modellingKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ModellingKind, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.ModellingKind>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.modellingKindFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.ModellingKind>(\n      \"Not a valid string representation of \" +\n        `a literal of ModellingKind: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ModellingKind, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasKind, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasKind>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasKind>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_KIND_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      `Unexpected model type for IHasKind: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasDataSpecification}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasDataSpecificationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasDataSpecification, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_DATA_SPECIFICATION_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      `Unexpected model type for IHasDataSpecification: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AdministrativeInformation}.\n */\nclass SetterForAdministrativeInformation {\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  version: string | null = null;\n\n  revision: string | null = null;\n\n  creator: AasTypes.Reference | null = null;\n\n  templateId: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link version}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setVersionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.version = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link revision}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setRevisionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.revision = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link creator}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCreatorFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.creator = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link templateId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTemplateIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.templateId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!AdministrativeInformation} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AdministrativeInformation},\n * or an error if any\n */\nexport function administrativeInformationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AdministrativeInformation, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AdministrativeInformation>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AdministrativeInformation>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AdministrativeInformation>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAdministrativeInformation();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ADMINISTRATIVE_INFORMATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.AdministrativeInformation,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.AdministrativeInformation, DeserializationError>(\n    new AasTypes.AdministrativeInformation(\n      setter.embeddedDataSpecifications,\n      setter.version,\n      setter.revision,\n      setter.creator,\n      setter.templateId\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IQualifiable}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function qualifiableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IQualifiable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = QUALIFIABLE_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      `Unexpected model type for IQualifiable: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!QualifierKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function qualifierKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.QualifierKind, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.QualifierKind>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.qualifierKindFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.QualifierKind>(\n      \"Not a valid string representation of \" +\n        `a literal of QualifierKind: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.QualifierKind, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Qualifier}.\n */\nclass SetterForQualifier {\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  kind: AasTypes.QualifierKind | null = null;\n\n  type: string | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  value: string | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link kind}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setKindFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = qualifierKindFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.kind = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link type}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.type = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Qualifier} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Qualifier},\n * or an error if any\n */\nexport function qualifierFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Qualifier, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Qualifier>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForQualifier();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_QUALIFIER.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Qualifier, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.type === null) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"The required property 'type' is missing\"\n    );\n  }\n\n  if (setter.valueType === null) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"The required property 'valueType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Qualifier, DeserializationError>(\n    new AasTypes.Qualifier(\n      setter.type,\n      setter.valueType,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.kind,\n      setter.value,\n      setter.valueId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AssetAdministrationShell}.\n */\nclass SetterForAssetAdministrationShell {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  administration: AasTypes.AdministrativeInformation | null = null;\n\n  id: string | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  derivedFrom: AasTypes.Reference | null = null;\n\n  assetInformation: AasTypes.AssetInformation | null = null;\n\n  submodels: Array<AasTypes.Reference> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link administration}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAdministrationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = administrativeInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.administration = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link id}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.id = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link derivedFrom}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDerivedFromFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.derivedFrom = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetInformation}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetInformationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = assetInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.assetInformation = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link submodels}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubmodelsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.submodels = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!AssetAdministrationShell} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AssetAdministrationShell},\n * or an error if any\n */\nexport function assetAdministrationShellFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AssetAdministrationShell, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAssetAdministrationShell();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ASSET_ADMINISTRATION_SHELL.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.AssetAdministrationShell,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.id === null) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"The required property 'id' is missing\"\n    );\n  }\n\n  if (setter.assetInformation === null) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"The required property 'assetInformation' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AssetAdministrationShell, DeserializationError>(\n    new AasTypes.AssetAdministrationShell(\n      setter.id,\n      setter.assetInformation,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.administration,\n      setter.embeddedDataSpecifications,\n      setter.derivedFrom,\n      setter.submodels\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AssetInformation}.\n */\nclass SetterForAssetInformation {\n  assetKind: AasTypes.AssetKind | null = null;\n\n  globalAssetId: string | null = null;\n\n  specificAssetIds: Array<AasTypes.SpecificAssetId> | null = null;\n\n  assetType: string | null = null;\n\n  defaultThumbnail: AasTypes.Resource | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetKind}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetKindFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = assetKindFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.assetKind = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link globalAssetId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setGlobalAssetIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.globalAssetId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link specificAssetIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSpecificAssetIdsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.SpecificAssetId>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = specificAssetIdFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.specificAssetIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.assetType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link defaultThumbnail}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDefaultThumbnailFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = resourceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.defaultThumbnail = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!AssetInformation} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AssetInformation},\n * or an error if any\n */\nexport function assetInformationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AssetInformation, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAssetInformation();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ASSET_INFORMATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.AssetInformation, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.assetKind === null) {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      \"The required property 'assetKind' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AssetInformation, DeserializationError>(\n    new AasTypes.AssetInformation(\n      setter.assetKind,\n      setter.globalAssetId,\n      setter.specificAssetIds,\n      setter.assetType,\n      setter.defaultThumbnail\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Resource}.\n */\nclass SetterForResource {\n  path: string | null = null;\n\n  contentType: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link path}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setPathFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.path = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link contentType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setContentTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.contentType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Resource} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Resource},\n * or an error if any\n */\nexport function resourceFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Resource, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Resource>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Resource>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Resource>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForResource();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_RESOURCE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Resource, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.path === null) {\n    return newDeserializationError<AasTypes.Resource>(\n      \"The required property 'path' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Resource, DeserializationError>(\n    new AasTypes.Resource(setter.path, setter.contentType),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!AssetKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function assetKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AssetKind, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.AssetKind>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.assetKindFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.AssetKind>(\n      \"Not a valid string representation of \" + `a literal of AssetKind: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AssetKind, DeserializationError>(literal, null);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!SpecificAssetId}.\n */\nclass SetterForSpecificAssetId {\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  name: string | null = null;\n\n  value: string | null = null;\n\n  externalSubjectId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link name}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.name = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link externalSubjectId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExternalSubjectIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.externalSubjectId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!SpecificAssetId} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!SpecificAssetId},\n * or an error if any\n */\nexport function specificAssetIdFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.SpecificAssetId, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSpecificAssetId();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SPECIFIC_ASSET_ID.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.SpecificAssetId, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.name === null) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"The required property 'name' is missing\"\n    );\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.SpecificAssetId, DeserializationError>(\n    new AasTypes.SpecificAssetId(\n      setter.name,\n      setter.value,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.externalSubjectId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Submodel}.\n */\nclass SetterForSubmodel {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  administration: AasTypes.AdministrativeInformation | null = null;\n\n  id: string | null = null;\n\n  kind: AasTypes.ModellingKind | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  submodelElements: Array<AasTypes.ISubmodelElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link administration}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAdministrationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = administrativeInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.administration = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link id}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.id = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link kind}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setKindFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = modellingKindFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.kind = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link submodelElements}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubmodelElementsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.submodelElements = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Submodel} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Submodel},\n * or an error if any\n */\nexport function submodelFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Submodel, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Submodel>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Submodel>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Submodel>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSubmodel();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SUBMODEL.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Submodel, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.id === null) {\n    return newDeserializationError<AasTypes.Submodel>(\n      \"The required property 'id' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Submodel, DeserializationError>(\n    new AasTypes.Submodel(\n      setter.id,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.administration,\n      setter.kind,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.submodelElements\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!ISubmodelElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function submodelElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ISubmodelElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = SUBMODEL_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      `Unexpected model type for ISubmodelElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IRelationshipElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function relationshipElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IRelationshipElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = RELATIONSHIP_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      `Unexpected model type for IRelationshipElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!RelationshipElement}.\n */\nclass SetterForRelationshipElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  first: AasTypes.Reference | null = null;\n\n  second: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link first}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setFirstFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.first = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link second}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSecondFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.second = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!RelationshipElement} from the JSON-able\n * structure `jsonable`.\n *\n * This function performs no dispatch! It is used to parse the properties\n * as-are, and already assumes the exact model type. Usually, this function\n * is called from within a dispatching function, and you never call it\n * directly. If you want to de-serialize an instance of\n * {@link types!RelationshipElement}, call\n * {@link relationshipElementFromJsonable}.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!RelationshipElement},\n * or an error if any\n */\nfunction relationshipElementFromJsonableWithoutDispatch(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.RelationshipElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForRelationshipElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_RELATIONSHIP_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.RelationshipElement, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.first === null) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"The required property 'first' is missing\"\n    );\n  }\n\n  if (setter.second === null) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"The required property 'second' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.RelationshipElement, DeserializationError>(\n    new AasTypes.RelationshipElement(\n      setter.first,\n      setter.second,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!AasSubmodelElements}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function aasSubmodelElementsFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AasSubmodelElements, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.AasSubmodelElements>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.aasSubmodelElementsFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.AasSubmodelElements>(\n      \"Not a valid string representation of \" +\n        `a literal of AasSubmodelElements: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AasSubmodelElements, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!SubmodelElementList}.\n */\nclass SetterForSubmodelElementList {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  orderRelevant: boolean | null = null;\n\n  semanticIdListElement: AasTypes.Reference | null = null;\n\n  typeValueListElement: AasTypes.AasSubmodelElements | null = null;\n\n  valueTypeListElement: AasTypes.DataTypeDefXsd | null = null;\n\n  value: Array<AasTypes.ISubmodelElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link orderRelevant}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setOrderRelevantFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.orderRelevant = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticIdListElement}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdListElementFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticIdListElement = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link typeValueListElement}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeValueListElementFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = aasSubmodelElementsFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.typeValueListElement = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueTypeListElement}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeListElementFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueTypeListElement = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.value = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!SubmodelElementList} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!SubmodelElementList},\n * or an error if any\n */\nexport function submodelElementListFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.SubmodelElementList, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSubmodelElementList();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SUBMODEL_ELEMENT_LIST.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.SubmodelElementList, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.typeValueListElement === null) {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      \"The required property 'typeValueListElement' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.SubmodelElementList, DeserializationError>(\n    new AasTypes.SubmodelElementList(\n      setter.typeValueListElement,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.orderRelevant,\n      setter.semanticIdListElement,\n      setter.valueTypeListElement,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!SubmodelElementCollection}.\n */\nclass SetterForSubmodelElementCollection {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: Array<AasTypes.ISubmodelElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.value = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!SubmodelElementCollection} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!SubmodelElementCollection},\n * or an error if any\n */\nexport function submodelElementCollectionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.SubmodelElementCollection, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.SubmodelElementCollection>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.SubmodelElementCollection>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.SubmodelElementCollection>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSubmodelElementCollection();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SUBMODEL_ELEMENT_COLLECTION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.SubmodelElementCollection,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.SubmodelElementCollection, DeserializationError>(\n    new AasTypes.SubmodelElementCollection(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IDataElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function dataElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IDataElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IDataElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IDataElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = DATA_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      `Unexpected model type for IDataElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Property}.\n */\nclass SetterForProperty {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  value: string | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Property} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Property},\n * or an error if any\n */\nexport function propertyFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Property, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Property>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Property>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Property>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForProperty();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_PROPERTY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Property, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.valueType === null) {\n    return newDeserializationError<AasTypes.Property>(\n      \"The required property 'valueType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Property, DeserializationError>(\n    new AasTypes.Property(\n      setter.valueType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value,\n      setter.valueId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!MultiLanguageProperty}.\n */\nclass SetterForMultiLanguageProperty {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: Array<AasTypes.LangStringTextType> | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.value = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!MultiLanguageProperty} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!MultiLanguageProperty},\n * or an error if any\n */\nexport function multiLanguagePropertyFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.MultiLanguageProperty, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.MultiLanguageProperty>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.MultiLanguageProperty>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.MultiLanguageProperty>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForMultiLanguageProperty();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_MULTI_LANGUAGE_PROPERTY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.MultiLanguageProperty, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.MultiLanguageProperty, DeserializationError>(\n    new AasTypes.MultiLanguageProperty(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value,\n      setter.valueId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Range}.\n */\nclass SetterForRange {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  min: string | null = null;\n\n  max: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link min}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMinFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.min = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link max}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMaxFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.max = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Range} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Range},\n * or an error if any\n */\nexport function rangeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Range, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Range>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Range>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Range>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForRange();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_RANGE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Range, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.valueType === null) {\n    return newDeserializationError<AasTypes.Range>(\n      \"The required property 'valueType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Range, DeserializationError>(\n    new AasTypes.Range(\n      setter.valueType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.min,\n      setter.max\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ReferenceElement}.\n */\nclass SetterForReferenceElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!ReferenceElement} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ReferenceElement},\n * or an error if any\n */\nexport function referenceElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ReferenceElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ReferenceElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ReferenceElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ReferenceElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForReferenceElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_REFERENCE_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ReferenceElement, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.ReferenceElement, DeserializationError>(\n    new AasTypes.ReferenceElement(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Blob}.\n */\nclass SetterForBlob {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: Uint8Array | null = null;\n\n  contentType: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = bytesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link contentType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setContentTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.contentType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Blob} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Blob},\n * or an error if any\n */\nexport function blobFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Blob, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Blob>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Blob>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Blob>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForBlob();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_BLOB.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Blob, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.contentType === null) {\n    return newDeserializationError<AasTypes.Blob>(\n      \"The required property 'contentType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Blob, DeserializationError>(\n    new AasTypes.Blob(\n      setter.contentType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!File}.\n */\nclass SetterForFile {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: string | null = null;\n\n  contentType: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link contentType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setContentTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.contentType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!File} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!File},\n * or an error if any\n */\nexport function fileFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.File, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.File>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.File>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.File>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForFile();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_FILE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.File, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.contentType === null) {\n    return newDeserializationError<AasTypes.File>(\n      \"The required property 'contentType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.File, DeserializationError>(\n    new AasTypes.File(\n      setter.contentType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AnnotatedRelationshipElement}.\n */\nclass SetterForAnnotatedRelationshipElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  first: AasTypes.Reference | null = null;\n\n  second: AasTypes.Reference | null = null;\n\n  annotations: Array<AasTypes.IDataElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link first}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setFirstFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.first = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link second}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSecondFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.second = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link annotations}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAnnotationsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.IDataElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = dataElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.annotations = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!AnnotatedRelationshipElement} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AnnotatedRelationshipElement},\n * or an error if any\n */\nexport function annotatedRelationshipElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AnnotatedRelationshipElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAnnotatedRelationshipElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ANNOTATED_RELATIONSHIP_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.AnnotatedRelationshipElement,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.first === null) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"The required property 'first' is missing\"\n    );\n  }\n\n  if (setter.second === null) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"The required property 'second' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.AnnotatedRelationshipElement,\n    DeserializationError\n  >(\n    new AasTypes.AnnotatedRelationshipElement(\n      setter.first,\n      setter.second,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.annotations\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Entity}.\n */\nclass SetterForEntity {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  statements: Array<AasTypes.ISubmodelElement> | null = null;\n\n  entityType: AasTypes.EntityType | null = null;\n\n  globalAssetId: string | null = null;\n\n  specificAssetIds: Array<AasTypes.SpecificAssetId> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link statements}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setStatementsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.statements = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link entityType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEntityTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = entityTypeFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.entityType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link globalAssetId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setGlobalAssetIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.globalAssetId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link specificAssetIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSpecificAssetIdsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.SpecificAssetId>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = specificAssetIdFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.specificAssetIds = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Entity} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Entity},\n * or an error if any\n */\nexport function entityFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Entity, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Entity>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Entity>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Entity>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEntity();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ENTITY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Entity, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.entityType === null) {\n    return newDeserializationError<AasTypes.Entity>(\n      \"The required property 'entityType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Entity, DeserializationError>(\n    new AasTypes.Entity(\n      setter.entityType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.statements,\n      setter.globalAssetId,\n      setter.specificAssetIds\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!EntityType}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function entityTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.EntityType, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.EntityType>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.entityTypeFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.EntityType>(\n      \"Not a valid string representation of \" + `a literal of EntityType: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.EntityType, DeserializationError>(literal, null);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!Direction}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function directionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Direction, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.Direction>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.directionFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.Direction>(\n      \"Not a valid string representation of \" + `a literal of Direction: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Direction, DeserializationError>(literal, null);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!StateOfEvent}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function stateOfEventFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.StateOfEvent, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.StateOfEvent>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.stateOfEventFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.StateOfEvent>(\n      \"Not a valid string representation of \" + `a literal of StateOfEvent: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.StateOfEvent, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!EventPayload}.\n */\nclass SetterForEventPayload {\n  source: AasTypes.Reference | null = null;\n\n  sourceSemanticId: AasTypes.Reference | null = null;\n\n  observableReference: AasTypes.Reference | null = null;\n\n  observableSemanticId: AasTypes.Reference | null = null;\n\n  topic: string | null = null;\n\n  subjectId: AasTypes.Reference | null = null;\n\n  timeStamp: string | null = null;\n\n  payload: Uint8Array | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link source}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSourceFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.source = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link sourceSemanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSourceSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.sourceSemanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link observableReference}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setObservableReferenceFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.observableReference = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link observableSemanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setObservableSemanticIdFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.observableSemanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link topic}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTopicFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.topic = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link subjectId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubjectIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.subjectId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link timeStamp}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTimeStampFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.timeStamp = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link payload}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setPayloadFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = bytesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.payload = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!EventPayload} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!EventPayload},\n * or an error if any\n */\nexport function eventPayloadFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.EventPayload, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.EventPayload>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEventPayload();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_EVENT_PAYLOAD.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.EventPayload, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.source === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"The required property 'source' is missing\"\n    );\n  }\n\n  if (setter.observableReference === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"The required property 'observableReference' is missing\"\n    );\n  }\n\n  if (setter.timeStamp === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"The required property 'timeStamp' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.EventPayload, DeserializationError>(\n    new AasTypes.EventPayload(\n      setter.source,\n      setter.observableReference,\n      setter.timeStamp,\n      setter.sourceSemanticId,\n      setter.observableSemanticId,\n      setter.topic,\n      setter.subjectId,\n      setter.payload\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IEventElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function eventElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IEventElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IEventElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IEventElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = EVENT_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      `Unexpected model type for IEventElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!BasicEventElement}.\n */\nclass SetterForBasicEventElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  observed: AasTypes.Reference | null = null;\n\n  direction: AasTypes.Direction | null = null;\n\n  state: AasTypes.StateOfEvent | null = null;\n\n  messageTopic: string | null = null;\n\n  messageBroker: AasTypes.Reference | null = null;\n\n  lastUpdate: string | null = null;\n\n  minInterval: string | null = null;\n\n  maxInterval: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link observed}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setObservedFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.observed = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link direction}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDirectionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = directionFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.direction = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link state}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setStateFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stateOfEventFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.state = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link messageTopic}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMessageTopicFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.messageTopic = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link messageBroker}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMessageBrokerFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.messageBroker = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link lastUpdate}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLastUpdateFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.lastUpdate = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link minInterval}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMinIntervalFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.minInterval = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link maxInterval}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMaxIntervalFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.maxInterval = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!BasicEventElement} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!BasicEventElement},\n * or an error if any\n */\nexport function basicEventElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.BasicEventElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForBasicEventElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_BASIC_EVENT_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.BasicEventElement, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.observed === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"The required property 'observed' is missing\"\n    );\n  }\n\n  if (setter.direction === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"The required property 'direction' is missing\"\n    );\n  }\n\n  if (setter.state === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"The required property 'state' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.BasicEventElement, DeserializationError>(\n    new AasTypes.BasicEventElement(\n      setter.observed,\n      setter.direction,\n      setter.state,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.messageTopic,\n      setter.messageBroker,\n      setter.lastUpdate,\n      setter.minInterval,\n      setter.maxInterval\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Operation}.\n */\nclass SetterForOperation {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  inputVariables: Array<AasTypes.OperationVariable> | null = null;\n\n  outputVariables: Array<AasTypes.OperationVariable> | null = null;\n\n  inoutputVariables: Array<AasTypes.OperationVariable> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link inputVariables}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setInputVariablesFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.OperationVariable>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = operationVariableFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.inputVariables = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link outputVariables}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setOutputVariablesFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.OperationVariable>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = operationVariableFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.outputVariables = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link inoutputVariables}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setInoutputVariablesFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.OperationVariable>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = operationVariableFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.inoutputVariables = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Operation} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Operation},\n * or an error if any\n */\nexport function operationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Operation, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Operation>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Operation>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Operation>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForOperation();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_OPERATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Operation, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.Operation, DeserializationError>(\n    new AasTypes.Operation(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.inputVariables,\n      setter.outputVariables,\n      setter.inoutputVariables\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!OperationVariable}.\n */\nclass SetterForOperationVariable {\n  value: AasTypes.ISubmodelElement | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = submodelElementFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!OperationVariable} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!OperationVariable},\n * or an error if any\n */\nexport function operationVariableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.OperationVariable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForOperationVariable();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_OPERATION_VARIABLE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.OperationVariable, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.OperationVariable, DeserializationError>(\n    new AasTypes.OperationVariable(setter.value),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Capability}.\n */\nclass SetterForCapability {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Capability} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Capability},\n * or an error if any\n */\nexport function capabilityFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Capability, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Capability>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Capability>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Capability>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForCapability();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_CAPABILITY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Capability, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.Capability, DeserializationError>(\n    new AasTypes.Capability(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ConceptDescription}.\n */\nclass SetterForConceptDescription {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  administration: AasTypes.AdministrativeInformation | null = null;\n\n  id: string | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  isCaseOf: Array<AasTypes.Reference> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link administration}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAdministrationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = administrativeInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.administration = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link id}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.id = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link isCaseOf}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIsCaseOfFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.isCaseOf = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!ConceptDescription} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ConceptDescription},\n * or an error if any\n */\nexport function conceptDescriptionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ConceptDescription, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForConceptDescription();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_CONCEPT_DESCRIPTION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ConceptDescription, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.id === null) {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      \"The required property 'id' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ConceptDescription, DeserializationError>(\n    new AasTypes.ConceptDescription(\n      setter.id,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.administration,\n      setter.embeddedDataSpecifications,\n      setter.isCaseOf\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!ReferenceTypes}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function referenceTypesFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ReferenceTypes, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.ReferenceTypes>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.referenceTypesFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.ReferenceTypes>(\n      \"Not a valid string representation of \" +\n        `a literal of ReferenceTypes: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ReferenceTypes, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Reference}.\n */\nclass SetterForReference {\n  type: AasTypes.ReferenceTypes | null = null;\n\n  referredSemanticId: AasTypes.Reference | null = null;\n\n  keys: Array<AasTypes.Key> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link type}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceTypesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.type = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link referredSemanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setReferredSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.referredSemanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link keys}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setKeysFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Key>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = keyFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.keys = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Reference} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Reference},\n * or an error if any\n */\nexport function referenceFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Reference, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Reference>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForReference();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_REFERENCE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Reference, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.type === null) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"The required property 'type' is missing\"\n    );\n  }\n\n  if (setter.keys === null) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"The required property 'keys' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Reference, DeserializationError>(\n    new AasTypes.Reference(setter.type, setter.keys, setter.referredSemanticId),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Key}.\n */\nclass SetterForKey {\n  type: AasTypes.KeyTypes | null = null;\n\n  value: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link type}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = keyTypesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.type = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Key} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Key},\n * or an error if any\n */\nexport function keyFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Key, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Key>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Key>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Key>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForKey();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_KEY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Key, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.type === null) {\n    return newDeserializationError<AasTypes.Key>(\n      \"The required property 'type' is missing\"\n    );\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.Key>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Key, DeserializationError>(\n    new AasTypes.Key(setter.type, setter.value),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!KeyTypes}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function keyTypesFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.KeyTypes, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.KeyTypes>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.keyTypesFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.KeyTypes>(\n      \"Not a valid string representation of \" + `a literal of KeyTypes: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.KeyTypes, DeserializationError>(literal, null);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!DataTypeDefXsd}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function dataTypeDefXsdFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.DataTypeDefXsd, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.DataTypeDefXsd>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.dataTypeDefXsdFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.DataTypeDefXsd>(\n      \"Not a valid string representation of \" +\n        `a literal of DataTypeDefXsd: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.DataTypeDefXsd, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IAbstractLangString}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function abstractLangStringFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IAbstractLangString, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = ABSTRACT_LANG_STRING_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      `Unexpected model type for IAbstractLangString: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringNameType}.\n */\nclass SetterForLangStringNameType {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringNameType} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringNameType},\n * or an error if any\n */\nexport function langStringNameTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringNameType, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringNameType();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_NAME_TYPE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.LangStringNameType, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.LangStringNameType, DeserializationError>(\n    new AasTypes.LangStringNameType(setter.language, setter.text),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringTextType}.\n */\nclass SetterForLangStringTextType {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringTextType} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringTextType},\n * or an error if any\n */\nexport function langStringTextTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringTextType, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringTextType();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_TEXT_TYPE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.LangStringTextType, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.LangStringTextType, DeserializationError>(\n    new AasTypes.LangStringTextType(setter.language, setter.text),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Environment}.\n */\nclass SetterForEnvironment {\n  assetAdministrationShells: Array<AasTypes.AssetAdministrationShell> | null = null;\n\n  submodels: Array<AasTypes.Submodel> | null = null;\n\n  conceptDescriptions: Array<AasTypes.ConceptDescription> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetAdministrationShells}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetAdministrationShellsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.AssetAdministrationShell>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = assetAdministrationShellFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.assetAdministrationShells = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link submodels}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubmodelsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Submodel>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.submodels = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link conceptDescriptions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setConceptDescriptionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ConceptDescription>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = conceptDescriptionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.conceptDescriptions = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Environment} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Environment},\n * or an error if any\n */\nexport function environmentFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Environment, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Environment>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Environment>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Environment>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEnvironment();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ENVIRONMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Environment, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.Environment, DeserializationError>(\n    new AasTypes.Environment(\n      setter.assetAdministrationShells,\n      setter.submodels,\n      setter.conceptDescriptions\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IDataSpecificationContent}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function dataSpecificationContentFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IDataSpecificationContent, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = DATA_SPECIFICATION_CONTENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      `Unexpected model type for IDataSpecificationContent: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!EmbeddedDataSpecification}.\n */\nclass SetterForEmbeddedDataSpecification {\n  dataSpecificationContent: AasTypes.IDataSpecificationContent | null = null;\n\n  dataSpecification: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link dataSpecificationContent}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDataSpecificationContentFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = dataSpecificationContentFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.dataSpecificationContent = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link dataSpecification}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDataSpecificationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.dataSpecification = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!EmbeddedDataSpecification} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!EmbeddedDataSpecification},\n * or an error if any\n */\nexport function embeddedDataSpecificationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.EmbeddedDataSpecification, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEmbeddedDataSpecification();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_EMBEDDED_DATA_SPECIFICATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.EmbeddedDataSpecification,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.dataSpecificationContent === null) {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      \"The required property 'dataSpecificationContent' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.EmbeddedDataSpecification, DeserializationError>(\n    new AasTypes.EmbeddedDataSpecification(\n      setter.dataSpecificationContent,\n      setter.dataSpecification\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!DataTypeIec61360}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function dataTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.DataTypeIec61360, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.DataTypeIec61360>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.dataTypeIec61360FromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.DataTypeIec61360>(\n      \"Not a valid string representation of \" +\n        `a literal of DataTypeIec61360: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.DataTypeIec61360, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LevelType}.\n */\nclass SetterForLevelType {\n  min: boolean | null = null;\n\n  nom: boolean | null = null;\n\n  typ: boolean | null = null;\n\n  max: boolean | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link min}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMinFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.min = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link nom}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setNomFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.nom = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link typ}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.typ = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link max}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMaxFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.max = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LevelType} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LevelType},\n * or an error if any\n */\nexport function levelTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LevelType, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LevelType>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLevelType();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LEVEL_TYPE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.LevelType, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.min === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'min' is missing\"\n    );\n  }\n\n  if (setter.nom === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'nom' is missing\"\n    );\n  }\n\n  if (setter.typ === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'typ' is missing\"\n    );\n  }\n\n  if (setter.max === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'max' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.LevelType, DeserializationError>(\n    new AasTypes.LevelType(setter.min, setter.nom, setter.typ, setter.max),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ValueReferencePair}.\n */\nclass SetterForValueReferencePair {\n  value: string | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!ValueReferencePair} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ValueReferencePair},\n * or an error if any\n */\nexport function valueReferencePairFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ValueReferencePair, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForValueReferencePair();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_VALUE_REFERENCE_PAIR.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ValueReferencePair, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  if (setter.valueId === null) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"The required property 'valueId' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ValueReferencePair, DeserializationError>(\n    new AasTypes.ValueReferencePair(setter.value, setter.valueId),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ValueList}.\n */\nclass SetterForValueList {\n  valueReferencePairs: Array<AasTypes.ValueReferencePair> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueReferencePairs}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueReferencePairsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ValueReferencePair>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = valueReferencePairFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.valueReferencePairs = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!ValueList} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ValueList},\n * or an error if any\n */\nexport function valueListFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ValueList, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ValueList>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ValueList>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ValueList>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForValueList();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_VALUE_LIST.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ValueList, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.valueReferencePairs === null) {\n    return newDeserializationError<AasTypes.ValueList>(\n      \"The required property 'valueReferencePairs' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ValueList, DeserializationError>(\n    new AasTypes.ValueList(setter.valueReferencePairs),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringPreferredNameTypeIec61360}.\n */\nclass SetterForLangStringPreferredNameTypeIec61360 {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringPreferredNameTypeIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringPreferredNameTypeIec61360},\n * or an error if any\n */\nexport function langStringPreferredNameTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<\n  AasTypes.LangStringPreferredNameTypeIec61360,\n  DeserializationError\n> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringPreferredNameTypeIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod =\n      SETTER_MAP_FOR_LANG_STRING_PREFERRED_NAME_TYPE_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.LangStringPreferredNameTypeIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.LangStringPreferredNameTypeIec61360,\n    DeserializationError\n  >(\n    new AasTypes.LangStringPreferredNameTypeIec61360(setter.language, setter.text),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringShortNameTypeIec61360}.\n */\nclass SetterForLangStringShortNameTypeIec61360 {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringShortNameTypeIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringShortNameTypeIec61360},\n * or an error if any\n */\nexport function langStringShortNameTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringShortNameTypeIec61360, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringShortNameTypeIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_SHORT_NAME_TYPE_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.LangStringShortNameTypeIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.LangStringShortNameTypeIec61360,\n    DeserializationError\n  >(new AasTypes.LangStringShortNameTypeIec61360(setter.language, setter.text), null);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringDefinitionTypeIec61360}.\n */\nclass SetterForLangStringDefinitionTypeIec61360 {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringDefinitionTypeIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringDefinitionTypeIec61360},\n * or an error if any\n */\nexport function langStringDefinitionTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringDefinitionTypeIec61360, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringDefinitionTypeIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_DEFINITION_TYPE_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.LangStringDefinitionTypeIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.LangStringDefinitionTypeIec61360,\n    DeserializationError\n  >(new AasTypes.LangStringDefinitionTypeIec61360(setter.language, setter.text), null);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!DataSpecificationIec61360}.\n */\nclass SetterForDataSpecificationIec61360 {\n  preferredName: Array<AasTypes.LangStringPreferredNameTypeIec61360> | null = null;\n\n  shortName: Array<AasTypes.LangStringShortNameTypeIec61360> | null = null;\n\n  unit: string | null = null;\n\n  unitId: AasTypes.Reference | null = null;\n\n  sourceOfDefinition: string | null = null;\n\n  symbol: string | null = null;\n\n  dataType: AasTypes.DataTypeIec61360 | null = null;\n\n  definition: Array<AasTypes.LangStringDefinitionTypeIec61360> | null = null;\n\n  valueFormat: string | null = null;\n\n  valueList: AasTypes.ValueList | null = null;\n\n  value: string | null = null;\n\n  levelType: AasTypes.LevelType | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link preferredName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setPreferredNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringPreferredNameTypeIec61360>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringPreferredNameTypeIec61360FromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.preferredName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link shortName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setShortNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringShortNameTypeIec61360>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringShortNameTypeIec61360FromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.shortName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link unit}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setUnitFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.unit = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link unitId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setUnitIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.unitId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link sourceOfDefinition}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSourceOfDefinitionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.sourceOfDefinition = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link symbol}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSymbolFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.symbol = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link dataType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDataTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeIec61360FromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.dataType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link definition}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDefinitionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringDefinitionTypeIec61360>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringDefinitionTypeIec61360FromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.definition = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueFormat}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFormatFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueFormat = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueList}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueListFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = valueListFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueList = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link levelType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLevelTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = levelTypeFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.levelType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!DataSpecificationIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!DataSpecificationIec61360},\n * or an error if any\n */\nexport function dataSpecificationIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.DataSpecificationIec61360, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForDataSpecificationIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_DATA_SPECIFICATION_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.DataSpecificationIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.preferredName === null) {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      \"The required property 'preferredName' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.DataSpecificationIec61360, DeserializationError>(\n    new AasTypes.DataSpecificationIec61360(\n      setter.preferredName,\n      setter.shortName,\n      setter.unit,\n      setter.unitId,\n      setter.sourceOfDefinition,\n      setter.symbol,\n      setter.dataType,\n      setter.definition,\n      setter.valueFormat,\n      setter.valueList,\n      setter.value,\n      setter.levelType\n    ),\n    null\n  );\n}\n\nconst HAS_SEMANTICS_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasSemantics, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"Extension\", extensionFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Qualifier\", qualifierFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"SpecificAssetId\", specificAssetIdFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_EXTENSION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"semanticId\", SetterForExtension.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForExtension.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"name\", SetterForExtension.prototype.setNameFromJsonable],\n  [\"valueType\", SetterForExtension.prototype.setValueTypeFromJsonable],\n  [\"value\", SetterForExtension.prototype.setValueFromJsonable],\n  [\"refersTo\", SetterForExtension.prototype.setRefersToFromJsonable],\n  [\"modelType\", SetterForExtension.prototype.ignore]\n]);\n\nconst HAS_EXTENSIONS_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasExtensions, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst REFERABLE_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IReferable, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst IDENTIFIABLE_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IIdentifiable, DeserializationError>\n>([\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Submodel\", submodelFromJsonable]\n]);\n\nconst HAS_KIND_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasKind, DeserializationError>\n>([[\"Submodel\", submodelFromJsonable]]);\n\nconst HAS_DATA_SPECIFICATION_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasDataSpecification, DeserializationError>\n>([\n  [\"AdministrativeInformation\", administrativeInformationFromJsonable],\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_ADMINISTRATIVE_INFORMATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"embeddedDataSpecifications\",\n    SetterForAdministrativeInformation.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"version\", SetterForAdministrativeInformation.prototype.setVersionFromJsonable],\n  [\"revision\", SetterForAdministrativeInformation.prototype.setRevisionFromJsonable],\n  [\"creator\", SetterForAdministrativeInformation.prototype.setCreatorFromJsonable],\n  [\n    \"templateId\",\n    SetterForAdministrativeInformation.prototype.setTemplateIdFromJsonable\n  ],\n  [\"modelType\", SetterForAdministrativeInformation.prototype.ignore]\n]);\n\nconst QUALIFIABLE_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IQualifiable, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_QUALIFIER = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"semanticId\", SetterForQualifier.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForQualifier.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"kind\", SetterForQualifier.prototype.setKindFromJsonable],\n  [\"type\", SetterForQualifier.prototype.setTypeFromJsonable],\n  [\"valueType\", SetterForQualifier.prototype.setValueTypeFromJsonable],\n  [\"value\", SetterForQualifier.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForQualifier.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForQualifier.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ASSET_ADMINISTRATION_SHELL = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForAssetAdministrationShell.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForAssetAdministrationShell.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForAssetAdministrationShell.prototype.setIdShortFromJsonable],\n  [\n    \"displayName\",\n    SetterForAssetAdministrationShell.prototype.setDisplayNameFromJsonable\n  ],\n  [\n    \"description\",\n    SetterForAssetAdministrationShell.prototype.setDescriptionFromJsonable\n  ],\n  [\n    \"administration\",\n    SetterForAssetAdministrationShell.prototype.setAdministrationFromJsonable\n  ],\n  [\"id\", SetterForAssetAdministrationShell.prototype.setIdFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForAssetAdministrationShell.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\n    \"derivedFrom\",\n    SetterForAssetAdministrationShell.prototype.setDerivedFromFromJsonable\n  ],\n  [\n    \"assetInformation\",\n    SetterForAssetAdministrationShell.prototype.setAssetInformationFromJsonable\n  ],\n  [\"submodels\", SetterForAssetAdministrationShell.prototype.setSubmodelsFromJsonable],\n  [\"modelType\", SetterForAssetAdministrationShell.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ASSET_INFORMATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"assetKind\", SetterForAssetInformation.prototype.setAssetKindFromJsonable],\n  [\"globalAssetId\", SetterForAssetInformation.prototype.setGlobalAssetIdFromJsonable],\n  [\n    \"specificAssetIds\",\n    SetterForAssetInformation.prototype.setSpecificAssetIdsFromJsonable\n  ],\n  [\"assetType\", SetterForAssetInformation.prototype.setAssetTypeFromJsonable],\n  [\n    \"defaultThumbnail\",\n    SetterForAssetInformation.prototype.setDefaultThumbnailFromJsonable\n  ],\n  [\"modelType\", SetterForAssetInformation.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_RESOURCE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"path\", SetterForResource.prototype.setPathFromJsonable],\n  [\"contentType\", SetterForResource.prototype.setContentTypeFromJsonable],\n  [\"modelType\", SetterForResource.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SPECIFIC_ASSET_ID = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"semanticId\", SetterForSpecificAssetId.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSpecificAssetId.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"name\", SetterForSpecificAssetId.prototype.setNameFromJsonable],\n  [\"value\", SetterForSpecificAssetId.prototype.setValueFromJsonable],\n  [\n    \"externalSubjectId\",\n    SetterForSpecificAssetId.prototype.setExternalSubjectIdFromJsonable\n  ],\n  [\"modelType\", SetterForSpecificAssetId.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SUBMODEL = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForSubmodel.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForSubmodel.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForSubmodel.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForSubmodel.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForSubmodel.prototype.setDescriptionFromJsonable],\n  [\"administration\", SetterForSubmodel.prototype.setAdministrationFromJsonable],\n  [\"id\", SetterForSubmodel.prototype.setIdFromJsonable],\n  [\"kind\", SetterForSubmodel.prototype.setKindFromJsonable],\n  [\"semanticId\", SetterForSubmodel.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSubmodel.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForSubmodel.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForSubmodel.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"submodelElements\", SetterForSubmodel.prototype.setSubmodelElementsFromJsonable],\n  [\"modelType\", SetterForSubmodel.prototype.ignore]\n]);\n\nconst SUBMODEL_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.ISubmodelElement, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst RELATIONSHIP_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IRelationshipElement, DeserializationError>\n>([\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch]\n]);\n\nconst SETTER_MAP_FOR_RELATIONSHIP_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForRelationshipElement.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForRelationshipElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForRelationshipElement.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForRelationshipElement.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForRelationshipElement.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForRelationshipElement.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForRelationshipElement.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForRelationshipElement.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForRelationshipElement.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"first\", SetterForRelationshipElement.prototype.setFirstFromJsonable],\n  [\"second\", SetterForRelationshipElement.prototype.setSecondFromJsonable],\n  [\"modelType\", SetterForRelationshipElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SUBMODEL_ELEMENT_LIST = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForSubmodelElementList.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForSubmodelElementList.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForSubmodelElementList.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForSubmodelElementList.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForSubmodelElementList.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForSubmodelElementList.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSubmodelElementList.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForSubmodelElementList.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForSubmodelElementList.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\n    \"orderRelevant\",\n    SetterForSubmodelElementList.prototype.setOrderRelevantFromJsonable\n  ],\n  [\n    \"semanticIdListElement\",\n    SetterForSubmodelElementList.prototype.setSemanticIdListElementFromJsonable\n  ],\n  [\n    \"typeValueListElement\",\n    SetterForSubmodelElementList.prototype.setTypeValueListElementFromJsonable\n  ],\n  [\n    \"valueTypeListElement\",\n    SetterForSubmodelElementList.prototype.setValueTypeListElementFromJsonable\n  ],\n  [\"value\", SetterForSubmodelElementList.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForSubmodelElementList.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SUBMODEL_ELEMENT_COLLECTION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"extensions\",\n    SetterForSubmodelElementCollection.prototype.setExtensionsFromJsonable\n  ],\n  [\"category\", SetterForSubmodelElementCollection.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForSubmodelElementCollection.prototype.setIdShortFromJsonable],\n  [\n    \"displayName\",\n    SetterForSubmodelElementCollection.prototype.setDisplayNameFromJsonable\n  ],\n  [\n    \"description\",\n    SetterForSubmodelElementCollection.prototype.setDescriptionFromJsonable\n  ],\n  [\n    \"semanticId\",\n    SetterForSubmodelElementCollection.prototype.setSemanticIdFromJsonable\n  ],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSubmodelElementCollection.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\n    \"qualifiers\",\n    SetterForSubmodelElementCollection.prototype.setQualifiersFromJsonable\n  ],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForSubmodelElementCollection.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForSubmodelElementCollection.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForSubmodelElementCollection.prototype.ignore]\n]);\n\nconst DATA_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IDataElement, DeserializationError>\n>([\n  [\"Blob\", blobFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_PROPERTY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForProperty.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForProperty.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForProperty.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForProperty.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForProperty.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForProperty.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForProperty.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForProperty.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForProperty.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"valueType\", SetterForProperty.prototype.setValueTypeFromJsonable],\n  [\"value\", SetterForProperty.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForProperty.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForProperty.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_MULTI_LANGUAGE_PROPERTY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForMultiLanguageProperty.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForMultiLanguageProperty.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForMultiLanguageProperty.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForMultiLanguageProperty.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForMultiLanguageProperty.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForMultiLanguageProperty.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForMultiLanguageProperty.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForMultiLanguageProperty.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForMultiLanguageProperty.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForMultiLanguageProperty.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForMultiLanguageProperty.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForMultiLanguageProperty.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_RANGE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForRange.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForRange.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForRange.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForRange.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForRange.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForRange.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForRange.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForRange.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForRange.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"valueType\", SetterForRange.prototype.setValueTypeFromJsonable],\n  [\"min\", SetterForRange.prototype.setMinFromJsonable],\n  [\"max\", SetterForRange.prototype.setMaxFromJsonable],\n  [\"modelType\", SetterForRange.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_REFERENCE_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForReferenceElement.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForReferenceElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForReferenceElement.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForReferenceElement.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForReferenceElement.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForReferenceElement.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForReferenceElement.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForReferenceElement.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForReferenceElement.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForReferenceElement.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForReferenceElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_BLOB = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForBlob.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForBlob.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForBlob.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForBlob.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForBlob.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForBlob.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForBlob.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForBlob.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForBlob.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForBlob.prototype.setValueFromJsonable],\n  [\"contentType\", SetterForBlob.prototype.setContentTypeFromJsonable],\n  [\"modelType\", SetterForBlob.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_FILE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForFile.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForFile.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForFile.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForFile.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForFile.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForFile.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForFile.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForFile.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForFile.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForFile.prototype.setValueFromJsonable],\n  [\"contentType\", SetterForFile.prototype.setContentTypeFromJsonable],\n  [\"modelType\", SetterForFile.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ANNOTATED_RELATIONSHIP_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"extensions\",\n    SetterForAnnotatedRelationshipElement.prototype.setExtensionsFromJsonable\n  ],\n  [\"category\", SetterForAnnotatedRelationshipElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForAnnotatedRelationshipElement.prototype.setIdShortFromJsonable],\n  [\n    \"displayName\",\n    SetterForAnnotatedRelationshipElement.prototype.setDisplayNameFromJsonable\n  ],\n  [\n    \"description\",\n    SetterForAnnotatedRelationshipElement.prototype.setDescriptionFromJsonable\n  ],\n  [\n    \"semanticId\",\n    SetterForAnnotatedRelationshipElement.prototype.setSemanticIdFromJsonable\n  ],\n  [\n    \"supplementalSemanticIds\",\n    SetterForAnnotatedRelationshipElement.prototype\n      .setSupplementalSemanticIdsFromJsonable\n  ],\n  [\n    \"qualifiers\",\n    SetterForAnnotatedRelationshipElement.prototype.setQualifiersFromJsonable\n  ],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForAnnotatedRelationshipElement.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"first\", SetterForAnnotatedRelationshipElement.prototype.setFirstFromJsonable],\n  [\"second\", SetterForAnnotatedRelationshipElement.prototype.setSecondFromJsonable],\n  [\n    \"annotations\",\n    SetterForAnnotatedRelationshipElement.prototype.setAnnotationsFromJsonable\n  ],\n  [\"modelType\", SetterForAnnotatedRelationshipElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ENTITY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForEntity.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForEntity.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForEntity.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForEntity.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForEntity.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForEntity.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForEntity.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForEntity.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForEntity.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"statements\", SetterForEntity.prototype.setStatementsFromJsonable],\n  [\"entityType\", SetterForEntity.prototype.setEntityTypeFromJsonable],\n  [\"globalAssetId\", SetterForEntity.prototype.setGlobalAssetIdFromJsonable],\n  [\"specificAssetIds\", SetterForEntity.prototype.setSpecificAssetIdsFromJsonable],\n  [\"modelType\", SetterForEntity.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_EVENT_PAYLOAD = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"source\", SetterForEventPayload.prototype.setSourceFromJsonable],\n  [\"sourceSemanticId\", SetterForEventPayload.prototype.setSourceSemanticIdFromJsonable],\n  [\n    \"observableReference\",\n    SetterForEventPayload.prototype.setObservableReferenceFromJsonable\n  ],\n  [\n    \"observableSemanticId\",\n    SetterForEventPayload.prototype.setObservableSemanticIdFromJsonable\n  ],\n  [\"topic\", SetterForEventPayload.prototype.setTopicFromJsonable],\n  [\"subjectId\", SetterForEventPayload.prototype.setSubjectIdFromJsonable],\n  [\"timeStamp\", SetterForEventPayload.prototype.setTimeStampFromJsonable],\n  [\"payload\", SetterForEventPayload.prototype.setPayloadFromJsonable],\n  [\"modelType\", SetterForEventPayload.prototype.ignore]\n]);\n\nconst EVENT_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IEventElement, DeserializationError>\n>([[\"BasicEventElement\", basicEventElementFromJsonable]]);\n\nconst SETTER_MAP_FOR_BASIC_EVENT_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForBasicEventElement.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForBasicEventElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForBasicEventElement.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForBasicEventElement.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForBasicEventElement.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForBasicEventElement.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForBasicEventElement.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForBasicEventElement.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForBasicEventElement.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"observed\", SetterForBasicEventElement.prototype.setObservedFromJsonable],\n  [\"direction\", SetterForBasicEventElement.prototype.setDirectionFromJsonable],\n  [\"state\", SetterForBasicEventElement.prototype.setStateFromJsonable],\n  [\"messageTopic\", SetterForBasicEventElement.prototype.setMessageTopicFromJsonable],\n  [\"messageBroker\", SetterForBasicEventElement.prototype.setMessageBrokerFromJsonable],\n  [\"lastUpdate\", SetterForBasicEventElement.prototype.setLastUpdateFromJsonable],\n  [\"minInterval\", SetterForBasicEventElement.prototype.setMinIntervalFromJsonable],\n  [\"maxInterval\", SetterForBasicEventElement.prototype.setMaxIntervalFromJsonable],\n  [\"modelType\", SetterForBasicEventElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_OPERATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForOperation.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForOperation.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForOperation.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForOperation.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForOperation.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForOperation.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForOperation.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForOperation.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForOperation.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"inputVariables\", SetterForOperation.prototype.setInputVariablesFromJsonable],\n  [\"outputVariables\", SetterForOperation.prototype.setOutputVariablesFromJsonable],\n  [\"inoutputVariables\", SetterForOperation.prototype.setInoutputVariablesFromJsonable],\n  [\"modelType\", SetterForOperation.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_OPERATION_VARIABLE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"value\", SetterForOperationVariable.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForOperationVariable.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_CAPABILITY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForCapability.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForCapability.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForCapability.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForCapability.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForCapability.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForCapability.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForCapability.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForCapability.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForCapability.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"modelType\", SetterForCapability.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_CONCEPT_DESCRIPTION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForConceptDescription.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForConceptDescription.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForConceptDescription.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForConceptDescription.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForConceptDescription.prototype.setDescriptionFromJsonable],\n  [\n    \"administration\",\n    SetterForConceptDescription.prototype.setAdministrationFromJsonable\n  ],\n  [\"id\", SetterForConceptDescription.prototype.setIdFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForConceptDescription.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"isCaseOf\", SetterForConceptDescription.prototype.setIsCaseOfFromJsonable],\n  [\"modelType\", SetterForConceptDescription.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_REFERENCE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"type\", SetterForReference.prototype.setTypeFromJsonable],\n  [\n    \"referredSemanticId\",\n    SetterForReference.prototype.setReferredSemanticIdFromJsonable\n  ],\n  [\"keys\", SetterForReference.prototype.setKeysFromJsonable],\n  [\"modelType\", SetterForReference.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_KEY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"type\", SetterForKey.prototype.setTypeFromJsonable],\n  [\"value\", SetterForKey.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForKey.prototype.ignore]\n]);\n\nconst ABSTRACT_LANG_STRING_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IAbstractLangString, DeserializationError>\n>([\n  [\"LangStringDefinitionTypeIec61360\", langStringDefinitionTypeIec61360FromJsonable],\n  [\"LangStringNameType\", langStringNameTypeFromJsonable],\n  [\n    \"LangStringPreferredNameTypeIec61360\",\n    langStringPreferredNameTypeIec61360FromJsonable\n  ],\n  [\"LangStringShortNameTypeIec61360\", langStringShortNameTypeIec61360FromJsonable],\n  [\"LangStringTextType\", langStringTextTypeFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_NAME_TYPE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"language\", SetterForLangStringNameType.prototype.setLanguageFromJsonable],\n  [\"text\", SetterForLangStringNameType.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringNameType.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_TEXT_TYPE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"language\", SetterForLangStringTextType.prototype.setLanguageFromJsonable],\n  [\"text\", SetterForLangStringTextType.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringTextType.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ENVIRONMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"assetAdministrationShells\",\n    SetterForEnvironment.prototype.setAssetAdministrationShellsFromJsonable\n  ],\n  [\"submodels\", SetterForEnvironment.prototype.setSubmodelsFromJsonable],\n  [\n    \"conceptDescriptions\",\n    SetterForEnvironment.prototype.setConceptDescriptionsFromJsonable\n  ],\n  [\"modelType\", SetterForEnvironment.prototype.ignore]\n]);\n\nconst DATA_SPECIFICATION_CONTENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (\n    JsonValue\n  ) => AasCommon.Either<AasTypes.IDataSpecificationContent, DeserializationError>\n>([[\"DataSpecificationIec61360\", dataSpecificationIec61360FromJsonable]]);\n\nconst SETTER_MAP_FOR_EMBEDDED_DATA_SPECIFICATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"dataSpecificationContent\",\n    SetterForEmbeddedDataSpecification.prototype.setDataSpecificationContentFromJsonable\n  ],\n  [\n    \"dataSpecification\",\n    SetterForEmbeddedDataSpecification.prototype.setDataSpecificationFromJsonable\n  ],\n  [\"modelType\", SetterForEmbeddedDataSpecification.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LEVEL_TYPE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"min\", SetterForLevelType.prototype.setMinFromJsonable],\n  [\"nom\", SetterForLevelType.prototype.setNomFromJsonable],\n  [\"typ\", SetterForLevelType.prototype.setTypFromJsonable],\n  [\"max\", SetterForLevelType.prototype.setMaxFromJsonable],\n  [\"modelType\", SetterForLevelType.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_VALUE_REFERENCE_PAIR = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"value\", SetterForValueReferencePair.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForValueReferencePair.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForValueReferencePair.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_VALUE_LIST = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"valueReferencePairs\",\n    SetterForValueList.prototype.setValueReferencePairsFromJsonable\n  ],\n  [\"modelType\", SetterForValueList.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_PREFERRED_NAME_TYPE_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"language\",\n    SetterForLangStringPreferredNameTypeIec61360.prototype.setLanguageFromJsonable\n  ],\n  [\"text\", SetterForLangStringPreferredNameTypeIec61360.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringPreferredNameTypeIec61360.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_SHORT_NAME_TYPE_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"language\",\n    SetterForLangStringShortNameTypeIec61360.prototype.setLanguageFromJsonable\n  ],\n  [\"text\", SetterForLangStringShortNameTypeIec61360.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringShortNameTypeIec61360.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_DEFINITION_TYPE_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"language\",\n    SetterForLangStringDefinitionTypeIec61360.prototype.setLanguageFromJsonable\n  ],\n  [\"text\", SetterForLangStringDefinitionTypeIec61360.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringDefinitionTypeIec61360.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_DATA_SPECIFICATION_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"preferredName\",\n    SetterForDataSpecificationIec61360.prototype.setPreferredNameFromJsonable\n  ],\n  [\"shortName\", SetterForDataSpecificationIec61360.prototype.setShortNameFromJsonable],\n  [\"unit\", SetterForDataSpecificationIec61360.prototype.setUnitFromJsonable],\n  [\"unitId\", SetterForDataSpecificationIec61360.prototype.setUnitIdFromJsonable],\n  [\n    \"sourceOfDefinition\",\n    SetterForDataSpecificationIec61360.prototype.setSourceOfDefinitionFromJsonable\n  ],\n  [\"symbol\", SetterForDataSpecificationIec61360.prototype.setSymbolFromJsonable],\n  [\"dataType\", SetterForDataSpecificationIec61360.prototype.setDataTypeFromJsonable],\n  [\n    \"definition\",\n    SetterForDataSpecificationIec61360.prototype.setDefinitionFromJsonable\n  ],\n  [\n    \"valueFormat\",\n    SetterForDataSpecificationIec61360.prototype.setValueFormatFromJsonable\n  ],\n  [\"valueList\", SetterForDataSpecificationIec61360.prototype.setValueListFromJsonable],\n  [\"value\", SetterForDataSpecificationIec61360.prototype.setValueFromJsonable],\n  [\"levelType\", SetterForDataSpecificationIec61360.prototype.setLevelTypeFromJsonable],\n  [\"modelType\", SetterForDataSpecificationIec61360.prototype.ignore]\n]);\n\n// endregion\n\n// region Serialization\n\n/**\n * Transform the instance to its JSON-able representation.\n */\nclass Serializer extends AasTypes.AbstractTransformer<JsonObject> {\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformExtension(that: AasTypes.Extension): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    jsonable[\"name\"] = that.name;\n\n    if (that.valueType !== null) {\n      jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n        that.valueType\n      );\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.refersTo !== null) {\n      const refersToArray = new Array<JsonObject>();\n      for (const item of that.refersTo) {\n        refersToArray.push(this.transform(item));\n      }\n      jsonable[\"refersTo\"] = refersToArray;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAdministrativeInformation(\n    that: AasTypes.AdministrativeInformation\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.version !== null) {\n      jsonable[\"version\"] = that.version;\n    }\n\n    if (that.revision !== null) {\n      jsonable[\"revision\"] = that.revision;\n    }\n\n    if (that.creator !== null) {\n      jsonable[\"creator\"] = this.transform(that.creator);\n    }\n\n    if (that.templateId !== null) {\n      jsonable[\"templateId\"] = that.templateId;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformQualifier(that: AasTypes.Qualifier): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.kind !== null) {\n      jsonable[\"kind\"] = AasStringification.mustQualifierKindToString(that.kind);\n    }\n\n    jsonable[\"type\"] = that.type;\n\n    jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n      that.valueType\n    );\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.valueId !== null) {\n      jsonable[\"valueId\"] = this.transform(that.valueId);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAssetAdministrationShell(\n    that: AasTypes.AssetAdministrationShell\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.administration !== null) {\n      jsonable[\"administration\"] = this.transform(that.administration);\n    }\n\n    jsonable[\"id\"] = that.id;\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.derivedFrom !== null) {\n      jsonable[\"derivedFrom\"] = this.transform(that.derivedFrom);\n    }\n\n    jsonable[\"assetInformation\"] = this.transform(that.assetInformation);\n\n    if (that.submodels !== null) {\n      const submodelsArray = new Array<JsonObject>();\n      for (const item of that.submodels) {\n        submodelsArray.push(this.transform(item));\n      }\n      jsonable[\"submodels\"] = submodelsArray;\n    }\n\n    jsonable[\"modelType\"] = \"AssetAdministrationShell\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAssetInformation(that: AasTypes.AssetInformation): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"assetKind\"] = AasStringification.mustAssetKindToString(that.assetKind);\n\n    if (that.globalAssetId !== null) {\n      jsonable[\"globalAssetId\"] = that.globalAssetId;\n    }\n\n    if (that.specificAssetIds !== null) {\n      const specificAssetIdsArray = new Array<JsonObject>();\n      for (const item of that.specificAssetIds) {\n        specificAssetIdsArray.push(this.transform(item));\n      }\n      jsonable[\"specificAssetIds\"] = specificAssetIdsArray;\n    }\n\n    if (that.assetType !== null) {\n      jsonable[\"assetType\"] = that.assetType;\n    }\n\n    if (that.defaultThumbnail !== null) {\n      jsonable[\"defaultThumbnail\"] = this.transform(that.defaultThumbnail);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformResource(that: AasTypes.Resource): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"path\"] = that.path;\n\n    if (that.contentType !== null) {\n      jsonable[\"contentType\"] = that.contentType;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSpecificAssetId(that: AasTypes.SpecificAssetId): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    jsonable[\"name\"] = that.name;\n\n    jsonable[\"value\"] = that.value;\n\n    if (that.externalSubjectId !== null) {\n      jsonable[\"externalSubjectId\"] = this.transform(that.externalSubjectId);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSubmodel(that: AasTypes.Submodel): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.administration !== null) {\n      jsonable[\"administration\"] = this.transform(that.administration);\n    }\n\n    jsonable[\"id\"] = that.id;\n\n    if (that.kind !== null) {\n      jsonable[\"kind\"] = AasStringification.mustModellingKindToString(that.kind);\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.submodelElements !== null) {\n      const submodelElementsArray = new Array<JsonObject>();\n      for (const item of that.submodelElements) {\n        submodelElementsArray.push(this.transform(item));\n      }\n      jsonable[\"submodelElements\"] = submodelElementsArray;\n    }\n\n    jsonable[\"modelType\"] = \"Submodel\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformRelationshipElement(that: AasTypes.RelationshipElement): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"first\"] = this.transform(that.first);\n\n    jsonable[\"second\"] = this.transform(that.second);\n\n    jsonable[\"modelType\"] = \"RelationshipElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSubmodelElementList(that: AasTypes.SubmodelElementList): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.orderRelevant !== null) {\n      jsonable[\"orderRelevant\"] = that.orderRelevant;\n    }\n\n    if (that.semanticIdListElement !== null) {\n      jsonable[\"semanticIdListElement\"] = this.transform(that.semanticIdListElement);\n    }\n\n    jsonable[\"typeValueListElement\"] =\n      AasStringification.mustAasSubmodelElementsToString(that.typeValueListElement);\n\n    if (that.valueTypeListElement !== null) {\n      jsonable[\"valueTypeListElement\"] = AasStringification.mustDataTypeDefXsdToString(\n        that.valueTypeListElement\n      );\n    }\n\n    if (that.value !== null) {\n      const valueArray = new Array<JsonObject>();\n      for (const item of that.value) {\n        valueArray.push(this.transform(item));\n      }\n      jsonable[\"value\"] = valueArray;\n    }\n\n    jsonable[\"modelType\"] = \"SubmodelElementList\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSubmodelElementCollection(\n    that: AasTypes.SubmodelElementCollection\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      const valueArray = new Array<JsonObject>();\n      for (const item of that.value) {\n        valueArray.push(this.transform(item));\n      }\n      jsonable[\"value\"] = valueArray;\n    }\n\n    jsonable[\"modelType\"] = \"SubmodelElementCollection\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformProperty(that: AasTypes.Property): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n      that.valueType\n    );\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.valueId !== null) {\n      jsonable[\"valueId\"] = this.transform(that.valueId);\n    }\n\n    jsonable[\"modelType\"] = \"Property\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformMultiLanguageProperty(that: AasTypes.MultiLanguageProperty): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      const valueArray = new Array<JsonObject>();\n      for (const item of that.value) {\n        valueArray.push(this.transform(item));\n      }\n      jsonable[\"value\"] = valueArray;\n    }\n\n    if (that.valueId !== null) {\n      jsonable[\"valueId\"] = this.transform(that.valueId);\n    }\n\n    jsonable[\"modelType\"] = \"MultiLanguageProperty\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformRange(that: AasTypes.Range): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n      that.valueType\n    );\n\n    if (that.min !== null) {\n      jsonable[\"min\"] = that.min;\n    }\n\n    if (that.max !== null) {\n      jsonable[\"max\"] = that.max;\n    }\n\n    jsonable[\"modelType\"] = \"Range\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformReferenceElement(that: AasTypes.ReferenceElement): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = this.transform(that.value);\n    }\n\n    jsonable[\"modelType\"] = \"ReferenceElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformBlob(that: AasTypes.Blob): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = AasCommon.base64Encode(that.value);\n    }\n\n    jsonable[\"contentType\"] = that.contentType;\n\n    jsonable[\"modelType\"] = \"Blob\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformFile(that: AasTypes.File): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    jsonable[\"contentType\"] = that.contentType;\n\n    jsonable[\"modelType\"] = \"File\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAnnotatedRelationshipElement(\n    that: AasTypes.AnnotatedRelationshipElement\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"first\"] = this.transform(that.first);\n\n    jsonable[\"second\"] = this.transform(that.second);\n\n    if (that.annotations !== null) {\n      const annotationsArray = new Array<JsonObject>();\n      for (const item of that.annotations) {\n        annotationsArray.push(this.transform(item));\n      }\n      jsonable[\"annotations\"] = annotationsArray;\n    }\n\n    jsonable[\"modelType\"] = \"AnnotatedRelationshipElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEntity(that: AasTypes.Entity): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.statements !== null) {\n      const statementsArray = new Array<JsonObject>();\n      for (const item of that.statements) {\n        statementsArray.push(this.transform(item));\n      }\n      jsonable[\"statements\"] = statementsArray;\n    }\n\n    jsonable[\"entityType\"] = AasStringification.mustEntityTypeToString(that.entityType);\n\n    if (that.globalAssetId !== null) {\n      jsonable[\"globalAssetId\"] = that.globalAssetId;\n    }\n\n    if (that.specificAssetIds !== null) {\n      const specificAssetIdsArray = new Array<JsonObject>();\n      for (const item of that.specificAssetIds) {\n        specificAssetIdsArray.push(this.transform(item));\n      }\n      jsonable[\"specificAssetIds\"] = specificAssetIdsArray;\n    }\n\n    jsonable[\"modelType\"] = \"Entity\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEventPayload(that: AasTypes.EventPayload): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"source\"] = this.transform(that.source);\n\n    if (that.sourceSemanticId !== null) {\n      jsonable[\"sourceSemanticId\"] = this.transform(that.sourceSemanticId);\n    }\n\n    jsonable[\"observableReference\"] = this.transform(that.observableReference);\n\n    if (that.observableSemanticId !== null) {\n      jsonable[\"observableSemanticId\"] = this.transform(that.observableSemanticId);\n    }\n\n    if (that.topic !== null) {\n      jsonable[\"topic\"] = that.topic;\n    }\n\n    if (that.subjectId !== null) {\n      jsonable[\"subjectId\"] = this.transform(that.subjectId);\n    }\n\n    jsonable[\"timeStamp\"] = that.timeStamp;\n\n    if (that.payload !== null) {\n      jsonable[\"payload\"] = AasCommon.base64Encode(that.payload);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformBasicEventElement(that: AasTypes.BasicEventElement): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"observed\"] = this.transform(that.observed);\n\n    jsonable[\"direction\"] = AasStringification.mustDirectionToString(that.direction);\n\n    jsonable[\"state\"] = AasStringification.mustStateOfEventToString(that.state);\n\n    if (that.messageTopic !== null) {\n      jsonable[\"messageTopic\"] = that.messageTopic;\n    }\n\n    if (that.messageBroker !== null) {\n      jsonable[\"messageBroker\"] = this.transform(that.messageBroker);\n    }\n\n    if (that.lastUpdate !== null) {\n      jsonable[\"lastUpdate\"] = that.lastUpdate;\n    }\n\n    if (that.minInterval !== null) {\n      jsonable[\"minInterval\"] = that.minInterval;\n    }\n\n    if (that.maxInterval !== null) {\n      jsonable[\"maxInterval\"] = that.maxInterval;\n    }\n\n    jsonable[\"modelType\"] = \"BasicEventElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformOperation(that: AasTypes.Operation): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.inputVariables !== null) {\n      const inputVariablesArray = new Array<JsonObject>();\n      for (const item of that.inputVariables) {\n        inputVariablesArray.push(this.transform(item));\n      }\n      jsonable[\"inputVariables\"] = inputVariablesArray;\n    }\n\n    if (that.outputVariables !== null) {\n      const outputVariablesArray = new Array<JsonObject>();\n      for (const item of that.outputVariables) {\n        outputVariablesArray.push(this.transform(item));\n      }\n      jsonable[\"outputVariables\"] = outputVariablesArray;\n    }\n\n    if (that.inoutputVariables !== null) {\n      const inoutputVariablesArray = new Array<JsonObject>();\n      for (const item of that.inoutputVariables) {\n        inoutputVariablesArray.push(this.transform(item));\n      }\n      jsonable[\"inoutputVariables\"] = inoutputVariablesArray;\n    }\n\n    jsonable[\"modelType\"] = \"Operation\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformOperationVariable(that: AasTypes.OperationVariable): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"value\"] = this.transform(that.value);\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformCapability(that: AasTypes.Capability): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"modelType\"] = \"Capability\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformConceptDescription(that: AasTypes.ConceptDescription): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.administration !== null) {\n      jsonable[\"administration\"] = this.transform(that.administration);\n    }\n\n    jsonable[\"id\"] = that.id;\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.isCaseOf !== null) {\n      const isCaseOfArray = new Array<JsonObject>();\n      for (const item of that.isCaseOf) {\n        isCaseOfArray.push(this.transform(item));\n      }\n      jsonable[\"isCaseOf\"] = isCaseOfArray;\n    }\n\n    jsonable[\"modelType\"] = \"ConceptDescription\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformReference(that: AasTypes.Reference): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"type\"] = AasStringification.mustReferenceTypesToString(that.type);\n\n    if (that.referredSemanticId !== null) {\n      jsonable[\"referredSemanticId\"] = this.transform(that.referredSemanticId);\n    }\n\n    const keysArray = new Array<JsonObject>();\n    for (const item of that.keys) {\n      keysArray.push(this.transform(item));\n    }\n    jsonable[\"keys\"] = keysArray;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformKey(that: AasTypes.Key): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"type\"] = AasStringification.mustKeyTypesToString(that.type);\n\n    jsonable[\"value\"] = that.value;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringNameType(that: AasTypes.LangStringNameType): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringTextType(that: AasTypes.LangStringTextType): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEnvironment(that: AasTypes.Environment): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.assetAdministrationShells !== null) {\n      const assetAdministrationShellsArray = new Array<JsonObject>();\n      for (const item of that.assetAdministrationShells) {\n        assetAdministrationShellsArray.push(this.transform(item));\n      }\n      jsonable[\"assetAdministrationShells\"] = assetAdministrationShellsArray;\n    }\n\n    if (that.submodels !== null) {\n      const submodelsArray = new Array<JsonObject>();\n      for (const item of that.submodels) {\n        submodelsArray.push(this.transform(item));\n      }\n      jsonable[\"submodels\"] = submodelsArray;\n    }\n\n    if (that.conceptDescriptions !== null) {\n      const conceptDescriptionsArray = new Array<JsonObject>();\n      for (const item of that.conceptDescriptions) {\n        conceptDescriptionsArray.push(this.transform(item));\n      }\n      jsonable[\"conceptDescriptions\"] = conceptDescriptionsArray;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEmbeddedDataSpecification(\n    that: AasTypes.EmbeddedDataSpecification\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"dataSpecificationContent\"] = this.transform(\n      that.dataSpecificationContent\n    );\n\n    if (that.dataSpecification !== null) {\n      jsonable[\"dataSpecification\"] = this.transform(that.dataSpecification);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLevelType(that: AasTypes.LevelType): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"min\"] = that.min;\n\n    jsonable[\"nom\"] = that.nom;\n\n    jsonable[\"typ\"] = that.typ;\n\n    jsonable[\"max\"] = that.max;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformValueReferencePair(that: AasTypes.ValueReferencePair): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"value\"] = that.value;\n\n    jsonable[\"valueId\"] = this.transform(that.valueId);\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformValueList(that: AasTypes.ValueList): JsonObject {\n    const jsonable: JsonObject = {};\n\n    const valueReferencePairsArray = new Array<JsonObject>();\n    for (const item of that.valueReferencePairs) {\n      valueReferencePairsArray.push(this.transform(item));\n    }\n    jsonable[\"valueReferencePairs\"] = valueReferencePairsArray;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringPreferredNameTypeIec61360(\n    that: AasTypes.LangStringPreferredNameTypeIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringShortNameTypeIec61360(\n    that: AasTypes.LangStringShortNameTypeIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringDefinitionTypeIec61360(\n    that: AasTypes.LangStringDefinitionTypeIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformDataSpecificationIec61360(\n    that: AasTypes.DataSpecificationIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    const preferredNameArray = new Array<JsonObject>();\n    for (const item of that.preferredName) {\n      preferredNameArray.push(this.transform(item));\n    }\n    jsonable[\"preferredName\"] = preferredNameArray;\n\n    if (that.shortName !== null) {\n      const shortNameArray = new Array<JsonObject>();\n      for (const item of that.shortName) {\n        shortNameArray.push(this.transform(item));\n      }\n      jsonable[\"shortName\"] = shortNameArray;\n    }\n\n    if (that.unit !== null) {\n      jsonable[\"unit\"] = that.unit;\n    }\n\n    if (that.unitId !== null) {\n      jsonable[\"unitId\"] = this.transform(that.unitId);\n    }\n\n    if (that.sourceOfDefinition !== null) {\n      jsonable[\"sourceOfDefinition\"] = that.sourceOfDefinition;\n    }\n\n    if (that.symbol !== null) {\n      jsonable[\"symbol\"] = that.symbol;\n    }\n\n    if (that.dataType !== null) {\n      jsonable[\"dataType\"] = AasStringification.mustDataTypeIec61360ToString(\n        that.dataType\n      );\n    }\n\n    if (that.definition !== null) {\n      const definitionArray = new Array<JsonObject>();\n      for (const item of that.definition) {\n        definitionArray.push(this.transform(item));\n      }\n      jsonable[\"definition\"] = definitionArray;\n    }\n\n    if (that.valueFormat !== null) {\n      jsonable[\"valueFormat\"] = that.valueFormat;\n    }\n\n    if (that.valueList !== null) {\n      jsonable[\"valueList\"] = this.transform(that.valueList);\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.levelType !== null) {\n      jsonable[\"levelType\"] = this.transform(that.levelType);\n    }\n\n    jsonable[\"modelType\"] = \"DataSpecificationIec61360\";\n\n    return jsonable;\n  }\n}\n\nconst SERIALIZER = new Serializer();\n\n/**\n * Convert `that` to a JSON-able structure.\n *\n * @param that - AAS data to be recursively converted to a JSON-able structure\n * @returns\n * JSON-able structure which can be further processed with, say,\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify|JSON.stringify})\n */\nexport function toJsonable(that: AasTypes.Class): JsonObject {\n  return SERIALIZER.transform(that);\n}\n\n// endregion\n\n// This code has been automatically generated by aas-core-codegen.\n// Do NOT edit or append.\n"],"mappings":"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"}