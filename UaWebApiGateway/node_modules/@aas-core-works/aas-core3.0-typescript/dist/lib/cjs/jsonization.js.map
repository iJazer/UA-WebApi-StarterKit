{"version":3,"file":"jsonization.js","names":["AasCommon","_interopRequireWildcard","require","AasTypes","AasStringification","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_inherits","subClass","superClass","TypeError","create","constructor","value","writable","configurable","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","_e","f","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","toString","slice","name","from","test","arr","len","arr2","_defineProperty","_toPropertyKey","enumerable","_defineProperties","target","props","descriptor","_createClass","Constructor","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_classCallCheck","instance","PropertySegment","exports","IndexSegment","container","index","isInteger","Error","concat","Path","segments","_segments","prepend","segment","unshift","parts","push","join","DeserializationError","message","path","newDeserializationError","Either","booleanFromJsonable","jsonable","integerFromJsonable","numberFromJsonable","stringFromJsonable","bytesFromJsonable","either","base64Decode","error","mustValue","hasSemanticsFromJsonable","modelType","dispatch","HAS_SEMANTICS_FROM_JSONABLE_DISPATCH","SetterForExtension","ignore","setSemanticIdFromJsonable","parsedOrError","referenceFromJsonable","semanticId","setSupplementalSemanticIdsFromJsonable","iterable","items","_iterator","_step","jsonableItem","itemOrError","supplementalSemanticIds","setNameFromJsonable","setValueTypeFromJsonable","dataTypeDefXsdFromJsonable","valueType","setValueFromJsonable","setRefersToFromJsonable","_iterator2","_step2","refersTo","extensionFromJsonable","setter","jsonableValue","setterMethod","SETTER_MAP_FOR_EXTENSION","Extension","hasExtensionsFromJsonable","HAS_EXTENSIONS_FROM_JSONABLE_DISPATCH","referableFromJsonable","REFERABLE_FROM_JSONABLE_DISPATCH","identifiableFromJsonable","IDENTIFIABLE_FROM_JSONABLE_DISPATCH","modellingKindFromJsonable","literal","modellingKindFromString","hasKindFromJsonable","HAS_KIND_FROM_JSONABLE_DISPATCH","hasDataSpecificationFromJsonable","HAS_DATA_SPECIFICATION_FROM_JSONABLE_DISPATCH","SetterForAdministrativeInformation","setEmbeddedDataSpecificationsFromJsonable","_iterator3","_step3","embeddedDataSpecificationFromJsonable","embeddedDataSpecifications","setVersionFromJsonable","version","setRevisionFromJsonable","revision","setCreatorFromJsonable","creator","setTemplateIdFromJsonable","templateId","administrativeInformationFromJsonable","SETTER_MAP_FOR_ADMINISTRATIVE_INFORMATION","AdministrativeInformation","qualifiableFromJsonable","QUALIFIABLE_FROM_JSONABLE_DISPATCH","qualifierKindFromJsonable","qualifierKindFromString","SetterForQualifier","_iterator4","_step4","setKindFromJsonable","kind","setTypeFromJsonable","type","setValueIdFromJsonable","valueId","qualifierFromJsonable","SETTER_MAP_FOR_QUALIFIER","Qualifier","SetterForAssetAdministrationShell","setExtensionsFromJsonable","_iterator5","_step5","extensions","setCategoryFromJsonable","category","setIdShortFromJsonable","idShort","setDisplayNameFromJsonable","_iterator6","_step6","langStringNameTypeFromJsonable","displayName","setDescriptionFromJsonable","_iterator7","_step7","langStringTextTypeFromJsonable","description","setAdministrationFromJsonable","administration","setIdFromJsonable","id","_iterator8","_step8","setDerivedFromFromJsonable","derivedFrom","setAssetInformationFromJsonable","assetInformationFromJsonable","assetInformation","setSubmodelsFromJsonable","_iterator9","_step9","submodels","assetAdministrationShellFromJsonable","SETTER_MAP_FOR_ASSET_ADMINISTRATION_SHELL","AssetAdministrationShell","SetterForAssetInformation","setAssetKindFromJsonable","assetKindFromJsonable","assetKind","setGlobalAssetIdFromJsonable","globalAssetId","setSpecificAssetIdsFromJsonable","_iterator10","_step10","specificAssetIdFromJsonable","specificAssetIds","setAssetTypeFromJsonable","assetType","setDefaultThumbnailFromJsonable","resourceFromJsonable","defaultThumbnail","SETTER_MAP_FOR_ASSET_INFORMATION","AssetInformation","SetterForResource","setPathFromJsonable","setContentTypeFromJsonable","contentType","SETTER_MAP_FOR_RESOURCE","Resource","assetKindFromString","SetterForSpecificAssetId","_iterator11","_step11","setExternalSubjectIdFromJsonable","externalSubjectId","SETTER_MAP_FOR_SPECIFIC_ASSET_ID","SpecificAssetId","SetterForSubmodel","_iterator12","_step12","_iterator13","_step13","_iterator14","_step14","_iterator15","_step15","setQualifiersFromJsonable","_iterator16","_step16","qualifiers","_iterator17","_step17","setSubmodelElementsFromJsonable","_iterator18","_step18","submodelElementFromJsonable","submodelElements","submodelFromJsonable","SETTER_MAP_FOR_SUBMODEL","Submodel","SUBMODEL_ELEMENT_FROM_JSONABLE_DISPATCH","relationshipElementFromJsonable","RELATIONSHIP_ELEMENT_FROM_JSONABLE_DISPATCH","SetterForRelationshipElement","_iterator19","_step19","_iterator20","_step20","_iterator21","_step21","_iterator22","_step22","_iterator23","_step23","_iterator24","_step24","setFirstFromJsonable","first","setSecondFromJsonable","second","relationshipElementFromJsonableWithoutDispatch","SETTER_MAP_FOR_RELATIONSHIP_ELEMENT","RelationshipElement","aasSubmodelElementsFromJsonable","aasSubmodelElementsFromString","SetterForSubmodelElementList","_iterator25","_step25","_iterator26","_step26","_iterator27","_step27","_iterator28","_step28","_iterator29","_step29","_iterator30","_step30","setOrderRelevantFromJsonable","orderRelevant","setSemanticIdListElementFromJsonable","semanticIdListElement","setTypeValueListElementFromJsonable","typeValueListElement","setValueTypeListElementFromJsonable","valueTypeListElement","_iterator31","_step31","submodelElementListFromJsonable","SETTER_MAP_FOR_SUBMODEL_ELEMENT_LIST","SubmodelElementList","SetterForSubmodelElementCollection","_iterator32","_step32","_iterator33","_step33","_iterator34","_step34","_iterator35","_step35","_iterator36","_step36","_iterator37","_step37","_iterator38","_step38","submodelElementCollectionFromJsonable","SETTER_MAP_FOR_SUBMODEL_ELEMENT_COLLECTION","SubmodelElementCollection","dataElementFromJsonable","DATA_ELEMENT_FROM_JSONABLE_DISPATCH","SetterForProperty","_iterator39","_step39","_iterator40","_step40","_iterator41","_step41","_iterator42","_step42","_iterator43","_step43","_iterator44","_step44","propertyFromJsonable","SETTER_MAP_FOR_PROPERTY","Property","SetterForMultiLanguageProperty","_iterator45","_step45","_iterator46","_step46","_iterator47","_step47","_iterator48","_step48","_iterator49","_step49","_iterator50","_step50","_iterator51","_step51","multiLanguagePropertyFromJsonable","SETTER_MAP_FOR_MULTI_LANGUAGE_PROPERTY","MultiLanguageProperty","SetterForRange","_iterator52","_step52","_iterator53","_step53","_iterator54","_step54","_iterator55","_step55","_iterator56","_step56","_iterator57","_step57","setMinFromJsonable","min","setMaxFromJsonable","max","rangeFromJsonable","SETTER_MAP_FOR_RANGE","Range","SetterForReferenceElement","_iterator58","_step58","_iterator59","_step59","_iterator60","_step60","_iterator61","_step61","_iterator62","_step62","_iterator63","_step63","referenceElementFromJsonable","SETTER_MAP_FOR_REFERENCE_ELEMENT","ReferenceElement","SetterForBlob","_iterator64","_step64","_iterator65","_step65","_iterator66","_step66","_iterator67","_step67","_iterator68","_step68","_iterator69","_step69","blobFromJsonable","SETTER_MAP_FOR_BLOB","Blob","SetterForFile","_iterator70","_step70","_iterator71","_step71","_iterator72","_step72","_iterator73","_step73","_iterator74","_step74","_iterator75","_step75","fileFromJsonable","SETTER_MAP_FOR_FILE","File","SetterForAnnotatedRelationshipElement","_iterator76","_step76","_iterator77","_step77","_iterator78","_step78","_iterator79","_step79","_iterator80","_step80","_iterator81","_step81","setAnnotationsFromJsonable","_iterator82","_step82","annotations","annotatedRelationshipElementFromJsonable","SETTER_MAP_FOR_ANNOTATED_RELATIONSHIP_ELEMENT","AnnotatedRelationshipElement","SetterForEntity","_iterator83","_step83","_iterator84","_step84","_iterator85","_step85","_iterator86","_step86","_iterator87","_step87","_iterator88","_step88","setStatementsFromJsonable","_iterator89","_step89","statements","setEntityTypeFromJsonable","entityTypeFromJsonable","entityType","_iterator90","_step90","entityFromJsonable","SETTER_MAP_FOR_ENTITY","Entity","entityTypeFromString","directionFromJsonable","directionFromString","stateOfEventFromJsonable","stateOfEventFromString","SetterForEventPayload","setSourceFromJsonable","source","setSourceSemanticIdFromJsonable","sourceSemanticId","setObservableReferenceFromJsonable","observableReference","setObservableSemanticIdFromJsonable","observableSemanticId","setTopicFromJsonable","topic","setSubjectIdFromJsonable","subjectId","setTimeStampFromJsonable","timeStamp","setPayloadFromJsonable","payload","eventPayloadFromJsonable","SETTER_MAP_FOR_EVENT_PAYLOAD","EventPayload","eventElementFromJsonable","EVENT_ELEMENT_FROM_JSONABLE_DISPATCH","SetterForBasicEventElement","_iterator91","_step91","_iterator92","_step92","_iterator93","_step93","_iterator94","_step94","_iterator95","_step95","_iterator96","_step96","setObservedFromJsonable","observed","setDirectionFromJsonable","direction","setStateFromJsonable","state","setMessageTopicFromJsonable","messageTopic","setMessageBrokerFromJsonable","messageBroker","setLastUpdateFromJsonable","lastUpdate","setMinIntervalFromJsonable","minInterval","setMaxIntervalFromJsonable","maxInterval","basicEventElementFromJsonable","SETTER_MAP_FOR_BASIC_EVENT_ELEMENT","BasicEventElement","SetterForOperation","_iterator97","_step97","_iterator98","_step98","_iterator99","_step99","_iterator100","_step100","_iterator101","_step101","_iterator102","_step102","setInputVariablesFromJsonable","_iterator103","_step103","operationVariableFromJsonable","inputVariables","setOutputVariablesFromJsonable","_iterator104","_step104","outputVariables","setInoutputVariablesFromJsonable","_iterator105","_step105","inoutputVariables","operationFromJsonable","SETTER_MAP_FOR_OPERATION","Operation","SetterForOperationVariable","SETTER_MAP_FOR_OPERATION_VARIABLE","OperationVariable","SetterForCapability","_iterator106","_step106","_iterator107","_step107","_iterator108","_step108","_iterator109","_step109","_iterator110","_step110","_iterator111","_step111","capabilityFromJsonable","SETTER_MAP_FOR_CAPABILITY","Capability","SetterForConceptDescription","_iterator112","_step112","_iterator113","_step113","_iterator114","_step114","_iterator115","_step115","setIsCaseOfFromJsonable","_iterator116","_step116","isCaseOf","conceptDescriptionFromJsonable","SETTER_MAP_FOR_CONCEPT_DESCRIPTION","ConceptDescription","referenceTypesFromJsonable","referenceTypesFromString","SetterForReference","setReferredSemanticIdFromJsonable","referredSemanticId","setKeysFromJsonable","_iterator117","_step117","keyFromJsonable","keys","SETTER_MAP_FOR_REFERENCE","Reference","SetterForKey","keyTypesFromJsonable","SETTER_MAP_FOR_KEY","Key","keyTypesFromString","dataTypeDefXsdFromString","abstractLangStringFromJsonable","ABSTRACT_LANG_STRING_FROM_JSONABLE_DISPATCH","SetterForLangStringNameType","setLanguageFromJsonable","language","setTextFromJsonable","text","SETTER_MAP_FOR_LANG_STRING_NAME_TYPE","LangStringNameType","SetterForLangStringTextType","SETTER_MAP_FOR_LANG_STRING_TEXT_TYPE","LangStringTextType","SetterForEnvironment","setAssetAdministrationShellsFromJsonable","_iterator118","_step118","assetAdministrationShells","_iterator119","_step119","setConceptDescriptionsFromJsonable","_iterator120","_step120","conceptDescriptions","environmentFromJsonable","SETTER_MAP_FOR_ENVIRONMENT","Environment","dataSpecificationContentFromJsonable","DATA_SPECIFICATION_CONTENT_FROM_JSONABLE_DISPATCH","SetterForEmbeddedDataSpecification","setDataSpecificationContentFromJsonable","dataSpecificationContent","setDataSpecificationFromJsonable","dataSpecification","SETTER_MAP_FOR_EMBEDDED_DATA_SPECIFICATION","EmbeddedDataSpecification","dataTypeIec61360FromJsonable","dataTypeIec61360FromString","SetterForLevelType","setNomFromJsonable","nom","setTypFromJsonable","typ","levelTypeFromJsonable","SETTER_MAP_FOR_LEVEL_TYPE","LevelType","SetterForValueReferencePair","valueReferencePairFromJsonable","SETTER_MAP_FOR_VALUE_REFERENCE_PAIR","ValueReferencePair","SetterForValueList","setValueReferencePairsFromJsonable","_iterator121","_step121","valueReferencePairs","valueListFromJsonable","SETTER_MAP_FOR_VALUE_LIST","ValueList","SetterForLangStringPreferredNameTypeIec61360","langStringPreferredNameTypeIec61360FromJsonable","SETTER_MAP_FOR_LANG_STRING_PREFERRED_NAME_TYPE_IEC_61360","LangStringPreferredNameTypeIec61360","SetterForLangStringShortNameTypeIec61360","langStringShortNameTypeIec61360FromJsonable","SETTER_MAP_FOR_LANG_STRING_SHORT_NAME_TYPE_IEC_61360","LangStringShortNameTypeIec61360","SetterForLangStringDefinitionTypeIec61360","langStringDefinitionTypeIec61360FromJsonable","SETTER_MAP_FOR_LANG_STRING_DEFINITION_TYPE_IEC_61360","LangStringDefinitionTypeIec61360","SetterForDataSpecificationIec61360","setPreferredNameFromJsonable","_iterator122","_step122","preferredName","setShortNameFromJsonable","_iterator123","_step123","shortName","setUnitFromJsonable","unit","setUnitIdFromJsonable","unitId","setSourceOfDefinitionFromJsonable","sourceOfDefinition","setSymbolFromJsonable","symbol","setDataTypeFromJsonable","dataType","setDefinitionFromJsonable","_iterator124","_step124","definition","setValueFormatFromJsonable","valueFormat","setValueListFromJsonable","valueList","setLevelTypeFromJsonable","levelType","dataSpecificationIec61360FromJsonable","SETTER_MAP_FOR_DATA_SPECIFICATION_IEC_61360","DataSpecificationIec61360","Map","Serializer","_AasTypes$AbstractTra","_super","transformExtension","that","transform","supplementalSemanticIdsArray","_iterator125","_step125","item","mustDataTypeDefXsdToString","refersToArray","_iterator126","_step126","transformAdministrativeInformation","embeddedDataSpecificationsArray","_iterator127","_step127","transformQualifier","_iterator128","_step128","mustQualifierKindToString","transformAssetAdministrationShell","extensionsArray","_iterator129","_step129","displayNameArray","_iterator130","_step130","descriptionArray","_iterator131","_step131","_iterator132","_step132","submodelsArray","_iterator133","_step133","transformAssetInformation","mustAssetKindToString","specificAssetIdsArray","_iterator134","_step134","transformResource","transformSpecificAssetId","_iterator135","_step135","transformSubmodel","_iterator136","_step136","_iterator137","_step137","_iterator138","_step138","mustModellingKindToString","_iterator139","_step139","qualifiersArray","_iterator140","_step140","_iterator141","_step141","submodelElementsArray","_iterator142","_step142","transformRelationshipElement","_iterator143","_step143","_iterator144","_step144","_iterator145","_step145","_iterator146","_step146","_iterator147","_step147","_iterator148","_step148","transformSubmodelElementList","_iterator149","_step149","_iterator150","_step150","_iterator151","_step151","_iterator152","_step152","_iterator153","_step153","_iterator154","_step154","mustAasSubmodelElementsToString","valueArray","_iterator155","_step155","transformSubmodelElementCollection","_iterator156","_step156","_iterator157","_step157","_iterator158","_step158","_iterator159","_step159","_iterator160","_step160","_iterator161","_step161","_iterator162","_step162","transformProperty","_iterator163","_step163","_iterator164","_step164","_iterator165","_step165","_iterator166","_step166","_iterator167","_step167","_iterator168","_step168","transformMultiLanguageProperty","_iterator169","_step169","_iterator170","_step170","_iterator171","_step171","_iterator172","_step172","_iterator173","_step173","_iterator174","_step174","_iterator175","_step175","transformRange","_iterator176","_step176","_iterator177","_step177","_iterator178","_step178","_iterator179","_step179","_iterator180","_step180","_iterator181","_step181","transformReferenceElement","_iterator182","_step182","_iterator183","_step183","_iterator184","_step184","_iterator185","_step185","_iterator186","_step186","_iterator187","_step187","transformBlob","_iterator188","_step188","_iterator189","_step189","_iterator190","_step190","_iterator191","_step191","_iterator192","_step192","_iterator193","_step193","base64Encode","transformFile","_iterator194","_step194","_iterator195","_step195","_iterator196","_step196","_iterator197","_step197","_iterator198","_step198","_iterator199","_step199","transformAnnotatedRelationshipElement","_iterator200","_step200","_iterator201","_step201","_iterator202","_step202","_iterator203","_step203","_iterator204","_step204","_iterator205","_step205","annotationsArray","_iterator206","_step206","transformEntity","_iterator207","_step207","_iterator208","_step208","_iterator209","_step209","_iterator210","_step210","_iterator211","_step211","_iterator212","_step212","statementsArray","_iterator213","_step213","mustEntityTypeToString","_iterator214","_step214","transformEventPayload","transformBasicEventElement","_iterator215","_step215","_iterator216","_step216","_iterator217","_step217","_iterator218","_step218","_iterator219","_step219","_iterator220","_step220","mustDirectionToString","mustStateOfEventToString","transformOperation","_iterator221","_step221","_iterator222","_step222","_iterator223","_step223","_iterator224","_step224","_iterator225","_step225","_iterator226","_step226","inputVariablesArray","_iterator227","_step227","outputVariablesArray","_iterator228","_step228","inoutputVariablesArray","_iterator229","_step229","transformOperationVariable","transformCapability","_iterator230","_step230","_iterator231","_step231","_iterator232","_step232","_iterator233","_step233","_iterator234","_step234","_iterator235","_step235","transformConceptDescription","_iterator236","_step236","_iterator237","_step237","_iterator238","_step238","_iterator239","_step239","isCaseOfArray","_iterator240","_step240","transformReference","mustReferenceTypesToString","keysArray","_iterator241","_step241","transformKey","mustKeyTypesToString","transformLangStringNameType","transformLangStringTextType","transformEnvironment","assetAdministrationShellsArray","_iterator242","_step242","_iterator243","_step243","conceptDescriptionsArray","_iterator244","_step244","transformEmbeddedDataSpecification","transformLevelType","transformValueReferencePair","transformValueList","valueReferencePairsArray","_iterator245","_step245","transformLangStringPreferredNameTypeIec61360","transformLangStringShortNameTypeIec61360","transformLangStringDefinitionTypeIec61360","transformDataSpecificationIec61360","preferredNameArray","_iterator246","_step246","shortNameArray","_iterator247","_step247","mustDataTypeIec61360ToString","definitionArray","_iterator248","_step248","AbstractTransformer","SERIALIZER","toJsonable"],"sources":["../../../src/jsonization.ts"],"sourcesContent":["/**\n * Provide de/serialization of AAS classes to/from JSON.\n *\n * We can not use one-pass deserialization for JSON since the object\n * properties do not have fixed order, and hence we can not read\n * `modelType` property ahead of the remaining properties.\n */\n\n// This code has been automatically generated by aas-core-codegen.\n// Do NOT edit or append.\n\nimport * as AasCommon from \"./common\";\nimport * as AasTypes from \"./types\";\nimport * as AasStringification from \"./stringification\";\n\nexport type JsonValue = string | number | boolean | JsonObject | JsonArray;\n\nexport type JsonArray = Iterable<JsonValue>;\nexport type JsonObject = { [prop: string]: JsonValue };\n\n/**\n * Represent a property on a path to the erroneous value.\n */\nexport class PropertySegment {\n  /**\n   * Instance that contains the property\n   */\n  readonly instance: JsonObject;\n\n  /**\n   * Name of the property\n   */\n  readonly name: string;\n\n  constructor(instance: JsonObject, name: string) {\n    this.instance = instance;\n    this.name = name;\n  }\n}\n\n/**\n * Represent an index access on a path to the erroneous value.\n */\nexport class IndexSegment {\n  /**\n   * Container that contains the item\n   */\n  readonly container: JsonArray;\n\n  /**\n   * Index of the item\n   */\n  readonly index: number;\n\n  constructor(container: JsonArray, index: number) {\n    if (!Number.isInteger(index)) {\n      throw new Error(`Expected an integer for the index, but got: ${index}`);\n    }\n\n    this.container = container;\n    this.index = index;\n  }\n}\n\nexport type Segment = PropertySegment | IndexSegment;\n\n/**\n * Represent the relative path to the erroneous value.\n */\nexport class Path {\n  private readonly _segments = new Array<Segment>();\n\n  /**\n   * Get the segments of the path.\n   */\n  segments(): Array<Segment> {\n    return this._segments;\n  }\n\n  /**\n   * Insert the `segment` in front of the {@link segments}.\n   *\n   * @param segment - segment to be prepended to {@link segments}\n   */\n  prepend(segment: Segment): void {\n    this._segments.unshift(segment);\n  }\n\n  toString(): string {\n    if (this._segments.length === 0) {\n      return \"\";\n    }\n\n    const parts = new Array<string>();\n\n    let segment = this._segments[0];\n\n    if (segment instanceof PropertySegment) {\n      parts.push(segment.name);\n    } else if (segment instanceof IndexSegment) {\n      parts.push(`[${segment.index}]`);\n    } else {\n      throw new Error(`Unexpected segment: ${segment}`);\n    }\n\n    for (let i = 1; i < this._segments.length; i++) {\n      segment = this._segments[i];\n      if (segment instanceof PropertySegment) {\n        parts.push(`.${segment.name}`);\n      } else if (segment instanceof IndexSegment) {\n        parts.push(`[${segment.index}]`);\n      } else {\n        throw new Error(`Unexpected segment: ${segment}`);\n      }\n    }\n\n    return parts.join(\"\");\n  }\n}\n\n// region De-serialization\n\n/**\n * Signal that the JSON de-serialization could not be performed.\n */\nexport class DeserializationError {\n  /**\n   * Human-readable explanation of the error\n   */\n  readonly message: string;\n\n  /**\n   * Relative path to the erroneous value\n   */\n  readonly path: Path;\n\n  constructor(message: string, path: Path | null = null) {\n    this.message = message;\n    this.path = path ?? new Path();\n  }\n}\n\n/**\n * Create an error as {@link common.Either}.\n *\n * @param message - human-readable explanation of the error\n * @returns An {@link common.Either } with the error set\n * @typeParam T - type of the value if there had been no error\n */\nfunction newDeserializationError<T>(\n  message: string\n): AasCommon.Either<T, DeserializationError> {\n  return new AasCommon.Either<T, DeserializationError>(\n    null,\n    new DeserializationError(message)\n  );\n}\n\n/**\n * Parse `jsonable` as a boolean.\n *\n * @param jsonable - to be parsed\n * @returns parsed boolean value, or an error\n */\nfunction booleanFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<boolean, DeserializationError> {\n  // `typeof` seems to be optimized these days, so we use it instead of\n  // literal comparison, see:\n  // https://stackoverflow.com/questions/61786250/is-typeof-faster-than-literal-comparison\n\n  if (jsonable === null) {\n    return newDeserializationError<boolean>(\"Expected a boolean, but got null\");\n  }\n  if (typeof jsonable !== \"boolean\") {\n    return newDeserializationError<boolean>(\n      `Expected a boolean, but got ${typeof jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<boolean, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as an integer.\n *\n * @param jsonable - to be parsed\n * @returns parsed integer value, or an error\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction integerFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<number, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<number>(\"Expected an integer number, but got null\");\n  }\n  if (typeof jsonable !== \"number\") {\n    return newDeserializationError<number>(\n      `Expected an integer number, but got: ${typeof jsonable}`\n    );\n  }\n\n  if (!Number.isInteger(jsonable)) {\n    return newDeserializationError<number>(\n      `Expected an integer number, but got: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<number, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as a number.\n *\n * @param jsonable - to be parsed\n * @returns parsed numeric value, or an error\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction numberFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<number, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<number>(\"Expected a number, but got null\");\n  }\n  if (typeof jsonable !== \"number\") {\n    return newDeserializationError<number>(\n      `Expected a number, but got: ${typeof jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<number, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as a string.\n *\n * @param jsonable - to be parsed\n * @returns parsed string value, or an error\n */\nfunction stringFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<string, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<string>(\"Expected a string, but got null\");\n  }\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<string>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<string, DeserializationError>(jsonable, null);\n}\n\n/**\n * Parse `jsonable` as a byte array.\n *\n * @param jsonable - to be parsed\n * @returns parsed byte array, or an error\n */\nfunction bytesFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<Uint8Array, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<Uint8Array>(\n      \"Expected a base64-encoded string, but got null\"\n    );\n  }\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<Uint8Array>(\n      `Expected a base64-encoded string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const either = AasCommon.base64Decode(jsonable);\n  if (either.error !== null) {\n    return newDeserializationError<Uint8Array>(either.error);\n  }\n  return new AasCommon.Either<Uint8Array, DeserializationError>(\n    either.mustValue(),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasSemantics}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasSemanticsFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasSemantics, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_SEMANTICS_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasSemantics>(\n      `Unexpected model type for IHasSemantics: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Extension}.\n */\nclass SetterForExtension {\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  name: string | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  value: string | null = null;\n\n  refersTo: Array<AasTypes.Reference> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link name}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.name = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link refersTo}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setRefersToFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.refersTo = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Extension} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Extension},\n * or an error if any\n */\nexport function extensionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Extension, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Extension>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Extension>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Extension>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForExtension();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_EXTENSION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Extension, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.name === null) {\n    return newDeserializationError<AasTypes.Extension>(\n      \"The required property 'name' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Extension, DeserializationError>(\n    new AasTypes.Extension(\n      setter.name,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.valueType,\n      setter.value,\n      setter.refersTo\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasExtensions}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasExtensionsFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasExtensions, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_EXTENSIONS_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasExtensions>(\n      `Unexpected model type for IHasExtensions: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IReferable}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function referableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IReferable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IReferable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IReferable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IReferable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IReferable>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IReferable>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = REFERABLE_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IReferable>(\n      `Unexpected model type for IReferable: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IIdentifiable}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function identifiableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IIdentifiable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = IDENTIFIABLE_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IIdentifiable>(\n      `Unexpected model type for IIdentifiable: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!ModellingKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function modellingKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ModellingKind, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.ModellingKind>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.modellingKindFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.ModellingKind>(\n      \"Not a valid string representation of \" +\n        `a literal of ModellingKind: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ModellingKind, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasKind, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasKind>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasKind>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_KIND_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasKind>(\n      `Unexpected model type for IHasKind: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IHasDataSpecification}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function hasDataSpecificationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IHasDataSpecification, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = HAS_DATA_SPECIFICATION_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IHasDataSpecification>(\n      `Unexpected model type for IHasDataSpecification: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AdministrativeInformation}.\n */\nclass SetterForAdministrativeInformation {\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  version: string | null = null;\n\n  revision: string | null = null;\n\n  creator: AasTypes.Reference | null = null;\n\n  templateId: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link version}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setVersionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.version = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link revision}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setRevisionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.revision = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link creator}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCreatorFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.creator = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link templateId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTemplateIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.templateId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!AdministrativeInformation} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AdministrativeInformation},\n * or an error if any\n */\nexport function administrativeInformationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AdministrativeInformation, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AdministrativeInformation>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AdministrativeInformation>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AdministrativeInformation>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAdministrativeInformation();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ADMINISTRATIVE_INFORMATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.AdministrativeInformation,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.AdministrativeInformation, DeserializationError>(\n    new AasTypes.AdministrativeInformation(\n      setter.embeddedDataSpecifications,\n      setter.version,\n      setter.revision,\n      setter.creator,\n      setter.templateId\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IQualifiable}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function qualifiableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IQualifiable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = QUALIFIABLE_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IQualifiable>(\n      `Unexpected model type for IQualifiable: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!QualifierKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function qualifierKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.QualifierKind, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.QualifierKind>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.qualifierKindFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.QualifierKind>(\n      \"Not a valid string representation of \" +\n        `a literal of QualifierKind: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.QualifierKind, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Qualifier}.\n */\nclass SetterForQualifier {\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  kind: AasTypes.QualifierKind | null = null;\n\n  type: string | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  value: string | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link kind}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setKindFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = qualifierKindFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.kind = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link type}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.type = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Qualifier} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Qualifier},\n * or an error if any\n */\nexport function qualifierFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Qualifier, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Qualifier>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForQualifier();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_QUALIFIER.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Qualifier, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.type === null) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"The required property 'type' is missing\"\n    );\n  }\n\n  if (setter.valueType === null) {\n    return newDeserializationError<AasTypes.Qualifier>(\n      \"The required property 'valueType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Qualifier, DeserializationError>(\n    new AasTypes.Qualifier(\n      setter.type,\n      setter.valueType,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.kind,\n      setter.value,\n      setter.valueId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AssetAdministrationShell}.\n */\nclass SetterForAssetAdministrationShell {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  administration: AasTypes.AdministrativeInformation | null = null;\n\n  id: string | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  derivedFrom: AasTypes.Reference | null = null;\n\n  assetInformation: AasTypes.AssetInformation | null = null;\n\n  submodels: Array<AasTypes.Reference> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link administration}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAdministrationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = administrativeInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.administration = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link id}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.id = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link derivedFrom}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDerivedFromFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.derivedFrom = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetInformation}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetInformationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = assetInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.assetInformation = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link submodels}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubmodelsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.submodels = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!AssetAdministrationShell} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AssetAdministrationShell},\n * or an error if any\n */\nexport function assetAdministrationShellFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AssetAdministrationShell, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAssetAdministrationShell();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ASSET_ADMINISTRATION_SHELL.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.AssetAdministrationShell,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.id === null) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"The required property 'id' is missing\"\n    );\n  }\n\n  if (setter.assetInformation === null) {\n    return newDeserializationError<AasTypes.AssetAdministrationShell>(\n      \"The required property 'assetInformation' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AssetAdministrationShell, DeserializationError>(\n    new AasTypes.AssetAdministrationShell(\n      setter.id,\n      setter.assetInformation,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.administration,\n      setter.embeddedDataSpecifications,\n      setter.derivedFrom,\n      setter.submodels\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AssetInformation}.\n */\nclass SetterForAssetInformation {\n  assetKind: AasTypes.AssetKind | null = null;\n\n  globalAssetId: string | null = null;\n\n  specificAssetIds: Array<AasTypes.SpecificAssetId> | null = null;\n\n  assetType: string | null = null;\n\n  defaultThumbnail: AasTypes.Resource | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetKind}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetKindFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = assetKindFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.assetKind = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link globalAssetId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setGlobalAssetIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.globalAssetId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link specificAssetIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSpecificAssetIdsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.SpecificAssetId>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = specificAssetIdFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.specificAssetIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.assetType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link defaultThumbnail}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDefaultThumbnailFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = resourceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.defaultThumbnail = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!AssetInformation} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AssetInformation},\n * or an error if any\n */\nexport function assetInformationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AssetInformation, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAssetInformation();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ASSET_INFORMATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.AssetInformation, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.assetKind === null) {\n    return newDeserializationError<AasTypes.AssetInformation>(\n      \"The required property 'assetKind' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AssetInformation, DeserializationError>(\n    new AasTypes.AssetInformation(\n      setter.assetKind,\n      setter.globalAssetId,\n      setter.specificAssetIds,\n      setter.assetType,\n      setter.defaultThumbnail\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Resource}.\n */\nclass SetterForResource {\n  path: string | null = null;\n\n  contentType: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link path}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setPathFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.path = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link contentType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setContentTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.contentType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Resource} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Resource},\n * or an error if any\n */\nexport function resourceFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Resource, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Resource>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Resource>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Resource>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForResource();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_RESOURCE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Resource, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.path === null) {\n    return newDeserializationError<AasTypes.Resource>(\n      \"The required property 'path' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Resource, DeserializationError>(\n    new AasTypes.Resource(setter.path, setter.contentType),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!AssetKind}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function assetKindFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AssetKind, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.AssetKind>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.assetKindFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.AssetKind>(\n      \"Not a valid string representation of \" + `a literal of AssetKind: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AssetKind, DeserializationError>(literal, null);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!SpecificAssetId}.\n */\nclass SetterForSpecificAssetId {\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  name: string | null = null;\n\n  value: string | null = null;\n\n  externalSubjectId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link name}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.name = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link externalSubjectId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExternalSubjectIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.externalSubjectId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!SpecificAssetId} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!SpecificAssetId},\n * or an error if any\n */\nexport function specificAssetIdFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.SpecificAssetId, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSpecificAssetId();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SPECIFIC_ASSET_ID.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.SpecificAssetId, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.name === null) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"The required property 'name' is missing\"\n    );\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.SpecificAssetId>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.SpecificAssetId, DeserializationError>(\n    new AasTypes.SpecificAssetId(\n      setter.name,\n      setter.value,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.externalSubjectId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Submodel}.\n */\nclass SetterForSubmodel {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  administration: AasTypes.AdministrativeInformation | null = null;\n\n  id: string | null = null;\n\n  kind: AasTypes.ModellingKind | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  submodelElements: Array<AasTypes.ISubmodelElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link administration}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAdministrationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = administrativeInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.administration = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link id}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.id = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link kind}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setKindFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = modellingKindFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.kind = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link submodelElements}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubmodelElementsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.submodelElements = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Submodel} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Submodel},\n * or an error if any\n */\nexport function submodelFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Submodel, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Submodel>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Submodel>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Submodel>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSubmodel();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SUBMODEL.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Submodel, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.id === null) {\n    return newDeserializationError<AasTypes.Submodel>(\n      \"The required property 'id' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Submodel, DeserializationError>(\n    new AasTypes.Submodel(\n      setter.id,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.administration,\n      setter.kind,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.submodelElements\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!ISubmodelElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function submodelElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ISubmodelElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = SUBMODEL_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.ISubmodelElement>(\n      `Unexpected model type for ISubmodelElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IRelationshipElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function relationshipElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IRelationshipElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = RELATIONSHIP_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IRelationshipElement>(\n      `Unexpected model type for IRelationshipElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!RelationshipElement}.\n */\nclass SetterForRelationshipElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  first: AasTypes.Reference | null = null;\n\n  second: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link first}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setFirstFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.first = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link second}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSecondFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.second = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!RelationshipElement} from the JSON-able\n * structure `jsonable`.\n *\n * This function performs no dispatch! It is used to parse the properties\n * as-are, and already assumes the exact model type. Usually, this function\n * is called from within a dispatching function, and you never call it\n * directly. If you want to de-serialize an instance of\n * {@link types!RelationshipElement}, call\n * {@link relationshipElementFromJsonable}.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!RelationshipElement},\n * or an error if any\n */\nfunction relationshipElementFromJsonableWithoutDispatch(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.RelationshipElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForRelationshipElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_RELATIONSHIP_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.RelationshipElement, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.first === null) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"The required property 'first' is missing\"\n    );\n  }\n\n  if (setter.second === null) {\n    return newDeserializationError<AasTypes.RelationshipElement>(\n      \"The required property 'second' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.RelationshipElement, DeserializationError>(\n    new AasTypes.RelationshipElement(\n      setter.first,\n      setter.second,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!AasSubmodelElements}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function aasSubmodelElementsFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AasSubmodelElements, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.AasSubmodelElements>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.aasSubmodelElementsFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.AasSubmodelElements>(\n      \"Not a valid string representation of \" +\n        `a literal of AasSubmodelElements: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.AasSubmodelElements, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!SubmodelElementList}.\n */\nclass SetterForSubmodelElementList {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  orderRelevant: boolean | null = null;\n\n  semanticIdListElement: AasTypes.Reference | null = null;\n\n  typeValueListElement: AasTypes.AasSubmodelElements | null = null;\n\n  valueTypeListElement: AasTypes.DataTypeDefXsd | null = null;\n\n  value: Array<AasTypes.ISubmodelElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link orderRelevant}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setOrderRelevantFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.orderRelevant = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticIdListElement}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdListElementFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticIdListElement = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link typeValueListElement}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeValueListElementFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = aasSubmodelElementsFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.typeValueListElement = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueTypeListElement}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeListElementFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueTypeListElement = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.value = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!SubmodelElementList} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!SubmodelElementList},\n * or an error if any\n */\nexport function submodelElementListFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.SubmodelElementList, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSubmodelElementList();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SUBMODEL_ELEMENT_LIST.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.SubmodelElementList, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.typeValueListElement === null) {\n    return newDeserializationError<AasTypes.SubmodelElementList>(\n      \"The required property 'typeValueListElement' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.SubmodelElementList, DeserializationError>(\n    new AasTypes.SubmodelElementList(\n      setter.typeValueListElement,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.orderRelevant,\n      setter.semanticIdListElement,\n      setter.valueTypeListElement,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!SubmodelElementCollection}.\n */\nclass SetterForSubmodelElementCollection {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: Array<AasTypes.ISubmodelElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.value = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!SubmodelElementCollection} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!SubmodelElementCollection},\n * or an error if any\n */\nexport function submodelElementCollectionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.SubmodelElementCollection, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.SubmodelElementCollection>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.SubmodelElementCollection>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.SubmodelElementCollection>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForSubmodelElementCollection();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_SUBMODEL_ELEMENT_COLLECTION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.SubmodelElementCollection,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.SubmodelElementCollection, DeserializationError>(\n    new AasTypes.SubmodelElementCollection(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IDataElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function dataElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IDataElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IDataElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IDataElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = DATA_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IDataElement>(\n      `Unexpected model type for IDataElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Property}.\n */\nclass SetterForProperty {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  value: string | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Property} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Property},\n * or an error if any\n */\nexport function propertyFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Property, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Property>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Property>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Property>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForProperty();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_PROPERTY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Property, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.valueType === null) {\n    return newDeserializationError<AasTypes.Property>(\n      \"The required property 'valueType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Property, DeserializationError>(\n    new AasTypes.Property(\n      setter.valueType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value,\n      setter.valueId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!MultiLanguageProperty}.\n */\nclass SetterForMultiLanguageProperty {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: Array<AasTypes.LangStringTextType> | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.value = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!MultiLanguageProperty} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!MultiLanguageProperty},\n * or an error if any\n */\nexport function multiLanguagePropertyFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.MultiLanguageProperty, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.MultiLanguageProperty>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.MultiLanguageProperty>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.MultiLanguageProperty>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForMultiLanguageProperty();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_MULTI_LANGUAGE_PROPERTY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.MultiLanguageProperty, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.MultiLanguageProperty, DeserializationError>(\n    new AasTypes.MultiLanguageProperty(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value,\n      setter.valueId\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Range}.\n */\nclass SetterForRange {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  valueType: AasTypes.DataTypeDefXsd | null = null;\n\n  min: string | null = null;\n\n  max: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeDefXsdFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link min}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMinFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.min = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link max}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMaxFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.max = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Range} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Range},\n * or an error if any\n */\nexport function rangeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Range, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Range>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Range>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Range>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForRange();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_RANGE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Range, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.valueType === null) {\n    return newDeserializationError<AasTypes.Range>(\n      \"The required property 'valueType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Range, DeserializationError>(\n    new AasTypes.Range(\n      setter.valueType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.min,\n      setter.max\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ReferenceElement}.\n */\nclass SetterForReferenceElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!ReferenceElement} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ReferenceElement},\n * or an error if any\n */\nexport function referenceElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ReferenceElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ReferenceElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ReferenceElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ReferenceElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForReferenceElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_REFERENCE_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ReferenceElement, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.ReferenceElement, DeserializationError>(\n    new AasTypes.ReferenceElement(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Blob}.\n */\nclass SetterForBlob {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: Uint8Array | null = null;\n\n  contentType: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = bytesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link contentType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setContentTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.contentType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Blob} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Blob},\n * or an error if any\n */\nexport function blobFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Blob, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Blob>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Blob>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Blob>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForBlob();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_BLOB.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Blob, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.contentType === null) {\n    return newDeserializationError<AasTypes.Blob>(\n      \"The required property 'contentType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Blob, DeserializationError>(\n    new AasTypes.Blob(\n      setter.contentType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!File}.\n */\nclass SetterForFile {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  value: string | null = null;\n\n  contentType: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link contentType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setContentTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.contentType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!File} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!File},\n * or an error if any\n */\nexport function fileFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.File, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.File>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.File>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.File>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForFile();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_FILE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.File, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.contentType === null) {\n    return newDeserializationError<AasTypes.File>(\n      \"The required property 'contentType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.File, DeserializationError>(\n    new AasTypes.File(\n      setter.contentType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.value\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!AnnotatedRelationshipElement}.\n */\nclass SetterForAnnotatedRelationshipElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  first: AasTypes.Reference | null = null;\n\n  second: AasTypes.Reference | null = null;\n\n  annotations: Array<AasTypes.IDataElement> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link first}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setFirstFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.first = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link second}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSecondFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.second = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link annotations}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAnnotationsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.IDataElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = dataElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.annotations = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!AnnotatedRelationshipElement} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!AnnotatedRelationshipElement},\n * or an error if any\n */\nexport function annotatedRelationshipElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.AnnotatedRelationshipElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForAnnotatedRelationshipElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ANNOTATED_RELATIONSHIP_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.AnnotatedRelationshipElement,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.first === null) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"The required property 'first' is missing\"\n    );\n  }\n\n  if (setter.second === null) {\n    return newDeserializationError<AasTypes.AnnotatedRelationshipElement>(\n      \"The required property 'second' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.AnnotatedRelationshipElement,\n    DeserializationError\n  >(\n    new AasTypes.AnnotatedRelationshipElement(\n      setter.first,\n      setter.second,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.annotations\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Entity}.\n */\nclass SetterForEntity {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  statements: Array<AasTypes.ISubmodelElement> | null = null;\n\n  entityType: AasTypes.EntityType | null = null;\n\n  globalAssetId: string | null = null;\n\n  specificAssetIds: Array<AasTypes.SpecificAssetId> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link statements}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setStatementsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ISubmodelElement>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelElementFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.statements = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link entityType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEntityTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = entityTypeFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.entityType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link globalAssetId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setGlobalAssetIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.globalAssetId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link specificAssetIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSpecificAssetIdsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.SpecificAssetId>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = specificAssetIdFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.specificAssetIds = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Entity} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Entity},\n * or an error if any\n */\nexport function entityFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Entity, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Entity>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Entity>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Entity>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEntity();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ENTITY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Entity, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.entityType === null) {\n    return newDeserializationError<AasTypes.Entity>(\n      \"The required property 'entityType' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Entity, DeserializationError>(\n    new AasTypes.Entity(\n      setter.entityType,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.statements,\n      setter.globalAssetId,\n      setter.specificAssetIds\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!EntityType}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function entityTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.EntityType, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.EntityType>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.entityTypeFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.EntityType>(\n      \"Not a valid string representation of \" + `a literal of EntityType: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.EntityType, DeserializationError>(literal, null);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!Direction}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function directionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Direction, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.Direction>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.directionFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.Direction>(\n      \"Not a valid string representation of \" + `a literal of Direction: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Direction, DeserializationError>(literal, null);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!StateOfEvent}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function stateOfEventFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.StateOfEvent, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.StateOfEvent>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.stateOfEventFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.StateOfEvent>(\n      \"Not a valid string representation of \" + `a literal of StateOfEvent: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.StateOfEvent, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!EventPayload}.\n */\nclass SetterForEventPayload {\n  source: AasTypes.Reference | null = null;\n\n  sourceSemanticId: AasTypes.Reference | null = null;\n\n  observableReference: AasTypes.Reference | null = null;\n\n  observableSemanticId: AasTypes.Reference | null = null;\n\n  topic: string | null = null;\n\n  subjectId: AasTypes.Reference | null = null;\n\n  timeStamp: string | null = null;\n\n  payload: Uint8Array | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link source}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSourceFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.source = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link sourceSemanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSourceSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.sourceSemanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link observableReference}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setObservableReferenceFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.observableReference = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link observableSemanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setObservableSemanticIdFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.observableSemanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link topic}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTopicFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.topic = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link subjectId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubjectIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.subjectId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link timeStamp}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTimeStampFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.timeStamp = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link payload}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setPayloadFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = bytesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.payload = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!EventPayload} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!EventPayload},\n * or an error if any\n */\nexport function eventPayloadFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.EventPayload, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.EventPayload>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEventPayload();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_EVENT_PAYLOAD.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.EventPayload, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.source === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"The required property 'source' is missing\"\n    );\n  }\n\n  if (setter.observableReference === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"The required property 'observableReference' is missing\"\n    );\n  }\n\n  if (setter.timeStamp === null) {\n    return newDeserializationError<AasTypes.EventPayload>(\n      \"The required property 'timeStamp' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.EventPayload, DeserializationError>(\n    new AasTypes.EventPayload(\n      setter.source,\n      setter.observableReference,\n      setter.timeStamp,\n      setter.sourceSemanticId,\n      setter.observableSemanticId,\n      setter.topic,\n      setter.subjectId,\n      setter.payload\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IEventElement}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function eventElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IEventElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IEventElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IEventElement>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = EVENT_ELEMENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IEventElement>(\n      `Unexpected model type for IEventElement: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!BasicEventElement}.\n */\nclass SetterForBasicEventElement {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  observed: AasTypes.Reference | null = null;\n\n  direction: AasTypes.Direction | null = null;\n\n  state: AasTypes.StateOfEvent | null = null;\n\n  messageTopic: string | null = null;\n\n  messageBroker: AasTypes.Reference | null = null;\n\n  lastUpdate: string | null = null;\n\n  minInterval: string | null = null;\n\n  maxInterval: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link observed}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setObservedFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.observed = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link direction}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDirectionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = directionFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.direction = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link state}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setStateFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stateOfEventFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.state = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link messageTopic}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMessageTopicFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.messageTopic = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link messageBroker}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMessageBrokerFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.messageBroker = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link lastUpdate}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLastUpdateFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.lastUpdate = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link minInterval}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMinIntervalFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.minInterval = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link maxInterval}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMaxIntervalFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.maxInterval = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!BasicEventElement} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!BasicEventElement},\n * or an error if any\n */\nexport function basicEventElementFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.BasicEventElement, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForBasicEventElement();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_BASIC_EVENT_ELEMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.BasicEventElement, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.observed === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"The required property 'observed' is missing\"\n    );\n  }\n\n  if (setter.direction === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"The required property 'direction' is missing\"\n    );\n  }\n\n  if (setter.state === null) {\n    return newDeserializationError<AasTypes.BasicEventElement>(\n      \"The required property 'state' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.BasicEventElement, DeserializationError>(\n    new AasTypes.BasicEventElement(\n      setter.observed,\n      setter.direction,\n      setter.state,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.messageTopic,\n      setter.messageBroker,\n      setter.lastUpdate,\n      setter.minInterval,\n      setter.maxInterval\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Operation}.\n */\nclass SetterForOperation {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  inputVariables: Array<AasTypes.OperationVariable> | null = null;\n\n  outputVariables: Array<AasTypes.OperationVariable> | null = null;\n\n  inoutputVariables: Array<AasTypes.OperationVariable> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link inputVariables}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setInputVariablesFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.OperationVariable>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = operationVariableFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.inputVariables = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link outputVariables}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setOutputVariablesFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.OperationVariable>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = operationVariableFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.outputVariables = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link inoutputVariables}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setInoutputVariablesFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.OperationVariable>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = operationVariableFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.inoutputVariables = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Operation} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Operation},\n * or an error if any\n */\nexport function operationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Operation, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Operation>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Operation>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Operation>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForOperation();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_OPERATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Operation, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.Operation, DeserializationError>(\n    new AasTypes.Operation(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications,\n      setter.inputVariables,\n      setter.outputVariables,\n      setter.inoutputVariables\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!OperationVariable}.\n */\nclass SetterForOperationVariable {\n  value: AasTypes.ISubmodelElement | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = submodelElementFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!OperationVariable} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!OperationVariable},\n * or an error if any\n */\nexport function operationVariableFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.OperationVariable, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForOperationVariable();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_OPERATION_VARIABLE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.OperationVariable, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.OperationVariable>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.OperationVariable, DeserializationError>(\n    new AasTypes.OperationVariable(setter.value),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Capability}.\n */\nclass SetterForCapability {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  semanticId: AasTypes.Reference | null = null;\n\n  supplementalSemanticIds: Array<AasTypes.Reference> | null = null;\n\n  qualifiers: Array<AasTypes.Qualifier> | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link semanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.semanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link supplementalSemanticIds}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSupplementalSemanticIdsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.supplementalSemanticIds = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link qualifiers}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setQualifiersFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Qualifier>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = qualifierFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.qualifiers = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Capability} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Capability},\n * or an error if any\n */\nexport function capabilityFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Capability, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Capability>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Capability>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Capability>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForCapability();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_CAPABILITY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Capability, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.Capability, DeserializationError>(\n    new AasTypes.Capability(\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.semanticId,\n      setter.supplementalSemanticIds,\n      setter.qualifiers,\n      setter.embeddedDataSpecifications\n    ),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ConceptDescription}.\n */\nclass SetterForConceptDescription {\n  extensions: Array<AasTypes.Extension> | null = null;\n\n  category: string | null = null;\n\n  idShort: string | null = null;\n\n  displayName: Array<AasTypes.LangStringNameType> | null = null;\n\n  description: Array<AasTypes.LangStringTextType> | null = null;\n\n  administration: AasTypes.AdministrativeInformation | null = null;\n\n  id: string | null = null;\n\n  embeddedDataSpecifications: Array<AasTypes.EmbeddedDataSpecification> | null = null;\n\n  isCaseOf: Array<AasTypes.Reference> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link extensions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setExtensionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Extension>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = extensionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.extensions = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link category}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setCategoryFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.category = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link idShort}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdShortFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.idShort = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link displayName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDisplayNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringNameType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringNameTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.displayName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link description}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDescriptionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringTextType>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringTextTypeFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.description = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link administration}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAdministrationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = administrativeInformationFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.administration = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link id}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.id = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link embeddedDataSpecifications}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setEmbeddedDataSpecificationsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.EmbeddedDataSpecification>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = embeddedDataSpecificationFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.embeddedDataSpecifications = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link isCaseOf}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setIsCaseOfFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Reference>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = referenceFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.isCaseOf = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!ConceptDescription} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ConceptDescription},\n * or an error if any\n */\nexport function conceptDescriptionFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ConceptDescription, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForConceptDescription();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_CONCEPT_DESCRIPTION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ConceptDescription, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.id === null) {\n    return newDeserializationError<AasTypes.ConceptDescription>(\n      \"The required property 'id' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ConceptDescription, DeserializationError>(\n    new AasTypes.ConceptDescription(\n      setter.id,\n      setter.extensions,\n      setter.category,\n      setter.idShort,\n      setter.displayName,\n      setter.description,\n      setter.administration,\n      setter.embeddedDataSpecifications,\n      setter.isCaseOf\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!ReferenceTypes}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function referenceTypesFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ReferenceTypes, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.ReferenceTypes>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.referenceTypesFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.ReferenceTypes>(\n      \"Not a valid string representation of \" +\n        `a literal of ReferenceTypes: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ReferenceTypes, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Reference}.\n */\nclass SetterForReference {\n  type: AasTypes.ReferenceTypes | null = null;\n\n  referredSemanticId: AasTypes.Reference | null = null;\n\n  keys: Array<AasTypes.Key> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link type}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceTypesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.type = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link referredSemanticId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setReferredSemanticIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.referredSemanticId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link keys}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setKeysFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Key>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = keyFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.keys = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Reference} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Reference},\n * or an error if any\n */\nexport function referenceFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Reference, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Reference>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForReference();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_REFERENCE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Reference, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.type === null) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"The required property 'type' is missing\"\n    );\n  }\n\n  if (setter.keys === null) {\n    return newDeserializationError<AasTypes.Reference>(\n      \"The required property 'keys' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Reference, DeserializationError>(\n    new AasTypes.Reference(setter.type, setter.keys, setter.referredSemanticId),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Key}.\n */\nclass SetterForKey {\n  type: AasTypes.KeyTypes | null = null;\n\n  value: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link type}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = keyTypesFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.type = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!Key} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Key},\n * or an error if any\n */\nexport function keyFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Key, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Key>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Key>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Key>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForKey();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_KEY.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Key, DeserializationError>(null, error);\n    }\n  }\n\n  if (setter.type === null) {\n    return newDeserializationError<AasTypes.Key>(\n      \"The required property 'type' is missing\"\n    );\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.Key>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.Key, DeserializationError>(\n    new AasTypes.Key(setter.type, setter.value),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!KeyTypes}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function keyTypesFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.KeyTypes, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.KeyTypes>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.keyTypesFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.KeyTypes>(\n      \"Not a valid string representation of \" + `a literal of KeyTypes: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.KeyTypes, DeserializationError>(literal, null);\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!DataTypeDefXsd}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function dataTypeDefXsdFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.DataTypeDefXsd, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.DataTypeDefXsd>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.dataTypeDefXsdFromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.DataTypeDefXsd>(\n      \"Not a valid string representation of \" +\n        `a literal of DataTypeDefXsd: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.DataTypeDefXsd, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IAbstractLangString}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function abstractLangStringFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IAbstractLangString, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = ABSTRACT_LANG_STRING_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IAbstractLangString>(\n      `Unexpected model type for IAbstractLangString: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringNameType}.\n */\nclass SetterForLangStringNameType {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringNameType} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringNameType},\n * or an error if any\n */\nexport function langStringNameTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringNameType, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringNameType();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_NAME_TYPE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.LangStringNameType, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringNameType>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.LangStringNameType, DeserializationError>(\n    new AasTypes.LangStringNameType(setter.language, setter.text),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringTextType}.\n */\nclass SetterForLangStringTextType {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringTextType} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringTextType},\n * or an error if any\n */\nexport function langStringTextTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringTextType, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringTextType();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_TEXT_TYPE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.LangStringTextType, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringTextType>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.LangStringTextType, DeserializationError>(\n    new AasTypes.LangStringTextType(setter.language, setter.text),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!Environment}.\n */\nclass SetterForEnvironment {\n  assetAdministrationShells: Array<AasTypes.AssetAdministrationShell> | null = null;\n\n  submodels: Array<AasTypes.Submodel> | null = null;\n\n  conceptDescriptions: Array<AasTypes.ConceptDescription> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link assetAdministrationShells}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setAssetAdministrationShellsFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.AssetAdministrationShell>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = assetAdministrationShellFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.assetAdministrationShells = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link submodels}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSubmodelsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.Submodel>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = submodelFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.submodels = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link conceptDescriptions}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setConceptDescriptionsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ConceptDescription>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = conceptDescriptionFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.conceptDescriptions = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!Environment} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!Environment},\n * or an error if any\n */\nexport function environmentFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.Environment, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.Environment>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.Environment>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.Environment>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEnvironment();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_ENVIRONMENT.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.Environment, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  return new AasCommon.Either<AasTypes.Environment, DeserializationError>(\n    new AasTypes.Environment(\n      setter.assetAdministrationShells,\n      setter.submodels,\n      setter.conceptDescriptions\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` as an instance\n * of {@link types!IDataSpecificationContent}.\n *\n * @param jsonable - to be parsed\n * @returns parsed instance, or error if `jsonable` is invalid\n */\nexport function dataSpecificationContentFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.IDataSpecificationContent, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const modelType = jsonable[\"modelType\"];\n  if (modelType === undefined) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      \"Expected the property modelType, but got none\"\n    );\n  }\n\n  if (typeof modelType !== \"string\") {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      `Expected the property modelType to be a string, but got: ${typeof modelType}`\n    );\n  }\n\n  const dispatch = DATA_SPECIFICATION_CONTENT_FROM_JSONABLE_DISPATCH.get(modelType);\n  if (dispatch === undefined) {\n    return newDeserializationError<AasTypes.IDataSpecificationContent>(\n      `Unexpected model type for IDataSpecificationContent: ${modelType}`\n    );\n  }\n\n  return dispatch(jsonable);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!EmbeddedDataSpecification}.\n */\nclass SetterForEmbeddedDataSpecification {\n  dataSpecificationContent: AasTypes.IDataSpecificationContent | null = null;\n\n  dataSpecification: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link dataSpecificationContent}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDataSpecificationContentFromJsonable(\n    jsonable: JsonValue\n  ): DeserializationError | null {\n    const parsedOrError = dataSpecificationContentFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.dataSpecificationContent = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link dataSpecification}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDataSpecificationFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.dataSpecification = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!EmbeddedDataSpecification} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!EmbeddedDataSpecification},\n * or an error if any\n */\nexport function embeddedDataSpecificationFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.EmbeddedDataSpecification, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForEmbeddedDataSpecification();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_EMBEDDED_DATA_SPECIFICATION.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.EmbeddedDataSpecification,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.dataSpecificationContent === null) {\n    return newDeserializationError<AasTypes.EmbeddedDataSpecification>(\n      \"The required property 'dataSpecificationContent' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.EmbeddedDataSpecification, DeserializationError>(\n    new AasTypes.EmbeddedDataSpecification(\n      setter.dataSpecificationContent,\n      setter.dataSpecification\n    ),\n    null\n  );\n}\n\n/**\n * Parse `jsonable` structure as a literal\n * of {@link types!DataTypeIec61360}.\n *\n * @param jsonable - to be parsed\n * @returns parsed literal, or an error if `jsonable` invalid\n */\nexport function dataTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.DataTypeIec61360, DeserializationError> {\n  if (typeof jsonable !== \"string\") {\n    return newDeserializationError<AasTypes.DataTypeIec61360>(\n      `Expected a string, but got: ${typeof jsonable}`\n    );\n  }\n\n  const literal = AasStringification.dataTypeIec61360FromString(jsonable);\n  if (literal === null) {\n    return newDeserializationError<AasTypes.DataTypeIec61360>(\n      \"Not a valid string representation of \" +\n        `a literal of DataTypeIec61360: ${jsonable}`\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.DataTypeIec61360, DeserializationError>(\n    literal,\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LevelType}.\n */\nclass SetterForLevelType {\n  min: boolean | null = null;\n\n  nom: boolean | null = null;\n\n  typ: boolean | null = null;\n\n  max: boolean | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link min}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMinFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.min = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link nom}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setNomFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.nom = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link typ}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTypFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.typ = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link max}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setMaxFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = booleanFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.max = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LevelType} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LevelType},\n * or an error if any\n */\nexport function levelTypeFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LevelType, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LevelType>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLevelType();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LEVEL_TYPE.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.LevelType, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.min === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'min' is missing\"\n    );\n  }\n\n  if (setter.nom === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'nom' is missing\"\n    );\n  }\n\n  if (setter.typ === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'typ' is missing\"\n    );\n  }\n\n  if (setter.max === null) {\n    return newDeserializationError<AasTypes.LevelType>(\n      \"The required property 'max' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.LevelType, DeserializationError>(\n    new AasTypes.LevelType(setter.min, setter.nom, setter.typ, setter.max),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ValueReferencePair}.\n */\nclass SetterForValueReferencePair {\n  value: string | null = null;\n\n  valueId: AasTypes.Reference | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!ValueReferencePair} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ValueReferencePair},\n * or an error if any\n */\nexport function valueReferencePairFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ValueReferencePair, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForValueReferencePair();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_VALUE_REFERENCE_PAIR.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ValueReferencePair, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.value === null) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"The required property 'value' is missing\"\n    );\n  }\n\n  if (setter.valueId === null) {\n    return newDeserializationError<AasTypes.ValueReferencePair>(\n      \"The required property 'valueId' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ValueReferencePair, DeserializationError>(\n    new AasTypes.ValueReferencePair(setter.value, setter.valueId),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!ValueList}.\n */\nclass SetterForValueList {\n  valueReferencePairs: Array<AasTypes.ValueReferencePair> | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueReferencePairs}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueReferencePairsFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.ValueReferencePair>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = valueReferencePairFromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.valueReferencePairs = items;\n    return null;\n  }\n}\n\n/**\n * Parse an instance of {@link types!ValueList} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!ValueList},\n * or an error if any\n */\nexport function valueListFromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.ValueList, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.ValueList>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.ValueList>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.ValueList>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForValueList();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_VALUE_LIST.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<AasTypes.ValueList, DeserializationError>(\n        null,\n        error\n      );\n    }\n  }\n\n  if (setter.valueReferencePairs === null) {\n    return newDeserializationError<AasTypes.ValueList>(\n      \"The required property 'valueReferencePairs' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.ValueList, DeserializationError>(\n    new AasTypes.ValueList(setter.valueReferencePairs),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringPreferredNameTypeIec61360}.\n */\nclass SetterForLangStringPreferredNameTypeIec61360 {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringPreferredNameTypeIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringPreferredNameTypeIec61360},\n * or an error if any\n */\nexport function langStringPreferredNameTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<\n  AasTypes.LangStringPreferredNameTypeIec61360,\n  DeserializationError\n> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringPreferredNameTypeIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod =\n      SETTER_MAP_FOR_LANG_STRING_PREFERRED_NAME_TYPE_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.LangStringPreferredNameTypeIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringPreferredNameTypeIec61360>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.LangStringPreferredNameTypeIec61360,\n    DeserializationError\n  >(\n    new AasTypes.LangStringPreferredNameTypeIec61360(setter.language, setter.text),\n    null\n  );\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringShortNameTypeIec61360}.\n */\nclass SetterForLangStringShortNameTypeIec61360 {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringShortNameTypeIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringShortNameTypeIec61360},\n * or an error if any\n */\nexport function langStringShortNameTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringShortNameTypeIec61360, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringShortNameTypeIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_SHORT_NAME_TYPE_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.LangStringShortNameTypeIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringShortNameTypeIec61360>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.LangStringShortNameTypeIec61360,\n    DeserializationError\n  >(new AasTypes.LangStringShortNameTypeIec61360(setter.language, setter.text), null);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!LangStringDefinitionTypeIec61360}.\n */\nclass SetterForLangStringDefinitionTypeIec61360 {\n  language: string | null = null;\n\n  text: string | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link language}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLanguageFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.language = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link text}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setTextFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.text = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!LangStringDefinitionTypeIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!LangStringDefinitionTypeIec61360},\n * or an error if any\n */\nexport function langStringDefinitionTypeIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.LangStringDefinitionTypeIec61360, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForLangStringDefinitionTypeIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_LANG_STRING_DEFINITION_TYPE_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.LangStringDefinitionTypeIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.language === null) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"The required property 'language' is missing\"\n    );\n  }\n\n  if (setter.text === null) {\n    return newDeserializationError<AasTypes.LangStringDefinitionTypeIec61360>(\n      \"The required property 'text' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<\n    AasTypes.LangStringDefinitionTypeIec61360,\n    DeserializationError\n  >(new AasTypes.LangStringDefinitionTypeIec61360(setter.language, setter.text), null);\n}\n\n/**\n * Provide de-serialize & set methods for properties\n * of {@link types!DataSpecificationIec61360}.\n */\nclass SetterForDataSpecificationIec61360 {\n  preferredName: Array<AasTypes.LangStringPreferredNameTypeIec61360> | null = null;\n\n  shortName: Array<AasTypes.LangStringShortNameTypeIec61360> | null = null;\n\n  unit: string | null = null;\n\n  unitId: AasTypes.Reference | null = null;\n\n  sourceOfDefinition: string | null = null;\n\n  symbol: string | null = null;\n\n  dataType: AasTypes.DataTypeIec61360 | null = null;\n\n  definition: Array<AasTypes.LangStringDefinitionTypeIec61360> | null = null;\n\n  valueFormat: string | null = null;\n\n  valueList: AasTypes.ValueList | null = null;\n\n  value: string | null = null;\n\n  levelType: AasTypes.LevelType | null = null;\n\n  /**\n   * Ignore `jsonable` and do not set anything.\n   *\n   * @param jsonable - to be ignored instead of set\n   * @returns error, if any\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ignore(jsonable: JsonValue): DeserializationError | null {\n    // Intentionally empty.\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link preferredName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setPreferredNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringPreferredNameTypeIec61360>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringPreferredNameTypeIec61360FromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.preferredName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link shortName}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setShortNameFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringShortNameTypeIec61360>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringShortNameTypeIec61360FromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.shortName = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link unit}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setUnitFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.unit = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link unitId}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setUnitIdFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = referenceFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.unitId = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link sourceOfDefinition}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSourceOfDefinitionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.sourceOfDefinition = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link symbol}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setSymbolFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.symbol = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link dataType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDataTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = dataTypeIec61360FromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.dataType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link definition}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setDefinitionFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    if (jsonable === null) {\n      return new DeserializationError(\"Expected an iterable, but got null\");\n    }\n    if (typeof jsonable !== \"object\") {\n      return new DeserializationError(\n        `Expected an iterable, but got: ${typeof jsonable}`\n      );\n    }\n    if (typeof jsonable[Symbol.iterator] !== \"function\") {\n      return new DeserializationError(\n        \"Expected an iterable with iterator function, \" +\n          `but got iterator of type: ${typeof jsonable[Symbol.iterator]}`\n      );\n    }\n\n    const iterable = <Iterable<JsonValue>>jsonable;\n\n    const items = new Array<AasTypes.LangStringDefinitionTypeIec61360>();\n\n    let i = 0;\n    for (const jsonableItem of iterable) {\n      const itemOrError = langStringDefinitionTypeIec61360FromJsonable(jsonableItem);\n\n      if (itemOrError.error !== null) {\n        itemOrError.error.path.prepend(new IndexSegment(iterable, i));\n        return itemOrError.error;\n      }\n\n      items.push(itemOrError.mustValue());\n      i++;\n    }\n\n    this.definition = items;\n    return null;\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueFormat}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFormatFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueFormat = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link valueList}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueListFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = valueListFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.valueList = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link value}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setValueFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = stringFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.value = parsedOrError.mustValue();\n      return null;\n    }\n  }\n\n  /**\n   * Parse `jsonable` as the value of {@link levelType}.\n   *\n   * @param jsonable - to be parsed\n   * @returns error, if any\n   */\n  setLevelTypeFromJsonable(jsonable: JsonValue): DeserializationError | null {\n    const parsedOrError = levelTypeFromJsonable(jsonable);\n    if (parsedOrError.error !== null) {\n      return parsedOrError.error;\n    } else {\n      this.levelType = parsedOrError.mustValue();\n      return null;\n    }\n  }\n}\n\n/**\n * Parse an instance of {@link types!DataSpecificationIec61360} from the JSON-able\n * structure `jsonable`.\n *\n * @param jsonable - structure to be parsed\n * @returns parsed instance of {@link types!DataSpecificationIec61360},\n * or an error if any\n */\nexport function dataSpecificationIec61360FromJsonable(\n  jsonable: JsonValue\n): AasCommon.Either<AasTypes.DataSpecificationIec61360, DeserializationError> {\n  if (jsonable === null) {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      \"Expected a JSON object, but got null\"\n    );\n  }\n  if (Array.isArray(jsonable)) {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      \"Expected a JSON object, but got a JSON array\"\n    );\n  }\n  if (typeof jsonable !== \"object\") {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      `Expected a JSON object, but got: ${typeof jsonable}`\n    );\n  }\n\n  const setter = new SetterForDataSpecificationIec61360();\n\n  for (const key in jsonable) {\n    const jsonableValue = jsonable[key];\n    const setterMethod = SETTER_MAP_FOR_DATA_SPECIFICATION_IEC_61360.get(key);\n\n    // NOTE (mristin, 2022-11-30):\n    // Since we conflate here a JavaScript object with a JSON object, we ignore\n    // properties which we do not know how to de-serialize and assume they are\n    // related to the *JavaScript* properties of the object or `Object` prototype.\n    if (setterMethod === undefined) {\n      continue;\n    }\n\n    const error = setterMethod.call(setter, jsonableValue);\n    if (error !== null) {\n      error.path.prepend(new PropertySegment(<JsonObject>jsonable, key));\n      return new AasCommon.Either<\n        AasTypes.DataSpecificationIec61360,\n        DeserializationError\n      >(null, error);\n    }\n  }\n\n  if (setter.preferredName === null) {\n    return newDeserializationError<AasTypes.DataSpecificationIec61360>(\n      \"The required property 'preferredName' is missing\"\n    );\n  }\n\n  return new AasCommon.Either<AasTypes.DataSpecificationIec61360, DeserializationError>(\n    new AasTypes.DataSpecificationIec61360(\n      setter.preferredName,\n      setter.shortName,\n      setter.unit,\n      setter.unitId,\n      setter.sourceOfDefinition,\n      setter.symbol,\n      setter.dataType,\n      setter.definition,\n      setter.valueFormat,\n      setter.valueList,\n      setter.value,\n      setter.levelType\n    ),\n    null\n  );\n}\n\nconst HAS_SEMANTICS_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasSemantics, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"Extension\", extensionFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Qualifier\", qualifierFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"SpecificAssetId\", specificAssetIdFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_EXTENSION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"semanticId\", SetterForExtension.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForExtension.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"name\", SetterForExtension.prototype.setNameFromJsonable],\n  [\"valueType\", SetterForExtension.prototype.setValueTypeFromJsonable],\n  [\"value\", SetterForExtension.prototype.setValueFromJsonable],\n  [\"refersTo\", SetterForExtension.prototype.setRefersToFromJsonable],\n  [\"modelType\", SetterForExtension.prototype.ignore]\n]);\n\nconst HAS_EXTENSIONS_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasExtensions, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst REFERABLE_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IReferable, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst IDENTIFIABLE_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IIdentifiable, DeserializationError>\n>([\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Submodel\", submodelFromJsonable]\n]);\n\nconst HAS_KIND_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasKind, DeserializationError>\n>([[\"Submodel\", submodelFromJsonable]]);\n\nconst HAS_DATA_SPECIFICATION_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IHasDataSpecification, DeserializationError>\n>([\n  [\"AdministrativeInformation\", administrativeInformationFromJsonable],\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"AssetAdministrationShell\", assetAdministrationShellFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"ConceptDescription\", conceptDescriptionFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_ADMINISTRATIVE_INFORMATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"embeddedDataSpecifications\",\n    SetterForAdministrativeInformation.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"version\", SetterForAdministrativeInformation.prototype.setVersionFromJsonable],\n  [\"revision\", SetterForAdministrativeInformation.prototype.setRevisionFromJsonable],\n  [\"creator\", SetterForAdministrativeInformation.prototype.setCreatorFromJsonable],\n  [\n    \"templateId\",\n    SetterForAdministrativeInformation.prototype.setTemplateIdFromJsonable\n  ],\n  [\"modelType\", SetterForAdministrativeInformation.prototype.ignore]\n]);\n\nconst QUALIFIABLE_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IQualifiable, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"Submodel\", submodelFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_QUALIFIER = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"semanticId\", SetterForQualifier.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForQualifier.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"kind\", SetterForQualifier.prototype.setKindFromJsonable],\n  [\"type\", SetterForQualifier.prototype.setTypeFromJsonable],\n  [\"valueType\", SetterForQualifier.prototype.setValueTypeFromJsonable],\n  [\"value\", SetterForQualifier.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForQualifier.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForQualifier.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ASSET_ADMINISTRATION_SHELL = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForAssetAdministrationShell.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForAssetAdministrationShell.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForAssetAdministrationShell.prototype.setIdShortFromJsonable],\n  [\n    \"displayName\",\n    SetterForAssetAdministrationShell.prototype.setDisplayNameFromJsonable\n  ],\n  [\n    \"description\",\n    SetterForAssetAdministrationShell.prototype.setDescriptionFromJsonable\n  ],\n  [\n    \"administration\",\n    SetterForAssetAdministrationShell.prototype.setAdministrationFromJsonable\n  ],\n  [\"id\", SetterForAssetAdministrationShell.prototype.setIdFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForAssetAdministrationShell.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\n    \"derivedFrom\",\n    SetterForAssetAdministrationShell.prototype.setDerivedFromFromJsonable\n  ],\n  [\n    \"assetInformation\",\n    SetterForAssetAdministrationShell.prototype.setAssetInformationFromJsonable\n  ],\n  [\"submodels\", SetterForAssetAdministrationShell.prototype.setSubmodelsFromJsonable],\n  [\"modelType\", SetterForAssetAdministrationShell.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ASSET_INFORMATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"assetKind\", SetterForAssetInformation.prototype.setAssetKindFromJsonable],\n  [\"globalAssetId\", SetterForAssetInformation.prototype.setGlobalAssetIdFromJsonable],\n  [\n    \"specificAssetIds\",\n    SetterForAssetInformation.prototype.setSpecificAssetIdsFromJsonable\n  ],\n  [\"assetType\", SetterForAssetInformation.prototype.setAssetTypeFromJsonable],\n  [\n    \"defaultThumbnail\",\n    SetterForAssetInformation.prototype.setDefaultThumbnailFromJsonable\n  ],\n  [\"modelType\", SetterForAssetInformation.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_RESOURCE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"path\", SetterForResource.prototype.setPathFromJsonable],\n  [\"contentType\", SetterForResource.prototype.setContentTypeFromJsonable],\n  [\"modelType\", SetterForResource.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SPECIFIC_ASSET_ID = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"semanticId\", SetterForSpecificAssetId.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSpecificAssetId.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"name\", SetterForSpecificAssetId.prototype.setNameFromJsonable],\n  [\"value\", SetterForSpecificAssetId.prototype.setValueFromJsonable],\n  [\n    \"externalSubjectId\",\n    SetterForSpecificAssetId.prototype.setExternalSubjectIdFromJsonable\n  ],\n  [\"modelType\", SetterForSpecificAssetId.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SUBMODEL = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForSubmodel.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForSubmodel.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForSubmodel.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForSubmodel.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForSubmodel.prototype.setDescriptionFromJsonable],\n  [\"administration\", SetterForSubmodel.prototype.setAdministrationFromJsonable],\n  [\"id\", SetterForSubmodel.prototype.setIdFromJsonable],\n  [\"kind\", SetterForSubmodel.prototype.setKindFromJsonable],\n  [\"semanticId\", SetterForSubmodel.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSubmodel.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForSubmodel.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForSubmodel.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"submodelElements\", SetterForSubmodel.prototype.setSubmodelElementsFromJsonable],\n  [\"modelType\", SetterForSubmodel.prototype.ignore]\n]);\n\nconst SUBMODEL_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.ISubmodelElement, DeserializationError>\n>([\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch],\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"BasicEventElement\", basicEventElementFromJsonable],\n  [\"Blob\", blobFromJsonable],\n  [\"Capability\", capabilityFromJsonable],\n  [\"Entity\", entityFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Operation\", operationFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable],\n  [\"SubmodelElementCollection\", submodelElementCollectionFromJsonable],\n  [\"SubmodelElementList\", submodelElementListFromJsonable]\n]);\n\nconst RELATIONSHIP_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IRelationshipElement, DeserializationError>\n>([\n  [\"AnnotatedRelationshipElement\", annotatedRelationshipElementFromJsonable],\n  [\"RelationshipElement\", relationshipElementFromJsonableWithoutDispatch]\n]);\n\nconst SETTER_MAP_FOR_RELATIONSHIP_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForRelationshipElement.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForRelationshipElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForRelationshipElement.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForRelationshipElement.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForRelationshipElement.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForRelationshipElement.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForRelationshipElement.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForRelationshipElement.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForRelationshipElement.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"first\", SetterForRelationshipElement.prototype.setFirstFromJsonable],\n  [\"second\", SetterForRelationshipElement.prototype.setSecondFromJsonable],\n  [\"modelType\", SetterForRelationshipElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SUBMODEL_ELEMENT_LIST = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForSubmodelElementList.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForSubmodelElementList.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForSubmodelElementList.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForSubmodelElementList.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForSubmodelElementList.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForSubmodelElementList.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSubmodelElementList.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForSubmodelElementList.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForSubmodelElementList.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\n    \"orderRelevant\",\n    SetterForSubmodelElementList.prototype.setOrderRelevantFromJsonable\n  ],\n  [\n    \"semanticIdListElement\",\n    SetterForSubmodelElementList.prototype.setSemanticIdListElementFromJsonable\n  ],\n  [\n    \"typeValueListElement\",\n    SetterForSubmodelElementList.prototype.setTypeValueListElementFromJsonable\n  ],\n  [\n    \"valueTypeListElement\",\n    SetterForSubmodelElementList.prototype.setValueTypeListElementFromJsonable\n  ],\n  [\"value\", SetterForSubmodelElementList.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForSubmodelElementList.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_SUBMODEL_ELEMENT_COLLECTION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"extensions\",\n    SetterForSubmodelElementCollection.prototype.setExtensionsFromJsonable\n  ],\n  [\"category\", SetterForSubmodelElementCollection.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForSubmodelElementCollection.prototype.setIdShortFromJsonable],\n  [\n    \"displayName\",\n    SetterForSubmodelElementCollection.prototype.setDisplayNameFromJsonable\n  ],\n  [\n    \"description\",\n    SetterForSubmodelElementCollection.prototype.setDescriptionFromJsonable\n  ],\n  [\n    \"semanticId\",\n    SetterForSubmodelElementCollection.prototype.setSemanticIdFromJsonable\n  ],\n  [\n    \"supplementalSemanticIds\",\n    SetterForSubmodelElementCollection.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\n    \"qualifiers\",\n    SetterForSubmodelElementCollection.prototype.setQualifiersFromJsonable\n  ],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForSubmodelElementCollection.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForSubmodelElementCollection.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForSubmodelElementCollection.prototype.ignore]\n]);\n\nconst DATA_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IDataElement, DeserializationError>\n>([\n  [\"Blob\", blobFromJsonable],\n  [\"File\", fileFromJsonable],\n  [\"MultiLanguageProperty\", multiLanguagePropertyFromJsonable],\n  [\"Property\", propertyFromJsonable],\n  [\"Range\", rangeFromJsonable],\n  [\"ReferenceElement\", referenceElementFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_PROPERTY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForProperty.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForProperty.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForProperty.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForProperty.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForProperty.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForProperty.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForProperty.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForProperty.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForProperty.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"valueType\", SetterForProperty.prototype.setValueTypeFromJsonable],\n  [\"value\", SetterForProperty.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForProperty.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForProperty.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_MULTI_LANGUAGE_PROPERTY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForMultiLanguageProperty.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForMultiLanguageProperty.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForMultiLanguageProperty.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForMultiLanguageProperty.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForMultiLanguageProperty.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForMultiLanguageProperty.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForMultiLanguageProperty.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForMultiLanguageProperty.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForMultiLanguageProperty.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForMultiLanguageProperty.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForMultiLanguageProperty.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForMultiLanguageProperty.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_RANGE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForRange.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForRange.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForRange.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForRange.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForRange.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForRange.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForRange.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForRange.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForRange.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"valueType\", SetterForRange.prototype.setValueTypeFromJsonable],\n  [\"min\", SetterForRange.prototype.setMinFromJsonable],\n  [\"max\", SetterForRange.prototype.setMaxFromJsonable],\n  [\"modelType\", SetterForRange.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_REFERENCE_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForReferenceElement.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForReferenceElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForReferenceElement.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForReferenceElement.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForReferenceElement.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForReferenceElement.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForReferenceElement.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForReferenceElement.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForReferenceElement.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForReferenceElement.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForReferenceElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_BLOB = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForBlob.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForBlob.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForBlob.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForBlob.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForBlob.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForBlob.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForBlob.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForBlob.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForBlob.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForBlob.prototype.setValueFromJsonable],\n  [\"contentType\", SetterForBlob.prototype.setContentTypeFromJsonable],\n  [\"modelType\", SetterForBlob.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_FILE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForFile.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForFile.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForFile.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForFile.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForFile.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForFile.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForFile.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForFile.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForFile.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"value\", SetterForFile.prototype.setValueFromJsonable],\n  [\"contentType\", SetterForFile.prototype.setContentTypeFromJsonable],\n  [\"modelType\", SetterForFile.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ANNOTATED_RELATIONSHIP_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"extensions\",\n    SetterForAnnotatedRelationshipElement.prototype.setExtensionsFromJsonable\n  ],\n  [\"category\", SetterForAnnotatedRelationshipElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForAnnotatedRelationshipElement.prototype.setIdShortFromJsonable],\n  [\n    \"displayName\",\n    SetterForAnnotatedRelationshipElement.prototype.setDisplayNameFromJsonable\n  ],\n  [\n    \"description\",\n    SetterForAnnotatedRelationshipElement.prototype.setDescriptionFromJsonable\n  ],\n  [\n    \"semanticId\",\n    SetterForAnnotatedRelationshipElement.prototype.setSemanticIdFromJsonable\n  ],\n  [\n    \"supplementalSemanticIds\",\n    SetterForAnnotatedRelationshipElement.prototype\n      .setSupplementalSemanticIdsFromJsonable\n  ],\n  [\n    \"qualifiers\",\n    SetterForAnnotatedRelationshipElement.prototype.setQualifiersFromJsonable\n  ],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForAnnotatedRelationshipElement.prototype\n      .setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"first\", SetterForAnnotatedRelationshipElement.prototype.setFirstFromJsonable],\n  [\"second\", SetterForAnnotatedRelationshipElement.prototype.setSecondFromJsonable],\n  [\n    \"annotations\",\n    SetterForAnnotatedRelationshipElement.prototype.setAnnotationsFromJsonable\n  ],\n  [\"modelType\", SetterForAnnotatedRelationshipElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ENTITY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForEntity.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForEntity.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForEntity.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForEntity.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForEntity.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForEntity.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForEntity.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForEntity.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForEntity.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"statements\", SetterForEntity.prototype.setStatementsFromJsonable],\n  [\"entityType\", SetterForEntity.prototype.setEntityTypeFromJsonable],\n  [\"globalAssetId\", SetterForEntity.prototype.setGlobalAssetIdFromJsonable],\n  [\"specificAssetIds\", SetterForEntity.prototype.setSpecificAssetIdsFromJsonable],\n  [\"modelType\", SetterForEntity.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_EVENT_PAYLOAD = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"source\", SetterForEventPayload.prototype.setSourceFromJsonable],\n  [\"sourceSemanticId\", SetterForEventPayload.prototype.setSourceSemanticIdFromJsonable],\n  [\n    \"observableReference\",\n    SetterForEventPayload.prototype.setObservableReferenceFromJsonable\n  ],\n  [\n    \"observableSemanticId\",\n    SetterForEventPayload.prototype.setObservableSemanticIdFromJsonable\n  ],\n  [\"topic\", SetterForEventPayload.prototype.setTopicFromJsonable],\n  [\"subjectId\", SetterForEventPayload.prototype.setSubjectIdFromJsonable],\n  [\"timeStamp\", SetterForEventPayload.prototype.setTimeStampFromJsonable],\n  [\"payload\", SetterForEventPayload.prototype.setPayloadFromJsonable],\n  [\"modelType\", SetterForEventPayload.prototype.ignore]\n]);\n\nconst EVENT_ELEMENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IEventElement, DeserializationError>\n>([[\"BasicEventElement\", basicEventElementFromJsonable]]);\n\nconst SETTER_MAP_FOR_BASIC_EVENT_ELEMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForBasicEventElement.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForBasicEventElement.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForBasicEventElement.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForBasicEventElement.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForBasicEventElement.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForBasicEventElement.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForBasicEventElement.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForBasicEventElement.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForBasicEventElement.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"observed\", SetterForBasicEventElement.prototype.setObservedFromJsonable],\n  [\"direction\", SetterForBasicEventElement.prototype.setDirectionFromJsonable],\n  [\"state\", SetterForBasicEventElement.prototype.setStateFromJsonable],\n  [\"messageTopic\", SetterForBasicEventElement.prototype.setMessageTopicFromJsonable],\n  [\"messageBroker\", SetterForBasicEventElement.prototype.setMessageBrokerFromJsonable],\n  [\"lastUpdate\", SetterForBasicEventElement.prototype.setLastUpdateFromJsonable],\n  [\"minInterval\", SetterForBasicEventElement.prototype.setMinIntervalFromJsonable],\n  [\"maxInterval\", SetterForBasicEventElement.prototype.setMaxIntervalFromJsonable],\n  [\"modelType\", SetterForBasicEventElement.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_OPERATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForOperation.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForOperation.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForOperation.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForOperation.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForOperation.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForOperation.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForOperation.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForOperation.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForOperation.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"inputVariables\", SetterForOperation.prototype.setInputVariablesFromJsonable],\n  [\"outputVariables\", SetterForOperation.prototype.setOutputVariablesFromJsonable],\n  [\"inoutputVariables\", SetterForOperation.prototype.setInoutputVariablesFromJsonable],\n  [\"modelType\", SetterForOperation.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_OPERATION_VARIABLE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"value\", SetterForOperationVariable.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForOperationVariable.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_CAPABILITY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForCapability.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForCapability.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForCapability.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForCapability.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForCapability.prototype.setDescriptionFromJsonable],\n  [\"semanticId\", SetterForCapability.prototype.setSemanticIdFromJsonable],\n  [\n    \"supplementalSemanticIds\",\n    SetterForCapability.prototype.setSupplementalSemanticIdsFromJsonable\n  ],\n  [\"qualifiers\", SetterForCapability.prototype.setQualifiersFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForCapability.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"modelType\", SetterForCapability.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_CONCEPT_DESCRIPTION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"extensions\", SetterForConceptDescription.prototype.setExtensionsFromJsonable],\n  [\"category\", SetterForConceptDescription.prototype.setCategoryFromJsonable],\n  [\"idShort\", SetterForConceptDescription.prototype.setIdShortFromJsonable],\n  [\"displayName\", SetterForConceptDescription.prototype.setDisplayNameFromJsonable],\n  [\"description\", SetterForConceptDescription.prototype.setDescriptionFromJsonable],\n  [\n    \"administration\",\n    SetterForConceptDescription.prototype.setAdministrationFromJsonable\n  ],\n  [\"id\", SetterForConceptDescription.prototype.setIdFromJsonable],\n  [\n    \"embeddedDataSpecifications\",\n    SetterForConceptDescription.prototype.setEmbeddedDataSpecificationsFromJsonable\n  ],\n  [\"isCaseOf\", SetterForConceptDescription.prototype.setIsCaseOfFromJsonable],\n  [\"modelType\", SetterForConceptDescription.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_REFERENCE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"type\", SetterForReference.prototype.setTypeFromJsonable],\n  [\n    \"referredSemanticId\",\n    SetterForReference.prototype.setReferredSemanticIdFromJsonable\n  ],\n  [\"keys\", SetterForReference.prototype.setKeysFromJsonable],\n  [\"modelType\", SetterForReference.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_KEY = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"type\", SetterForKey.prototype.setTypeFromJsonable],\n  [\"value\", SetterForKey.prototype.setValueFromJsonable],\n  [\"modelType\", SetterForKey.prototype.ignore]\n]);\n\nconst ABSTRACT_LANG_STRING_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (JsonValue) => AasCommon.Either<AasTypes.IAbstractLangString, DeserializationError>\n>([\n  [\"LangStringDefinitionTypeIec61360\", langStringDefinitionTypeIec61360FromJsonable],\n  [\"LangStringNameType\", langStringNameTypeFromJsonable],\n  [\n    \"LangStringPreferredNameTypeIec61360\",\n    langStringPreferredNameTypeIec61360FromJsonable\n  ],\n  [\"LangStringShortNameTypeIec61360\", langStringShortNameTypeIec61360FromJsonable],\n  [\"LangStringTextType\", langStringTextTypeFromJsonable]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_NAME_TYPE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"language\", SetterForLangStringNameType.prototype.setLanguageFromJsonable],\n  [\"text\", SetterForLangStringNameType.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringNameType.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_TEXT_TYPE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"language\", SetterForLangStringTextType.prototype.setLanguageFromJsonable],\n  [\"text\", SetterForLangStringTextType.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringTextType.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_ENVIRONMENT = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"assetAdministrationShells\",\n    SetterForEnvironment.prototype.setAssetAdministrationShellsFromJsonable\n  ],\n  [\"submodels\", SetterForEnvironment.prototype.setSubmodelsFromJsonable],\n  [\n    \"conceptDescriptions\",\n    SetterForEnvironment.prototype.setConceptDescriptionsFromJsonable\n  ],\n  [\"modelType\", SetterForEnvironment.prototype.ignore]\n]);\n\nconst DATA_SPECIFICATION_CONTENT_FROM_JSONABLE_DISPATCH = new Map<\n  string,\n  (\n    JsonValue\n  ) => AasCommon.Either<AasTypes.IDataSpecificationContent, DeserializationError>\n>([[\"DataSpecificationIec61360\", dataSpecificationIec61360FromJsonable]]);\n\nconst SETTER_MAP_FOR_EMBEDDED_DATA_SPECIFICATION = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"dataSpecificationContent\",\n    SetterForEmbeddedDataSpecification.prototype.setDataSpecificationContentFromJsonable\n  ],\n  [\n    \"dataSpecification\",\n    SetterForEmbeddedDataSpecification.prototype.setDataSpecificationFromJsonable\n  ],\n  [\"modelType\", SetterForEmbeddedDataSpecification.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LEVEL_TYPE = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"min\", SetterForLevelType.prototype.setMinFromJsonable],\n  [\"nom\", SetterForLevelType.prototype.setNomFromJsonable],\n  [\"typ\", SetterForLevelType.prototype.setTypFromJsonable],\n  [\"max\", SetterForLevelType.prototype.setMaxFromJsonable],\n  [\"modelType\", SetterForLevelType.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_VALUE_REFERENCE_PAIR = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\"value\", SetterForValueReferencePair.prototype.setValueFromJsonable],\n  [\"valueId\", SetterForValueReferencePair.prototype.setValueIdFromJsonable],\n  [\"modelType\", SetterForValueReferencePair.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_VALUE_LIST = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"valueReferencePairs\",\n    SetterForValueList.prototype.setValueReferencePairsFromJsonable\n  ],\n  [\"modelType\", SetterForValueList.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_PREFERRED_NAME_TYPE_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"language\",\n    SetterForLangStringPreferredNameTypeIec61360.prototype.setLanguageFromJsonable\n  ],\n  [\"text\", SetterForLangStringPreferredNameTypeIec61360.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringPreferredNameTypeIec61360.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_SHORT_NAME_TYPE_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"language\",\n    SetterForLangStringShortNameTypeIec61360.prototype.setLanguageFromJsonable\n  ],\n  [\"text\", SetterForLangStringShortNameTypeIec61360.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringShortNameTypeIec61360.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_LANG_STRING_DEFINITION_TYPE_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"language\",\n    SetterForLangStringDefinitionTypeIec61360.prototype.setLanguageFromJsonable\n  ],\n  [\"text\", SetterForLangStringDefinitionTypeIec61360.prototype.setTextFromJsonable],\n  [\"modelType\", SetterForLangStringDefinitionTypeIec61360.prototype.ignore]\n]);\n\nconst SETTER_MAP_FOR_DATA_SPECIFICATION_IEC_61360 = new Map<\n  string,\n  (jsonable: JsonValue) => DeserializationError | null\n>([\n  [\n    \"preferredName\",\n    SetterForDataSpecificationIec61360.prototype.setPreferredNameFromJsonable\n  ],\n  [\"shortName\", SetterForDataSpecificationIec61360.prototype.setShortNameFromJsonable],\n  [\"unit\", SetterForDataSpecificationIec61360.prototype.setUnitFromJsonable],\n  [\"unitId\", SetterForDataSpecificationIec61360.prototype.setUnitIdFromJsonable],\n  [\n    \"sourceOfDefinition\",\n    SetterForDataSpecificationIec61360.prototype.setSourceOfDefinitionFromJsonable\n  ],\n  [\"symbol\", SetterForDataSpecificationIec61360.prototype.setSymbolFromJsonable],\n  [\"dataType\", SetterForDataSpecificationIec61360.prototype.setDataTypeFromJsonable],\n  [\n    \"definition\",\n    SetterForDataSpecificationIec61360.prototype.setDefinitionFromJsonable\n  ],\n  [\n    \"valueFormat\",\n    SetterForDataSpecificationIec61360.prototype.setValueFormatFromJsonable\n  ],\n  [\"valueList\", SetterForDataSpecificationIec61360.prototype.setValueListFromJsonable],\n  [\"value\", SetterForDataSpecificationIec61360.prototype.setValueFromJsonable],\n  [\"levelType\", SetterForDataSpecificationIec61360.prototype.setLevelTypeFromJsonable],\n  [\"modelType\", SetterForDataSpecificationIec61360.prototype.ignore]\n]);\n\n// endregion\n\n// region Serialization\n\n/**\n * Transform the instance to its JSON-able representation.\n */\nclass Serializer extends AasTypes.AbstractTransformer<JsonObject> {\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformExtension(that: AasTypes.Extension): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    jsonable[\"name\"] = that.name;\n\n    if (that.valueType !== null) {\n      jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n        that.valueType\n      );\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.refersTo !== null) {\n      const refersToArray = new Array<JsonObject>();\n      for (const item of that.refersTo) {\n        refersToArray.push(this.transform(item));\n      }\n      jsonable[\"refersTo\"] = refersToArray;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAdministrativeInformation(\n    that: AasTypes.AdministrativeInformation\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.version !== null) {\n      jsonable[\"version\"] = that.version;\n    }\n\n    if (that.revision !== null) {\n      jsonable[\"revision\"] = that.revision;\n    }\n\n    if (that.creator !== null) {\n      jsonable[\"creator\"] = this.transform(that.creator);\n    }\n\n    if (that.templateId !== null) {\n      jsonable[\"templateId\"] = that.templateId;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformQualifier(that: AasTypes.Qualifier): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.kind !== null) {\n      jsonable[\"kind\"] = AasStringification.mustQualifierKindToString(that.kind);\n    }\n\n    jsonable[\"type\"] = that.type;\n\n    jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n      that.valueType\n    );\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.valueId !== null) {\n      jsonable[\"valueId\"] = this.transform(that.valueId);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAssetAdministrationShell(\n    that: AasTypes.AssetAdministrationShell\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.administration !== null) {\n      jsonable[\"administration\"] = this.transform(that.administration);\n    }\n\n    jsonable[\"id\"] = that.id;\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.derivedFrom !== null) {\n      jsonable[\"derivedFrom\"] = this.transform(that.derivedFrom);\n    }\n\n    jsonable[\"assetInformation\"] = this.transform(that.assetInformation);\n\n    if (that.submodels !== null) {\n      const submodelsArray = new Array<JsonObject>();\n      for (const item of that.submodels) {\n        submodelsArray.push(this.transform(item));\n      }\n      jsonable[\"submodels\"] = submodelsArray;\n    }\n\n    jsonable[\"modelType\"] = \"AssetAdministrationShell\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAssetInformation(that: AasTypes.AssetInformation): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"assetKind\"] = AasStringification.mustAssetKindToString(that.assetKind);\n\n    if (that.globalAssetId !== null) {\n      jsonable[\"globalAssetId\"] = that.globalAssetId;\n    }\n\n    if (that.specificAssetIds !== null) {\n      const specificAssetIdsArray = new Array<JsonObject>();\n      for (const item of that.specificAssetIds) {\n        specificAssetIdsArray.push(this.transform(item));\n      }\n      jsonable[\"specificAssetIds\"] = specificAssetIdsArray;\n    }\n\n    if (that.assetType !== null) {\n      jsonable[\"assetType\"] = that.assetType;\n    }\n\n    if (that.defaultThumbnail !== null) {\n      jsonable[\"defaultThumbnail\"] = this.transform(that.defaultThumbnail);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformResource(that: AasTypes.Resource): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"path\"] = that.path;\n\n    if (that.contentType !== null) {\n      jsonable[\"contentType\"] = that.contentType;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSpecificAssetId(that: AasTypes.SpecificAssetId): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    jsonable[\"name\"] = that.name;\n\n    jsonable[\"value\"] = that.value;\n\n    if (that.externalSubjectId !== null) {\n      jsonable[\"externalSubjectId\"] = this.transform(that.externalSubjectId);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSubmodel(that: AasTypes.Submodel): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.administration !== null) {\n      jsonable[\"administration\"] = this.transform(that.administration);\n    }\n\n    jsonable[\"id\"] = that.id;\n\n    if (that.kind !== null) {\n      jsonable[\"kind\"] = AasStringification.mustModellingKindToString(that.kind);\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.submodelElements !== null) {\n      const submodelElementsArray = new Array<JsonObject>();\n      for (const item of that.submodelElements) {\n        submodelElementsArray.push(this.transform(item));\n      }\n      jsonable[\"submodelElements\"] = submodelElementsArray;\n    }\n\n    jsonable[\"modelType\"] = \"Submodel\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformRelationshipElement(that: AasTypes.RelationshipElement): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"first\"] = this.transform(that.first);\n\n    jsonable[\"second\"] = this.transform(that.second);\n\n    jsonable[\"modelType\"] = \"RelationshipElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSubmodelElementList(that: AasTypes.SubmodelElementList): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.orderRelevant !== null) {\n      jsonable[\"orderRelevant\"] = that.orderRelevant;\n    }\n\n    if (that.semanticIdListElement !== null) {\n      jsonable[\"semanticIdListElement\"] = this.transform(that.semanticIdListElement);\n    }\n\n    jsonable[\"typeValueListElement\"] =\n      AasStringification.mustAasSubmodelElementsToString(that.typeValueListElement);\n\n    if (that.valueTypeListElement !== null) {\n      jsonable[\"valueTypeListElement\"] = AasStringification.mustDataTypeDefXsdToString(\n        that.valueTypeListElement\n      );\n    }\n\n    if (that.value !== null) {\n      const valueArray = new Array<JsonObject>();\n      for (const item of that.value) {\n        valueArray.push(this.transform(item));\n      }\n      jsonable[\"value\"] = valueArray;\n    }\n\n    jsonable[\"modelType\"] = \"SubmodelElementList\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformSubmodelElementCollection(\n    that: AasTypes.SubmodelElementCollection\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      const valueArray = new Array<JsonObject>();\n      for (const item of that.value) {\n        valueArray.push(this.transform(item));\n      }\n      jsonable[\"value\"] = valueArray;\n    }\n\n    jsonable[\"modelType\"] = \"SubmodelElementCollection\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformProperty(that: AasTypes.Property): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n      that.valueType\n    );\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.valueId !== null) {\n      jsonable[\"valueId\"] = this.transform(that.valueId);\n    }\n\n    jsonable[\"modelType\"] = \"Property\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformMultiLanguageProperty(that: AasTypes.MultiLanguageProperty): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      const valueArray = new Array<JsonObject>();\n      for (const item of that.value) {\n        valueArray.push(this.transform(item));\n      }\n      jsonable[\"value\"] = valueArray;\n    }\n\n    if (that.valueId !== null) {\n      jsonable[\"valueId\"] = this.transform(that.valueId);\n    }\n\n    jsonable[\"modelType\"] = \"MultiLanguageProperty\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformRange(that: AasTypes.Range): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"valueType\"] = AasStringification.mustDataTypeDefXsdToString(\n      that.valueType\n    );\n\n    if (that.min !== null) {\n      jsonable[\"min\"] = that.min;\n    }\n\n    if (that.max !== null) {\n      jsonable[\"max\"] = that.max;\n    }\n\n    jsonable[\"modelType\"] = \"Range\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformReferenceElement(that: AasTypes.ReferenceElement): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = this.transform(that.value);\n    }\n\n    jsonable[\"modelType\"] = \"ReferenceElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformBlob(that: AasTypes.Blob): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = AasCommon.base64Encode(that.value);\n    }\n\n    jsonable[\"contentType\"] = that.contentType;\n\n    jsonable[\"modelType\"] = \"Blob\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformFile(that: AasTypes.File): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    jsonable[\"contentType\"] = that.contentType;\n\n    jsonable[\"modelType\"] = \"File\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformAnnotatedRelationshipElement(\n    that: AasTypes.AnnotatedRelationshipElement\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"first\"] = this.transform(that.first);\n\n    jsonable[\"second\"] = this.transform(that.second);\n\n    if (that.annotations !== null) {\n      const annotationsArray = new Array<JsonObject>();\n      for (const item of that.annotations) {\n        annotationsArray.push(this.transform(item));\n      }\n      jsonable[\"annotations\"] = annotationsArray;\n    }\n\n    jsonable[\"modelType\"] = \"AnnotatedRelationshipElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEntity(that: AasTypes.Entity): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.statements !== null) {\n      const statementsArray = new Array<JsonObject>();\n      for (const item of that.statements) {\n        statementsArray.push(this.transform(item));\n      }\n      jsonable[\"statements\"] = statementsArray;\n    }\n\n    jsonable[\"entityType\"] = AasStringification.mustEntityTypeToString(that.entityType);\n\n    if (that.globalAssetId !== null) {\n      jsonable[\"globalAssetId\"] = that.globalAssetId;\n    }\n\n    if (that.specificAssetIds !== null) {\n      const specificAssetIdsArray = new Array<JsonObject>();\n      for (const item of that.specificAssetIds) {\n        specificAssetIdsArray.push(this.transform(item));\n      }\n      jsonable[\"specificAssetIds\"] = specificAssetIdsArray;\n    }\n\n    jsonable[\"modelType\"] = \"Entity\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEventPayload(that: AasTypes.EventPayload): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"source\"] = this.transform(that.source);\n\n    if (that.sourceSemanticId !== null) {\n      jsonable[\"sourceSemanticId\"] = this.transform(that.sourceSemanticId);\n    }\n\n    jsonable[\"observableReference\"] = this.transform(that.observableReference);\n\n    if (that.observableSemanticId !== null) {\n      jsonable[\"observableSemanticId\"] = this.transform(that.observableSemanticId);\n    }\n\n    if (that.topic !== null) {\n      jsonable[\"topic\"] = that.topic;\n    }\n\n    if (that.subjectId !== null) {\n      jsonable[\"subjectId\"] = this.transform(that.subjectId);\n    }\n\n    jsonable[\"timeStamp\"] = that.timeStamp;\n\n    if (that.payload !== null) {\n      jsonable[\"payload\"] = AasCommon.base64Encode(that.payload);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformBasicEventElement(that: AasTypes.BasicEventElement): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"observed\"] = this.transform(that.observed);\n\n    jsonable[\"direction\"] = AasStringification.mustDirectionToString(that.direction);\n\n    jsonable[\"state\"] = AasStringification.mustStateOfEventToString(that.state);\n\n    if (that.messageTopic !== null) {\n      jsonable[\"messageTopic\"] = that.messageTopic;\n    }\n\n    if (that.messageBroker !== null) {\n      jsonable[\"messageBroker\"] = this.transform(that.messageBroker);\n    }\n\n    if (that.lastUpdate !== null) {\n      jsonable[\"lastUpdate\"] = that.lastUpdate;\n    }\n\n    if (that.minInterval !== null) {\n      jsonable[\"minInterval\"] = that.minInterval;\n    }\n\n    if (that.maxInterval !== null) {\n      jsonable[\"maxInterval\"] = that.maxInterval;\n    }\n\n    jsonable[\"modelType\"] = \"BasicEventElement\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformOperation(that: AasTypes.Operation): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.inputVariables !== null) {\n      const inputVariablesArray = new Array<JsonObject>();\n      for (const item of that.inputVariables) {\n        inputVariablesArray.push(this.transform(item));\n      }\n      jsonable[\"inputVariables\"] = inputVariablesArray;\n    }\n\n    if (that.outputVariables !== null) {\n      const outputVariablesArray = new Array<JsonObject>();\n      for (const item of that.outputVariables) {\n        outputVariablesArray.push(this.transform(item));\n      }\n      jsonable[\"outputVariables\"] = outputVariablesArray;\n    }\n\n    if (that.inoutputVariables !== null) {\n      const inoutputVariablesArray = new Array<JsonObject>();\n      for (const item of that.inoutputVariables) {\n        inoutputVariablesArray.push(this.transform(item));\n      }\n      jsonable[\"inoutputVariables\"] = inoutputVariablesArray;\n    }\n\n    jsonable[\"modelType\"] = \"Operation\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformOperationVariable(that: AasTypes.OperationVariable): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"value\"] = this.transform(that.value);\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformCapability(that: AasTypes.Capability): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.semanticId !== null) {\n      jsonable[\"semanticId\"] = this.transform(that.semanticId);\n    }\n\n    if (that.supplementalSemanticIds !== null) {\n      const supplementalSemanticIdsArray = new Array<JsonObject>();\n      for (const item of that.supplementalSemanticIds) {\n        supplementalSemanticIdsArray.push(this.transform(item));\n      }\n      jsonable[\"supplementalSemanticIds\"] = supplementalSemanticIdsArray;\n    }\n\n    if (that.qualifiers !== null) {\n      const qualifiersArray = new Array<JsonObject>();\n      for (const item of that.qualifiers) {\n        qualifiersArray.push(this.transform(item));\n      }\n      jsonable[\"qualifiers\"] = qualifiersArray;\n    }\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    jsonable[\"modelType\"] = \"Capability\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformConceptDescription(that: AasTypes.ConceptDescription): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.extensions !== null) {\n      const extensionsArray = new Array<JsonObject>();\n      for (const item of that.extensions) {\n        extensionsArray.push(this.transform(item));\n      }\n      jsonable[\"extensions\"] = extensionsArray;\n    }\n\n    if (that.category !== null) {\n      jsonable[\"category\"] = that.category;\n    }\n\n    if (that.idShort !== null) {\n      jsonable[\"idShort\"] = that.idShort;\n    }\n\n    if (that.displayName !== null) {\n      const displayNameArray = new Array<JsonObject>();\n      for (const item of that.displayName) {\n        displayNameArray.push(this.transform(item));\n      }\n      jsonable[\"displayName\"] = displayNameArray;\n    }\n\n    if (that.description !== null) {\n      const descriptionArray = new Array<JsonObject>();\n      for (const item of that.description) {\n        descriptionArray.push(this.transform(item));\n      }\n      jsonable[\"description\"] = descriptionArray;\n    }\n\n    if (that.administration !== null) {\n      jsonable[\"administration\"] = this.transform(that.administration);\n    }\n\n    jsonable[\"id\"] = that.id;\n\n    if (that.embeddedDataSpecifications !== null) {\n      const embeddedDataSpecificationsArray = new Array<JsonObject>();\n      for (const item of that.embeddedDataSpecifications) {\n        embeddedDataSpecificationsArray.push(this.transform(item));\n      }\n      jsonable[\"embeddedDataSpecifications\"] = embeddedDataSpecificationsArray;\n    }\n\n    if (that.isCaseOf !== null) {\n      const isCaseOfArray = new Array<JsonObject>();\n      for (const item of that.isCaseOf) {\n        isCaseOfArray.push(this.transform(item));\n      }\n      jsonable[\"isCaseOf\"] = isCaseOfArray;\n    }\n\n    jsonable[\"modelType\"] = \"ConceptDescription\";\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformReference(that: AasTypes.Reference): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"type\"] = AasStringification.mustReferenceTypesToString(that.type);\n\n    if (that.referredSemanticId !== null) {\n      jsonable[\"referredSemanticId\"] = this.transform(that.referredSemanticId);\n    }\n\n    const keysArray = new Array<JsonObject>();\n    for (const item of that.keys) {\n      keysArray.push(this.transform(item));\n    }\n    jsonable[\"keys\"] = keysArray;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformKey(that: AasTypes.Key): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"type\"] = AasStringification.mustKeyTypesToString(that.type);\n\n    jsonable[\"value\"] = that.value;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringNameType(that: AasTypes.LangStringNameType): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringTextType(that: AasTypes.LangStringTextType): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEnvironment(that: AasTypes.Environment): JsonObject {\n    const jsonable: JsonObject = {};\n\n    if (that.assetAdministrationShells !== null) {\n      const assetAdministrationShellsArray = new Array<JsonObject>();\n      for (const item of that.assetAdministrationShells) {\n        assetAdministrationShellsArray.push(this.transform(item));\n      }\n      jsonable[\"assetAdministrationShells\"] = assetAdministrationShellsArray;\n    }\n\n    if (that.submodels !== null) {\n      const submodelsArray = new Array<JsonObject>();\n      for (const item of that.submodels) {\n        submodelsArray.push(this.transform(item));\n      }\n      jsonable[\"submodels\"] = submodelsArray;\n    }\n\n    if (that.conceptDescriptions !== null) {\n      const conceptDescriptionsArray = new Array<JsonObject>();\n      for (const item of that.conceptDescriptions) {\n        conceptDescriptionsArray.push(this.transform(item));\n      }\n      jsonable[\"conceptDescriptions\"] = conceptDescriptionsArray;\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformEmbeddedDataSpecification(\n    that: AasTypes.EmbeddedDataSpecification\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"dataSpecificationContent\"] = this.transform(\n      that.dataSpecificationContent\n    );\n\n    if (that.dataSpecification !== null) {\n      jsonable[\"dataSpecification\"] = this.transform(that.dataSpecification);\n    }\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLevelType(that: AasTypes.LevelType): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"min\"] = that.min;\n\n    jsonable[\"nom\"] = that.nom;\n\n    jsonable[\"typ\"] = that.typ;\n\n    jsonable[\"max\"] = that.max;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformValueReferencePair(that: AasTypes.ValueReferencePair): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"value\"] = that.value;\n\n    jsonable[\"valueId\"] = this.transform(that.valueId);\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformValueList(that: AasTypes.ValueList): JsonObject {\n    const jsonable: JsonObject = {};\n\n    const valueReferencePairsArray = new Array<JsonObject>();\n    for (const item of that.valueReferencePairs) {\n      valueReferencePairsArray.push(this.transform(item));\n    }\n    jsonable[\"valueReferencePairs\"] = valueReferencePairsArray;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringPreferredNameTypeIec61360(\n    that: AasTypes.LangStringPreferredNameTypeIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringShortNameTypeIec61360(\n    that: AasTypes.LangStringShortNameTypeIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformLangStringDefinitionTypeIec61360(\n    that: AasTypes.LangStringDefinitionTypeIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    jsonable[\"language\"] = that.language;\n\n    jsonable[\"text\"] = that.text;\n\n    return jsonable;\n  }\n\n  /**\n   * Serialize `that` to a JSON-able representation.\n   *\n   * @param that - instance to be serialization\n   * @returns JSON-able representation\n   */\n  transformDataSpecificationIec61360(\n    that: AasTypes.DataSpecificationIec61360\n  ): JsonObject {\n    const jsonable: JsonObject = {};\n\n    const preferredNameArray = new Array<JsonObject>();\n    for (const item of that.preferredName) {\n      preferredNameArray.push(this.transform(item));\n    }\n    jsonable[\"preferredName\"] = preferredNameArray;\n\n    if (that.shortName !== null) {\n      const shortNameArray = new Array<JsonObject>();\n      for (const item of that.shortName) {\n        shortNameArray.push(this.transform(item));\n      }\n      jsonable[\"shortName\"] = shortNameArray;\n    }\n\n    if (that.unit !== null) {\n      jsonable[\"unit\"] = that.unit;\n    }\n\n    if (that.unitId !== null) {\n      jsonable[\"unitId\"] = this.transform(that.unitId);\n    }\n\n    if (that.sourceOfDefinition !== null) {\n      jsonable[\"sourceOfDefinition\"] = that.sourceOfDefinition;\n    }\n\n    if (that.symbol !== null) {\n      jsonable[\"symbol\"] = that.symbol;\n    }\n\n    if (that.dataType !== null) {\n      jsonable[\"dataType\"] = AasStringification.mustDataTypeIec61360ToString(\n        that.dataType\n      );\n    }\n\n    if (that.definition !== null) {\n      const definitionArray = new Array<JsonObject>();\n      for (const item of that.definition) {\n        definitionArray.push(this.transform(item));\n      }\n      jsonable[\"definition\"] = definitionArray;\n    }\n\n    if (that.valueFormat !== null) {\n      jsonable[\"valueFormat\"] = that.valueFormat;\n    }\n\n    if (that.valueList !== null) {\n      jsonable[\"valueList\"] = this.transform(that.valueList);\n    }\n\n    if (that.value !== null) {\n      jsonable[\"value\"] = that.value;\n    }\n\n    if (that.levelType !== null) {\n      jsonable[\"levelType\"] = this.transform(that.levelType);\n    }\n\n    jsonable[\"modelType\"] = \"DataSpecificationIec61360\";\n\n    return jsonable;\n  }\n}\n\nconst SERIALIZER = new Serializer();\n\n/**\n * Convert `that` to a JSON-able structure.\n *\n * @param that - AAS data to be recursively converted to a JSON-able structure\n * @returns\n * JSON-able structure which can be further processed with, say,\n * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify|JSON.stringify})\n */\nexport function toJsonable(that: AasTypes.Class): JsonObject {\n  return SERIALIZER.transform(that);\n}\n\n// endregion\n\n// This code has been automatically generated by aas-core-codegen.\n// Do NOT edit or append.\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAAA,SAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,kBAAA,GAAAH,uBAAA,CAAAC,OAAA;AAAwD,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAL,wBAAAS,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAW,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAC,SAAA,0DAAAF,QAAA,CAAAN,SAAA,GAAAJ,MAAA,CAAAa,MAAA,CAAAF,UAAA,IAAAA,UAAA,CAAAP,SAAA,IAAAU,WAAA,IAAAC,KAAA,EAAAL,QAAA,EAAAM,QAAA,QAAAC,YAAA,aAAAjB,MAAA,CAAAC,cAAA,CAAAS,QAAA,iBAAAM,QAAA,gBAAAL,UAAA,EAAAO,eAAA,CAAAR,QAAA,EAAAC,UAAA;AAAA,SAAAO,gBAAAC,CAAA,EAAAC,CAAA,IAAAF,eAAA,GAAAlB,MAAA,CAAAqB,cAAA,GAAArB,MAAA,CAAAqB,cAAA,CAAAC,IAAA,cAAAJ,gBAAAC,CAAA,EAAAC,CAAA,IAAAD,CAAA,CAAAI,SAAA,GAAAH,CAAA,SAAAD,CAAA,YAAAD,eAAA,CAAAC,CAAA,EAAAC,CAAA;AAAA,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAhB,WAAA,EAAAiB,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAE,0BAAA,OAAAN,MAAA;AAAA,SAAAM,2BAAAC,IAAA,EAAAhC,IAAA,QAAAA,IAAA,KAAAZ,OAAA,CAAAY,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAM,SAAA,uEAAA2B,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAX,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAO,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAvC,SAAA,CAAAwC,OAAA,CAAAtC,IAAA,CAAA2B,OAAA,CAAAC,SAAA,CAAAS,OAAA,8CAAAE,CAAA;AAAA,SAAAf,gBAAAX,CAAA,IAAAW,eAAA,GAAA9B,MAAA,CAAAqB,cAAA,GAAArB,MAAA,CAAA8C,cAAA,CAAAxB,IAAA,cAAAQ,gBAAAX,CAAA,WAAAA,CAAA,CAAAI,SAAA,IAAAvB,MAAA,CAAA8C,cAAA,CAAA3B,CAAA,aAAAW,eAAA,CAAAX,CAAA;AAAA,SAAA4B,2BAAA5B,CAAA,EAAA6B,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAA/B,CAAA,CAAA+B,MAAA,CAAAC,QAAA,KAAAhC,CAAA,qBAAA8B,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAlC,CAAA,MAAA8B,EAAA,GAAAK,2BAAA,CAAAnC,CAAA,MAAA6B,cAAA,IAAA7B,CAAA,WAAAA,CAAA,CAAAoC,MAAA,qBAAAN,EAAA,EAAA9B,CAAA,GAAA8B,EAAA,MAAAO,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAArC,CAAA,CAAAoC,MAAA,WAAAK,IAAA,mBAAAA,IAAA,SAAA7C,KAAA,EAAAI,CAAA,CAAAqC,CAAA,UAAAX,CAAA,WAAAA,EAAAgB,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAA7C,SAAA,iJAAAmD,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAP,CAAA,WAAAA,EAAA,IAAAT,EAAA,GAAAA,EAAA,CAAA3C,IAAA,CAAAa,CAAA,MAAAwC,CAAA,WAAAA,EAAA,QAAAO,IAAA,GAAAjB,EAAA,CAAAkB,IAAA,IAAAJ,gBAAA,GAAAG,IAAA,CAAAN,IAAA,SAAAM,IAAA,KAAArB,CAAA,WAAAA,EAAAuB,GAAA,IAAAJ,MAAA,SAAAC,GAAA,GAAAG,GAAA,KAAAN,CAAA,WAAAA,EAAA,eAAAC,gBAAA,IAAAd,EAAA,oBAAAA,EAAA,8BAAAe,MAAA,QAAAC,GAAA;AAAA,SAAAX,4BAAAnC,CAAA,EAAAkD,MAAA,SAAAlD,CAAA,qBAAAA,CAAA,sBAAAmD,iBAAA,CAAAnD,CAAA,EAAAkD,MAAA,OAAAV,CAAA,GAAA3D,MAAA,CAAAI,SAAA,CAAAmE,QAAA,CAAAjE,IAAA,CAAAa,CAAA,EAAAqD,KAAA,aAAAb,CAAA,iBAAAxC,CAAA,CAAAL,WAAA,EAAA6C,CAAA,GAAAxC,CAAA,CAAAL,WAAA,CAAA2D,IAAA,MAAAd,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAAsB,IAAA,CAAAvD,CAAA,OAAAwC,CAAA,+DAAAgB,IAAA,CAAAhB,CAAA,UAAAW,iBAAA,CAAAnD,CAAA,EAAAkD,MAAA;AAAA,SAAAC,kBAAAM,GAAA,EAAAC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAD,GAAA,CAAArB,MAAA,EAAAsB,GAAA,GAAAD,GAAA,CAAArB,MAAA,WAAAC,CAAA,MAAAsB,IAAA,OAAA1B,KAAA,CAAAyB,GAAA,GAAArB,CAAA,GAAAqB,GAAA,EAAArB,CAAA,IAAAsB,IAAA,CAAAtB,CAAA,IAAAoB,GAAA,CAAApB,CAAA,UAAAsB,IAAA;AAAA,SAAApF,QAAAF,GAAA,sCAAAE,OAAA,wBAAAwD,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAA3D,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAA0D,MAAA,IAAA1D,GAAA,CAAAsB,WAAA,KAAAoC,MAAA,IAAA1D,GAAA,KAAA0D,MAAA,CAAA9C,SAAA,qBAAAZ,GAAA,KAAAE,OAAA,CAAAF,GAAA;AAAA,SAAAuF,gBAAAvF,GAAA,EAAAW,GAAA,EAAAY,KAAA,IAAAZ,GAAA,GAAA6E,cAAA,CAAA7E,GAAA,OAAAA,GAAA,IAAAX,GAAA,IAAAQ,MAAA,CAAAC,cAAA,CAAAT,GAAA,EAAAW,GAAA,IAAAY,KAAA,EAAAA,KAAA,EAAAkE,UAAA,QAAAhE,YAAA,QAAAD,QAAA,oBAAAxB,GAAA,CAAAW,GAAA,IAAAY,KAAA,WAAAvB,GAAA;AAAA,SAAA0F,kBAAAC,MAAA,EAAAC,KAAA,aAAA5B,CAAA,MAAAA,CAAA,GAAA4B,KAAA,CAAA7B,MAAA,EAAAC,CAAA,UAAA6B,UAAA,GAAAD,KAAA,CAAA5B,CAAA,GAAA6B,UAAA,CAAAJ,UAAA,GAAAI,UAAA,CAAAJ,UAAA,WAAAI,UAAA,CAAApE,YAAA,wBAAAoE,UAAA,EAAAA,UAAA,CAAArE,QAAA,SAAAhB,MAAA,CAAAC,cAAA,CAAAkF,MAAA,EAAAH,cAAA,CAAAK,UAAA,CAAAlF,GAAA,GAAAkF,UAAA;AAAA,SAAAC,aAAAC,WAAA,EAAAC,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAN,iBAAA,CAAAK,WAAA,CAAAnF,SAAA,EAAAoF,UAAA,OAAAC,WAAA,EAAAP,iBAAA,CAAAK,WAAA,EAAAE,WAAA,GAAAzF,MAAA,CAAAC,cAAA,CAAAsF,WAAA,iBAAAvE,QAAA,mBAAAuE,WAAA;AAAA,SAAAP,eAAAU,GAAA,QAAAvF,GAAA,GAAAwF,YAAA,CAAAD,GAAA,oBAAAhG,OAAA,CAAAS,GAAA,iBAAAA,GAAA,GAAAyF,MAAA,CAAAzF,GAAA;AAAA,SAAAwF,aAAAE,KAAA,EAAAC,IAAA,QAAApG,OAAA,CAAAmG,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA3C,MAAA,CAAA8C,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAAzF,IAAA,CAAAuF,KAAA,EAAAC,IAAA,oBAAApG,OAAA,CAAAwG,GAAA,uBAAAA,GAAA,YAAAtF,SAAA,4DAAAkF,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAAO,gBAAAC,QAAA,EAAAd,WAAA,UAAAc,QAAA,YAAAd,WAAA,eAAA3E,SAAA;AAOxD;AACA;AACA;AAFA,IAGa0F,eAAe,gBAAAhB,YAAA;AAC1B;AACF;AACA;;AAGE;AACF;AACA;;AAGE,SAAAgB,gBAAYD,QAAoB,EAAE5B,IAAY,EAAE;EAAA2B,eAAA,OAAAE,eAAA;EAC9C,IAAI,CAACD,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAAC5B,IAAI,GAAGA,IAAI;AAClB,CAAC;AAGH;AACA;AACA;AAFA8B,OAAA,CAAAD,eAAA,GAAAA,eAAA;AAAA,IAGaE,YAAY,gBAAAlB,YAAA;AACvB;AACF;AACA;;AAGE;AACF;AACA;;AAGE,SAAAkB,aAAYC,SAAoB,EAAEC,KAAa,EAAE;EAAAN,eAAA,OAAAI,YAAA;EAC/C,IAAI,CAACL,MAAM,CAACQ,SAAS,CAACD,KAAK,CAAC,EAAE;IAC5B,MAAM,IAAIE,KAAK,gDAAAC,MAAA,CAAgDH,KAAK,EAAG;EACzE;EAEA,IAAI,CAACD,SAAS,GAAGA,SAAS;EAC1B,IAAI,CAACC,KAAK,GAAGA,KAAK;AACpB,CAAC;AAAAH,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAKH;AACA;AACA;AAFA,IAGaM,IAAI;EAAA,SAAAA,KAAA;IAAAV,eAAA,OAAAU,IAAA;IAAA/B,eAAA,oBACc,IAAI3B,KAAK,EAAW;EAAA;EAAAkC,YAAA,CAAAwB,IAAA;IAAA3G,GAAA;IAAAY,KAAA;IAEjD;AACF;AACA;IACE,SAAAgG,SAAA,EAA2B;MACzB,OAAO,IAAI,CAACC,SAAS;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA7G,GAAA;IAAAY,KAAA,EAKA,SAAAkG,QAAQC,OAAgB,EAAQ;MAC9B,IAAI,CAACF,SAAS,CAACG,OAAO,CAACD,OAAO,CAAC;IACjC;EAAC;IAAA/G,GAAA;IAAAY,KAAA,EAED,SAAAwD,SAAA,EAAmB;MACjB,IAAI,IAAI,CAACyC,SAAS,CAACzD,MAAM,KAAK,CAAC,EAAE;QAC/B,OAAO,EAAE;MACX;MAEA,IAAM6D,KAAK,GAAG,IAAIhE,KAAK,EAAU;MAEjC,IAAI8D,OAAO,GAAG,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC;MAE/B,IAAIE,OAAO,YAAYZ,eAAe,EAAE;QACtCc,KAAK,CAACC,IAAI,CAACH,OAAO,CAACzC,IAAI,CAAC;MAC1B,CAAC,MAAM,IAAIyC,OAAO,YAAYV,YAAY,EAAE;QAC1CY,KAAK,CAACC,IAAI,KAAAR,MAAA,CAAKK,OAAO,CAACR,KAAK,OAAI;MAClC,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,wBAAAC,MAAA,CAAwBK,OAAO,EAAG;MACnD;MAEA,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwD,SAAS,CAACzD,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC9C0D,OAAO,GAAG,IAAI,CAACF,SAAS,CAACxD,CAAC,CAAC;QAC3B,IAAI0D,OAAO,YAAYZ,eAAe,EAAE;UACtCc,KAAK,CAACC,IAAI,KAAAR,MAAA,CAAKK,OAAO,CAACzC,IAAI,EAAG;QAChC,CAAC,MAAM,IAAIyC,OAAO,YAAYV,YAAY,EAAE;UAC1CY,KAAK,CAACC,IAAI,KAAAR,MAAA,CAAKK,OAAO,CAACR,KAAK,OAAI;QAClC,CAAC,MAAM;UACL,MAAM,IAAIE,KAAK,wBAAAC,MAAA,CAAwBK,OAAO,EAAG;QACnD;MACF;MAEA,OAAOE,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IACvB;EAAC;EAAA,OAAAR,IAAA;AAAA,KAGH;AAEA;AACA;AACA;AAFAP,OAAA,CAAAO,IAAA,GAAAA,IAAA;AAAA,IAGaS,oBAAoB,gBAAAjC,YAAA;AAC/B;AACF;AACA;;AAGE;AACF;AACA;;AAGE,SAAAiC,qBAAYC,OAAe,EAA4B;EAAA,IAA1BC,IAAiB,GAAAtF,SAAA,CAAAoB,MAAA,QAAApB,SAAA,QAAA8D,SAAA,GAAA9D,SAAA,MAAG,IAAI;EAAAiE,eAAA,OAAAmB,oBAAA;EACnD,IAAI,CAACC,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,IAAI,GAAGA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,IAAIX,IAAI,EAAE;AAChC,CAAC;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AANAP,OAAA,CAAAgB,oBAAA,GAAAA,oBAAA;AAOA,SAASG,uBAAuBA,CAC9BF,OAAe,EAC4B;EAC3C,OAAO,IAAI1I,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJ,IAAIJ,oBAAoB,CAACC,OAAO,CAAC,CAClC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,mBAAmBA,CAC1BC,QAAmB,EAC8B;EACjD;EACA;EACA;;EAEA,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAAU,kCAAkC,CAAC;EAC7E;EACA,IAAI,OAAOG,QAAQ,KAAK,SAAS,EAAE;IACjC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAAgCE,QAAQ,EAAE,IAAI,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAC1BD,QAAmB,EAC6B;EAChD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAAS,0CAA0C,CAAC;EACpF;EACA,IAAI,OAAOG,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,yCAAAb,MAAA,CAAAnH,OAAA,CACmBmI,QAAQ,GACxD;EACH;EAEA,IAAI,CAAC1B,MAAM,CAACQ,SAAS,CAACkB,QAAQ,CAAC,EAAE;IAC/B,OAAOH,uBAAuB,yCAAAb,MAAA,CACYgB,QAAQ,EACjD;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA+BE,QAAQ,EAAE,IAAI,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkBA,CACzBF,QAAmB,EAC6B;EAChD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAAS,iCAAiC,CAAC;EAC3E;EACA,IAAI,OAAOG,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA+BE,QAAQ,EAAE,IAAI,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,kBAAkBA,CACzBH,QAAmB,EAC6B;EAChD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAAS,iCAAiC,CAAC;EAC3E;EACA,IAAI,OAAOG,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA+BE,QAAQ,EAAE,IAAI,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,iBAAiBA,CACxBJ,QAAmB,EACiC;EACpD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,gDAAgD,CACjD;EACH;EACA,IAAI,OAAOG,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,+CAAAb,MAAA,CAAAnH,OAAA,CACyBmI,QAAQ,GAC9D;EACH;EAEA,IAAMK,MAAM,GAAGpJ,SAAS,CAACqJ,YAAY,CAACN,QAAQ,CAAC;EAC/C,IAAIK,MAAM,CAACE,KAAK,KAAK,IAAI,EAAE;IACzB,OAAOV,uBAAuB,CAAaQ,MAAM,CAACE,KAAK,CAAC;EAC1D;EACA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzBO,MAAM,CAACG,SAAS,EAAE,EAClB,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,wBAAwBA,CACtCT,QAAmB,EAC6C;EAChE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGC,oCAAoC,CAAC5I,GAAG,CAAC0I,SAAS,CAAC;EACpE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,6CAAAb,MAAA,CACgB0B,SAAS,EACtD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIMa,kBAAkB;EAAA,SAAAA,mBAAA;IAAAtC,eAAA,OAAAsC,kBAAA;IAAA3D,eAAA,qBACkB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,eAE1C,IAAI;IAAAA,eAAA,oBAEkB,IAAI;IAAAA,eAAA,gBAEzB,IAAI;IAAAA,eAAA,mBAEkB,IAAI;EAAA;EAAAO,YAAA,CAAAoD,kBAAA;IAAAvI,GAAA;IAAAY,KAAA;IAEjD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2F,SAAA,GAAApG,0BAAA,CACiBkG,QAAQ;QAAAG,KAAA;MAAA;QAAnC,KAAAD,SAAA,CAAAzF,CAAA,MAAA0F,KAAA,GAAAD,SAAA,CAAAxF,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAD,KAAA,CAAArI,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkF,SAAA,CAAAtG,CAAA,CAAAoB,GAAA;MAAA;QAAAkF,SAAA,CAAArF,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAyI,oBAAoB3B,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC3D,IAAI,GAAGoE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0I,yBAAyB5B,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGa,0BAA0B,CAAC7B,QAAQ,CAAC;MAC1D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuB,SAAS,GAAGd,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8I,wBAAwBhC,QAAmB,EAA+B;MACxE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAsG,UAAA,GAAA/G,0BAAA,CACiBkG,QAAQ;QAAAc,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAApG,CAAA,MAAAqG,MAAA,GAAAD,UAAA,CAAAnG,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAU,MAAA,CAAAhJ,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA6F,UAAA,CAAAjH,CAAA,CAAAoB,GAAA;MAAA;QAAA6F,UAAA,CAAAhG,CAAA;MAAA;MAED,IAAI,CAACkG,QAAQ,GAAGd,KAAK;MACrB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAR,kBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuB,qBAAqBA,CACnCpC,QAAmB,EACyC;EAC5D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIxB,kBAAkB,EAAE;EAEvC,KAAK,IAAMvI,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGC,wBAAwB,CAACxK,GAAG,CAACM,GAAG,CAAC;;IAEtD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACzF,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOiD,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACqL,SAAS,CACpBJ,MAAM,CAACzF,IAAI,EACXyF,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACP,SAAS,EAChBO,MAAM,CAACnJ,KAAK,EACZmJ,MAAM,CAACF,QAAQ,CAChB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,yBAAyBA,CACvC1C,QAAmB,EAC8C;EACjE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGgC,qCAAqC,CAAC3K,GAAG,CAAC0I,SAAS,CAAC;EACrE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,8CAAAb,MAAA,CACiB0B,SAAS,EACvD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4C,qBAAqBA,CACnC5C,QAAmB,EAC0C;EAC7D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGkC,gCAAgC,CAAC7K,GAAG,CAAC0I,SAAS,CAAC;EAChE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,0CAAAb,MAAA,CACa0B,SAAS,EACnD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8C,wBAAwBA,CACtC9C,QAAmB,EAC6C;EAChE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGoC,mCAAmC,CAAC/K,GAAG,CAAC0I,SAAS,CAAC;EACnE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,6CAAAb,MAAA,CACgB0B,SAAS,EACtD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgD,yBAAyBA,CACvChD,QAAmB,EAC6C;EAChE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAAC6L,uBAAuB,CAAClD,QAAQ,CAAC;EACpE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,kCAAAb,MAAA,CACNgB,QAAQ,CAAE,CAC5C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,mBAAmBA,CACjCnD,QAAmB,EACwC;EAC3D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGyC,+BAA+B,CAACpL,GAAG,CAAC0I,SAAS,CAAC;EAC/D,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,wCAAAb,MAAA,CACW0B,SAAS,EACjD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqD,gCAAgCA,CAC9CrD,QAAmB,EACqD;EACxE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAG2C,6CAA6C,CAACtL,GAAG,CAAC0I,SAAS,CAAC;EAC7E,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,qDAAAb,MAAA,CACwB0B,SAAS,EAC9D;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIMuD,kCAAkC;EAAA,SAAAA,mCAAA;IAAAhF,eAAA,OAAAgF,kCAAA;IAAArG,eAAA,qCACyC,IAAI;IAAAA,eAAA,kBAE1D,IAAI;IAAAA,eAAA,mBAEH,IAAI;IAAAA,eAAA,kBAEO,IAAI;IAAAA,eAAA,qBAEb,IAAI;EAAA;EAAAO,YAAA,CAAA8F,kCAAA;IAAAjL,GAAA;IAAAY,KAAA;IAEhC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA8H,UAAA,GAAAvI,0BAAA,CACiBkG,QAAQ;QAAAsC,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAA5H,CAAA,MAAA6H,MAAA,GAAAD,UAAA,CAAA3H,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAkC,MAAA,CAAAxK,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAqH,UAAA,CAAAzI,CAAA,CAAAoB,GAAA;MAAA;QAAAqH,UAAA,CAAAxH,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2K,uBAAuB7D,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuD,OAAO,GAAG9C,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6K,wBAAwB/D,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyD,QAAQ,GAAGhD,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+K,uBAAuBjE,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2D,OAAO,GAAGlD,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiL,0BAA0BnE,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC6D,UAAU,GAAGpD,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA+C,kCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASc,qCAAqCA,CACnDrE,QAAmB,EACyD;EAC5E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIkB,kCAAkC,EAAE;EAEvD,KAAK,IAAMjL,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG+B,yCAAyC,CAACtM,GAAG,CAACM,GAAG,CAAC;;IAEvE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACmN,yBAAyB,CACpClC,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACyB,OAAO,EACdzB,MAAM,CAAC2B,QAAQ,EACf3B,MAAM,CAAC6B,OAAO,EACd7B,MAAM,CAAC+B,UAAU,CAClB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,uBAAuBA,CACrCxE,QAAmB,EAC4C;EAC/D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAG8D,kCAAkC,CAACzM,GAAG,CAAC0I,SAAS,CAAC;EAClE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,4CAAAb,MAAA,CACe0B,SAAS,EACrD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0E,yBAAyBA,CACvC1E,QAAmB,EAC6C;EAChE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACsN,uBAAuB,CAAC3E,QAAQ,CAAC;EACpE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,kCAAAb,MAAA,CACNgB,QAAQ,CAAE,CAC5C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM2B,kBAAkB;EAAA,SAAAA,mBAAA;IAAArG,eAAA,OAAAqG,kBAAA;IAAA1H,eAAA,qBACkB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,eAE1B,IAAI;IAAAA,eAAA,eAEpB,IAAI;IAAAA,eAAA,oBAEkB,IAAI;IAAAA,eAAA,gBAEzB,IAAI;IAAAA,eAAA,kBAEU,IAAI;EAAA;EAAAO,YAAA,CAAAmH,kBAAA;IAAAtM,GAAA;IAAAY,KAAA;IAEzC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAkJ,UAAA,GAAA3J,0BAAA,CACiBkG,QAAQ;QAAA0D,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAAhJ,CAAA,MAAAiJ,MAAA,GAAAD,UAAA,CAAA/I,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAsD,MAAA,CAAA5L,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAyI,UAAA,CAAA7J,CAAA,CAAAoB,GAAA;MAAA;QAAAyI,UAAA,CAAA5I,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6L,oBAAoB/E,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAG0D,yBAAyB,CAAC1E,QAAQ,CAAC;MACzD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyE,IAAI,GAAGhE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+L,oBAAoBjF,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2E,IAAI,GAAGlE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0I,yBAAyB5B,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGa,0BAA0B,CAAC7B,QAAQ,CAAC;MAC1D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuB,SAAS,GAAGd,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiM,uBAAuBnF,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC6E,OAAO,GAAGpE,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAoE,kBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,qBAAqBA,CACnCrF,QAAmB,EACyC;EAC5D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIuC,kBAAkB,EAAE;EAEvC,KAAK,IAAMtM,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG+C,wBAAwB,CAACtN,GAAG,CAACM,GAAG,CAAC;;IAEtD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC6C,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOrF,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,IAAIwC,MAAM,CAACP,SAAS,KAAK,IAAI,EAAE;IAC7B,OAAOjC,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACmO,SAAS,CACpBlD,MAAM,CAAC6C,IAAI,EACX7C,MAAM,CAACP,SAAS,EAChBO,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAAC2C,IAAI,EACX3C,MAAM,CAACnJ,KAAK,EACZmJ,MAAM,CAAC+C,OAAO,CACf,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,iCAAiC;EAAA,SAAAA,kCAAA;IAAAjH,eAAA,OAAAiH,iCAAA;IAAAtI,eAAA,qBACU,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,yBAED,IAAI;IAAAA,eAAA,aAE5C,IAAI;IAAAA,eAAA,qCAEuD,IAAI;IAAAA,eAAA,sBAE1C,IAAI;IAAAA,eAAA,2BAEQ,IAAI;IAAAA,eAAA,oBAEX,IAAI;EAAA;EAAAO,YAAA,CAAA+H,iCAAA;IAAAlN,GAAA;IAAAY,KAAA;IAElD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+J,UAAA,GAAAxK,0BAAA,CACiBkG,QAAQ;QAAAuE,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAA7J,CAAA,MAAA8J,MAAA,GAAAD,UAAA,CAAA5J,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmE,MAAA,CAAAzM,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsJ,UAAA,CAAA1K,CAAA,CAAAoB,GAAA;MAAA;QAAAsJ,UAAA,CAAAzJ,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuK,UAAA,GAAAhL,0BAAA,CACiBkG,QAAQ;QAAA+E,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAArK,CAAA,MAAAsK,MAAA,GAAAD,UAAA,CAAApK,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2E,MAAA,CAAAjN,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8J,UAAA,CAAAlL,CAAA,CAAAoB,GAAA;MAAA;QAAA8J,UAAA,CAAAjK,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA4K,UAAA,GAAArL,0BAAA,CACiBkG,QAAQ;QAAAoF,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAA1K,CAAA,MAAA2K,MAAA,GAAAD,UAAA,CAAAzK,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAgF,MAAA,CAAAtN,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAmK,UAAA,CAAAvL,CAAA,CAAAoB,GAAA;MAAA;QAAAmK,UAAA,CAAAtK,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAyN,8BAA8B3G,QAAmB,EAA+B;MAC9E,IAAMgB,aAAa,GAAGqD,qCAAqC,CAACrE,QAAQ,CAAC;MACrE,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACqG,cAAc,GAAG5F,aAAa,CAACR,SAAS,EAAE;QAC/C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA2N,kBAAkB7G,QAAmB,EAA+B;MAClE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuG,EAAE,GAAG9F,aAAa,CAACR,SAAS,EAAE;QACnC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAoL,UAAA,GAAA7L,0BAAA,CACiBkG,QAAQ;QAAA4F,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAAlL,CAAA,MAAAmL,MAAA,GAAAD,UAAA,CAAAjL,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAwF,MAAA,CAAA9N,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA2K,UAAA,CAAA/L,CAAA,CAAAoB,GAAA;MAAA;QAAA2K,UAAA,CAAA9K,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA+N,2BAA2BjH,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2G,WAAW,GAAGlG,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiO,gCAAgCnH,QAAmB,EAA+B;MAChF,IAAMgB,aAAa,GAAGoG,4BAA4B,CAACpH,QAAQ,CAAC;MAC5D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC8G,gBAAgB,GAAGrG,aAAa,CAACR,SAAS,EAAE;QACjD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAoO,yBAAyBtH,QAAmB,EAA+B;MACzE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA4L,UAAA,GAAArM,0BAAA,CACiBkG,QAAQ;QAAAoG,MAAA;MAAA;QAAnC,KAAAD,UAAA,CAAA1L,CAAA,MAAA2L,MAAA,GAAAD,UAAA,CAAAzL,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAgG,MAAA,CAAAtO,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAmL,UAAA,CAAAvM,CAAA,CAAAoB,GAAA;MAAA;QAAAmL,UAAA,CAAAtL,CAAA;MAAA;MAED,IAAI,CAACwL,SAAS,GAAGpG,KAAK;MACtB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAmE,iCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkC,oCAAoCA,CAClD1H,QAAmB,EACwD;EAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAImD,iCAAiC,EAAE;EAEtD,KAAK,IAAMlN,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGoF,yCAAyC,CAAC3P,GAAG,CAACM,GAAG,CAAC;;IAEvE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAACyE,EAAE,KAAK,IAAI,EAAE;IACtB,OAAOjH,uBAAuB,CAC5B,uCAAuC,CACxC;EACH;EAEA,IAAIwC,MAAM,CAACgF,gBAAgB,KAAK,IAAI,EAAE;IACpC,OAAOxH,uBAAuB,CAC5B,qDAAqD,CACtD;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACwQ,wBAAwB,CACnCvF,MAAM,CAACyE,EAAE,EACTzE,MAAM,CAACgF,gBAAgB,EACvBhF,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACuE,cAAc,EACrBvE,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAAC6E,WAAW,EAClB7E,MAAM,CAACoF,SAAS,CACjB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,yBAAyB;EAAA,SAAAA,0BAAA;IAAAtJ,eAAA,OAAAsJ,yBAAA;IAAA3K,eAAA,oBACU,IAAI;IAAAA,eAAA,wBAEZ,IAAI;IAAAA,eAAA,2BAEwB,IAAI;IAAAA,eAAA,oBAEpC,IAAI;IAAAA,eAAA,2BAEc,IAAI;EAAA;EAAAO,YAAA,CAAAoK,yBAAA;IAAAvP,GAAA;IAAAY,KAAA;IAEjD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4O,yBAAyB9H,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAG+G,qBAAqB,CAAC/H,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyH,SAAS,GAAGhH,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+O,6BAA6BjI,QAAmB,EAA+B;MAC7E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2H,aAAa,GAAGlH,aAAa,CAACR,SAAS,EAAE;QAC9C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiP,gCAAgCnI,QAAmB,EAA+B;MAChF,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA4B;MAEnD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyM,WAAA,GAAAlN,0BAAA,CACiBkG,QAAQ;QAAAiH,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvM,CAAA,MAAAwM,OAAA,GAAAD,WAAA,CAAAtM,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6G,OAAA,CAAAnP,KAAA;UACrB,IAAMuI,WAAW,GAAG6G,2BAA2B,CAAC9G,YAAY,CAAC;UAE7D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgM,WAAA,CAAApN,CAAA,CAAAoB,GAAA;MAAA;QAAAgM,WAAA,CAAAnM,CAAA;MAAA;MAED,IAAI,CAACsM,gBAAgB,GAAGlH,KAAK;MAC7B,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsP,yBAAyBxI,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACkI,SAAS,GAAGzH,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAwP,gCAAgC1I,QAAmB,EAA+B;MAChF,IAAMgB,aAAa,GAAG2H,oBAAoB,CAAC3I,QAAQ,CAAC;MACpD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACqI,gBAAgB,GAAG5H,aAAa,CAACR,SAAS,EAAE;QACjD,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAqH,yBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAST,4BAA4BA,CAC1CpH,QAAmB,EACgD;EACnE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIwF,yBAAyB,EAAE;EAE9C,KAAK,IAAMvP,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGsG,gCAAgC,CAAC7Q,GAAG,CAACM,GAAG,CAAC;;IAE9D;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC2F,SAAS,KAAK,IAAI,EAAE;IAC7B,OAAOnI,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC0R,gBAAgB,CAC3BzG,MAAM,CAAC2F,SAAS,EAChB3F,MAAM,CAAC6F,aAAa,EACpB7F,MAAM,CAACkG,gBAAgB,EACvBlG,MAAM,CAACoG,SAAS,EAChBpG,MAAM,CAACuG,gBAAgB,CACxB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMG,iBAAiB;EAAA,SAAAA,kBAAA;IAAAxK,eAAA,OAAAwK,iBAAA;IAAA7L,eAAA,eACC,IAAI;IAAAA,eAAA,sBAEG,IAAI;EAAA;EAAAO,YAAA,CAAAsL,iBAAA;IAAAzQ,GAAA;IAAAY,KAAA;IAEjC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA8P,oBAAoBhJ,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACX,IAAI,GAAGoB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+P,2BAA2BjJ,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2I,WAAW,GAAGlI,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAuI,iBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASJ,oBAAoBA,CAClC3I,QAAmB,EACwC;EAC3D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI0G,iBAAiB,EAAE;EAEtC,KAAK,IAAMzQ,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG4G,uBAAuB,CAACnR,GAAG,CAACM,GAAG,CAAC;;IAErD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAA0C,IAAI,EAAES,KAAK,CAAC;IACnF;EACF;EAEA,IAAI8B,MAAM,CAACzC,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOC,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACgS,QAAQ,CAAC/G,MAAM,CAACzC,IAAI,EAAEyC,MAAM,CAAC6G,WAAW,CAAC,EACtD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASnB,qBAAqBA,CACnC/H,QAAmB,EACyC;EAC5D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACgS,mBAAmB,CAACrJ,QAAQ,CAAC;EAChE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,8BAAAb,MAAA,CAA8BgB,QAAQ,CAAE,CAChF;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA2CmD,OAAO,EAAE,IAAI,CAAC;AACtF;;AAEA;AACA;AACA;AACA;AAHA,IAIMqG,wBAAwB;EAAA,SAAAA,yBAAA;IAAA/K,eAAA,OAAA+K,wBAAA;IAAApM,eAAA,qBACY,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,eAE1C,IAAI;IAAAA,eAAA,gBAEH,IAAI;IAAAA,eAAA,4BAEoB,IAAI;EAAA;EAAAO,YAAA,CAAA6L,wBAAA;IAAAhR,GAAA;IAAAY,KAAA;IAEnD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA4N,WAAA,GAAArO,0BAAA,CACiBkG,QAAQ;QAAAoI,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA1N,CAAA,MAAA2N,OAAA,GAAAD,WAAA,CAAAzN,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAgI,OAAA,CAAAtQ,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAmN,WAAA,CAAAvO,CAAA,CAAAoB,GAAA;MAAA;QAAAmN,WAAA,CAAAtN,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAyI,oBAAoB3B,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC3D,IAAI,GAAGoE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAuQ,iCAAiCzJ,QAAmB,EAA+B;MACjF,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACmJ,iBAAiB,GAAG1I,aAAa,CAACR,SAAS,EAAE;QAClD,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA8I,wBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAShB,2BAA2BA,CACzCtI,QAAmB,EAC+C;EAClE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIiH,wBAAwB,EAAE;EAE7C,KAAK,IAAMhR,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGoH,gCAAgC,CAAC3R,GAAG,CAACM,GAAG,CAAC;;IAE9D;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACzF,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOiD,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,IAAIwC,MAAM,CAACnJ,KAAK,KAAK,IAAI,EAAE;IACzB,OAAO2G,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACwS,eAAe,CAC1BvH,MAAM,CAACzF,IAAI,EACXyF,MAAM,CAACnJ,KAAK,EACZmJ,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACqH,iBAAiB,CACzB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMG,iBAAiB;EAAA,SAAAA,kBAAA;IAAAtL,eAAA,OAAAsL,iBAAA;IAAA3M,eAAA,qBAC0B,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,yBAED,IAAI;IAAAA,eAAA,aAE5C,IAAI;IAAAA,eAAA,eAEc,IAAI;IAAAA,eAAA,qBAEF,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,2BAEvB,IAAI;EAAA;EAAAO,YAAA,CAAAoM,iBAAA;IAAAvR,GAAA;IAAAY,KAAA;IAEhE;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmO,WAAA,GAAA5O,0BAAA,CACiBkG,QAAQ;QAAA2I,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjO,CAAA,MAAAkO,OAAA,GAAAD,WAAA,CAAAhO,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuI,OAAA,CAAA7Q,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0N,WAAA,CAAA9O,CAAA,CAAAoB,GAAA;MAAA;QAAA0N,WAAA,CAAA7N,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqO,WAAA,GAAA9O,0BAAA,CACiBkG,QAAQ;QAAA6I,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnO,CAAA,MAAAoO,OAAA,GAAAD,WAAA,CAAAlO,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyI,OAAA,CAAA/Q,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4N,WAAA,CAAAhP,CAAA,CAAAoB,GAAA;MAAA;QAAA4N,WAAA,CAAA/N,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuO,WAAA,GAAAhP,0BAAA,CACiBkG,QAAQ;QAAA+I,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArO,CAAA,MAAAsO,OAAA,GAAAD,WAAA,CAAApO,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2I,OAAA,CAAAjR,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8N,WAAA,CAAAlP,CAAA,CAAAoB,GAAA;MAAA;QAAA8N,WAAA,CAAAjO,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAyN,8BAA8B3G,QAAmB,EAA+B;MAC9E,IAAMgB,aAAa,GAAGqD,qCAAqC,CAACrE,QAAQ,CAAC;MACrE,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACqG,cAAc,GAAG5F,aAAa,CAACR,SAAS,EAAE;QAC/C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA2N,kBAAkB7G,QAAmB,EAA+B;MAClE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuG,EAAE,GAAG9F,aAAa,CAACR,SAAS,EAAE;QACnC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6L,oBAAoB/E,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGgC,yBAAyB,CAAChD,QAAQ,CAAC;MACzD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyE,IAAI,GAAGhE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyO,WAAA,GAAAlP,0BAAA,CACiBkG,QAAQ;QAAAiJ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvO,CAAA,MAAAwO,OAAA,GAAAD,WAAA,CAAAtO,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6I,OAAA,CAAAnR,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgO,WAAA,CAAApP,CAAA,CAAAoB,GAAA;MAAA;QAAAgO,WAAA,CAAAnO,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA4O,WAAA,GAAArP,0BAAA,CACiBkG,QAAQ;QAAAoJ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA1O,CAAA,MAAA2O,OAAA,GAAAD,WAAA,CAAAzO,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAgJ,OAAA,CAAAtR,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAmO,WAAA,CAAAvP,CAAA,CAAAoB,GAAA;MAAA;QAAAmO,WAAA,CAAAtO,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+O,WAAA,GAAAxP,0BAAA,CACiBkG,QAAQ;QAAAuJ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7O,CAAA,MAAA8O,OAAA,GAAAD,WAAA,CAAA5O,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmJ,OAAA,CAAAzR,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsO,WAAA,CAAA1P,CAAA,CAAAoB,GAAA;MAAA;QAAAsO,WAAA,CAAAzO,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA0R,gCAAgC5K,QAAmB,EAA+B;MAChF,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA6B;MAEpD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAkP,WAAA,GAAA3P,0BAAA,CACiBkG,QAAQ;QAAA0J,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAhP,CAAA,MAAAiP,OAAA,GAAAD,WAAA,CAAA/O,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAsJ,OAAA,CAAA5R,KAAA;UACrB,IAAMuI,WAAW,GAAGsJ,2BAA2B,CAACvJ,YAAY,CAAC;UAE7D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAyO,WAAA,CAAA7P,CAAA,CAAAoB,GAAA;MAAA;QAAAyO,WAAA,CAAA5O,CAAA;MAAA;MAED,IAAI,CAAC+O,gBAAgB,GAAG3J,KAAK;MAC7B,OAAO,IAAI;IACb;EAAC;EAAA,OAAAwI,iBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoB,oBAAoBA,CAClCjL,QAAmB,EACwC;EAC3D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIwH,iBAAiB,EAAE;EAEtC,KAAK,IAAMvR,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG2I,uBAAuB,CAAClT,GAAG,CAACM,GAAG,CAAC;;IAErD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAA0C,IAAI,EAAES,KAAK,CAAC;IACnF;EACF;EAEA,IAAI8B,MAAM,CAACyE,EAAE,KAAK,IAAI,EAAE;IACtB,OAAOjH,uBAAuB,CAC5B,uCAAuC,CACxC;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC+T,QAAQ,CACnB9I,MAAM,CAACyE,EAAE,EACTzE,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACuE,cAAc,EACrBvE,MAAM,CAAC2C,IAAI,EACX3C,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAAC2I,gBAAgB,CACxB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASD,2BAA2BA,CACzC/K,QAAmB,EACgD;EACnE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGyK,uCAAuC,CAACpT,GAAG,CAAC0I,SAAS,CAAC;EACvE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,gDAAAb,MAAA,CACmB0B,SAAS,EACzD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqL,+BAA+BA,CAC7CrL,QAAmB,EACoD;EACvE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAG2K,2CAA2C,CAACtT,GAAG,CAAC0I,SAAS,CAAC;EAC3E,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,oDAAAb,MAAA,CACuB0B,SAAS,EAC7D;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIMuL,4BAA4B;EAAA,SAAAA,6BAAA;IAAAhN,eAAA,OAAAgN,4BAAA;IAAArO,eAAA,qBACe,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAEhD,IAAI;IAAAA,eAAA,iBAEH,IAAI;EAAA;EAAAO,YAAA,CAAA8N,4BAAA;IAAAjT,GAAA;IAAAY,KAAA;IAExC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6P,WAAA,GAAAtQ,0BAAA,CACiBkG,QAAQ;QAAAqK,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3P,CAAA,MAAA4P,OAAA,GAAAD,WAAA,CAAA1P,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiK,OAAA,CAAAvS,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoP,WAAA,CAAAxQ,CAAA,CAAAoB,GAAA;MAAA;QAAAoP,WAAA,CAAAvP,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+P,WAAA,GAAAxQ,0BAAA,CACiBkG,QAAQ;QAAAuK,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7P,CAAA,MAAA8P,OAAA,GAAAD,WAAA,CAAA5P,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmK,OAAA,CAAAzS,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsP,WAAA,CAAA1Q,CAAA,CAAAoB,GAAA;MAAA;QAAAsP,WAAA,CAAAzP,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiQ,WAAA,GAAA1Q,0BAAA,CACiBkG,QAAQ;QAAAyK,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/P,CAAA,MAAAgQ,OAAA,GAAAD,WAAA,CAAA9P,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqK,OAAA,CAAA3S,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwP,WAAA,CAAA5Q,CAAA,CAAAoB,GAAA;MAAA;QAAAwP,WAAA,CAAA3P,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmQ,WAAA,GAAA5Q,0BAAA,CACiBkG,QAAQ;QAAA2K,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjQ,CAAA,MAAAkQ,OAAA,GAAAD,WAAA,CAAAhQ,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuK,OAAA,CAAA7S,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0P,WAAA,CAAA9Q,CAAA,CAAAoB,GAAA;MAAA;QAAA0P,WAAA,CAAA7P,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqQ,WAAA,GAAA9Q,0BAAA,CACiBkG,QAAQ;QAAA6K,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnQ,CAAA,MAAAoQ,OAAA,GAAAD,WAAA,CAAAlQ,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyK,OAAA,CAAA/S,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4P,WAAA,CAAAhR,CAAA,CAAAoB,GAAA;MAAA;QAAA4P,WAAA,CAAA/P,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuQ,WAAA,GAAAhR,0BAAA,CACiBkG,QAAQ;QAAA+K,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArQ,CAAA,MAAAsQ,OAAA,GAAAD,WAAA,CAAApQ,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2K,OAAA,CAAAjT,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8P,WAAA,CAAAlR,CAAA,CAAAoB,GAAA;MAAA;QAAA8P,WAAA,CAAAjQ,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAkT,qBAAqBpM,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC8L,KAAK,GAAGrL,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAoT,sBAAsBtM,QAAmB,EAA+B;MACtE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACgM,MAAM,GAAGvL,aAAa,CAACR,SAAS,EAAE;QACvC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA+K,4BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,8CAA8CA,CACrDxM,QAAmB,EACmD;EACtE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIkJ,4BAA4B,EAAE;EAEjD,KAAK,IAAMjT,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGkK,mCAAmC,CAACzU,GAAG,CAACM,GAAG,CAAC;;IAEjE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACgK,KAAK,KAAK,IAAI,EAAE;IACzB,OAAOxM,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,IAAIwC,MAAM,CAACkK,MAAM,KAAK,IAAI,EAAE;IAC1B,OAAO1M,uBAAuB,CAC5B,2CAA2C,CAC5C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACsV,mBAAmB,CAC9BrK,MAAM,CAACgK,KAAK,EACZhK,MAAM,CAACkK,MAAM,EACblK,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,CAClC,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+I,+BAA+BA,CAC7C3M,QAAmB,EACmD;EACtE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACuV,6BAA6B,CAAC5M,QAAQ,CAAC;EAC1E,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,wCAAAb,MAAA,CACAgB,QAAQ,CAAE,CAClD;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM4J,4BAA4B;EAAA,SAAAA,6BAAA;IAAAtO,eAAA,OAAAsO,4BAAA;IAAA3P,eAAA,qBACe,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,wBAEnD,IAAI;IAAAA,eAAA,gCAEe,IAAI;IAAAA,eAAA,+BAEK,IAAI;IAAAA,eAAA,+BAET,IAAI;IAAAA,eAAA,gBAEV,IAAI;EAAA;EAAAO,YAAA,CAAAoP,4BAAA;IAAAvU,GAAA;IAAAY,KAAA;IAErD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmR,WAAA,GAAA5R,0BAAA,CACiBkG,QAAQ;QAAA2L,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjR,CAAA,MAAAkR,OAAA,GAAAD,WAAA,CAAAhR,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuL,OAAA,CAAA7T,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0Q,WAAA,CAAA9R,CAAA,CAAAoB,GAAA;MAAA;QAAA0Q,WAAA,CAAA7Q,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqR,WAAA,GAAA9R,0BAAA,CACiBkG,QAAQ;QAAA6L,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnR,CAAA,MAAAoR,OAAA,GAAAD,WAAA,CAAAlR,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyL,OAAA,CAAA/T,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4Q,WAAA,CAAAhS,CAAA,CAAAoB,GAAA;MAAA;QAAA4Q,WAAA,CAAA/Q,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuR,WAAA,GAAAhS,0BAAA,CACiBkG,QAAQ;QAAA+L,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArR,CAAA,MAAAsR,OAAA,GAAAD,WAAA,CAAApR,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2L,OAAA,CAAAjU,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8Q,WAAA,CAAAlS,CAAA,CAAAoB,GAAA;MAAA;QAAA8Q,WAAA,CAAAjR,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyR,WAAA,GAAAlS,0BAAA,CACiBkG,QAAQ;QAAAiM,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvR,CAAA,MAAAwR,OAAA,GAAAD,WAAA,CAAAtR,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6L,OAAA,CAAAnU,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgR,WAAA,CAAApS,CAAA,CAAAoB,GAAA;MAAA;QAAAgR,WAAA,CAAAnR,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2R,WAAA,GAAApS,0BAAA,CACiBkG,QAAQ;QAAAmM,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzR,CAAA,MAAA0R,OAAA,GAAAD,WAAA,CAAAxR,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+L,OAAA,CAAArU,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkR,WAAA,CAAAtS,CAAA,CAAAoB,GAAA;MAAA;QAAAkR,WAAA,CAAArR,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6R,WAAA,GAAAtS,0BAAA,CACiBkG,QAAQ;QAAAqM,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3R,CAAA,MAAA4R,OAAA,GAAAD,WAAA,CAAA1R,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiM,OAAA,CAAAvU,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoR,WAAA,CAAAxS,CAAA,CAAAoB,GAAA;MAAA;QAAAoR,WAAA,CAAAvR,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAwU,6BAA6B1N,QAAmB,EAA+B;MAC7E,IAAMgB,aAAa,GAAGjB,mBAAmB,CAACC,QAAQ,CAAC;MACnD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACoN,aAAa,GAAG3M,aAAa,CAACR,SAAS,EAAE;QAC9C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0U,qCACE5N,QAAmB,EACU;MAC7B,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACsN,qBAAqB,GAAG7M,aAAa,CAACR,SAAS,EAAE;QACtD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA4U,oCACE9N,QAAmB,EACU;MAC7B,IAAMgB,aAAa,GAAG2L,+BAA+B,CAAC3M,QAAQ,CAAC;MAC/D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwN,oBAAoB,GAAG/M,aAAa,CAACR,SAAS,EAAE;QACrD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8U,oCACEhO,QAAmB,EACU;MAC7B,IAAMgB,aAAa,GAAGa,0BAA0B,CAAC7B,QAAQ,CAAC;MAC1D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0N,oBAAoB,GAAGjN,aAAa,CAACR,SAAS,EAAE;QACrD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA6B;MAEpD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuS,WAAA,GAAAhT,0BAAA,CACiBkG,QAAQ;QAAA+M,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArS,CAAA,MAAAsS,OAAA,GAAAD,WAAA,CAAApS,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2M,OAAA,CAAAjV,KAAA;UACrB,IAAMuI,WAAW,GAAGsJ,2BAA2B,CAACvJ,YAAY,CAAC;UAE7D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8R,WAAA,CAAAlT,CAAA,CAAAoB,GAAA;MAAA;QAAA8R,WAAA,CAAAjS,CAAA;MAAA;MAED,IAAI,CAAC/C,KAAK,GAAGmI,KAAK;MAClB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAwL,4BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuB,+BAA+BA,CAC7CpO,QAAmB,EACmD;EACtE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIwK,4BAA4B,EAAE;EAEjD,KAAK,IAAMvU,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG8L,oCAAoC,CAACrW,GAAG,CAACM,GAAG,CAAC;;IAElE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC0L,oBAAoB,KAAK,IAAI,EAAE;IACxC,OAAOlO,uBAAuB,CAC5B,yDAAyD,CAC1D;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACkX,mBAAmB,CAC9BjM,MAAM,CAAC0L,oBAAoB,EAC3B1L,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACsL,aAAa,EACpBtL,MAAM,CAACwL,qBAAqB,EAC5BxL,MAAM,CAAC4L,oBAAoB,EAC3B5L,MAAM,CAACnJ,KAAK,CACb,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMqV,kCAAkC;EAAA,SAAAA,mCAAA;IAAAhQ,eAAA,OAAAgQ,kCAAA;IAAArR,eAAA,qBACS,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAElC,IAAI;EAAA;EAAAO,YAAA,CAAA8Q,kCAAA;IAAAjW,GAAA;IAAAY,KAAA;IAErD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6S,WAAA,GAAAtT,0BAAA,CACiBkG,QAAQ;QAAAqN,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3S,CAAA,MAAA4S,OAAA,GAAAD,WAAA,CAAA1S,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiN,OAAA,CAAAvV,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoS,WAAA,CAAAxT,CAAA,CAAAoB,GAAA;MAAA;QAAAoS,WAAA,CAAAvS,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+S,WAAA,GAAAxT,0BAAA,CACiBkG,QAAQ;QAAAuN,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7S,CAAA,MAAA8S,OAAA,GAAAD,WAAA,CAAA5S,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmN,OAAA,CAAAzV,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsS,WAAA,CAAA1T,CAAA,CAAAoB,GAAA;MAAA;QAAAsS,WAAA,CAAAzS,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiT,WAAA,GAAA1T,0BAAA,CACiBkG,QAAQ;QAAAyN,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/S,CAAA,MAAAgT,OAAA,GAAAD,WAAA,CAAA9S,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqN,OAAA,CAAA3V,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwS,WAAA,CAAA5T,CAAA,CAAAoB,GAAA;MAAA;QAAAwS,WAAA,CAAA3S,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmT,WAAA,GAAA5T,0BAAA,CACiBkG,QAAQ;QAAA2N,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjT,CAAA,MAAAkT,OAAA,GAAAD,WAAA,CAAAhT,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuN,OAAA,CAAA7V,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0S,WAAA,CAAA9T,CAAA,CAAAoB,GAAA;MAAA;QAAA0S,WAAA,CAAA7S,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqT,WAAA,GAAA9T,0BAAA,CACiBkG,QAAQ;QAAA6N,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnT,CAAA,MAAAoT,OAAA,GAAAD,WAAA,CAAAlT,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyN,OAAA,CAAA/V,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4S,WAAA,CAAAhU,CAAA,CAAAoB,GAAA;MAAA;QAAA4S,WAAA,CAAA/S,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuT,WAAA,GAAAhU,0BAAA,CACiBkG,QAAQ;QAAA+N,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArT,CAAA,MAAAsT,OAAA,GAAAD,WAAA,CAAApT,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2N,OAAA,CAAAjW,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8S,WAAA,CAAAlU,CAAA,CAAAoB,GAAA;MAAA;QAAA8S,WAAA,CAAAjT,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA6B;MAEpD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyT,WAAA,GAAAlU,0BAAA,CACiBkG,QAAQ;QAAAiO,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvT,CAAA,MAAAwT,OAAA,GAAAD,WAAA,CAAAtT,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6N,OAAA,CAAAnW,KAAA;UACrB,IAAMuI,WAAW,GAAGsJ,2BAA2B,CAACvJ,YAAY,CAAC;UAE7D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgT,WAAA,CAAApU,CAAA,CAAAoB,GAAA;MAAA;QAAAgT,WAAA,CAAAnT,CAAA;MAAA;MAED,IAAI,CAAC/C,KAAK,GAAGmI,KAAK;MAClB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAkN,kCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASe,qCAAqCA,CACnDtP,QAAmB,EACyD;EAC5E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIkM,kCAAkC,EAAE;EAEvD,KAAK,IAAMjW,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGgN,0CAA0C,CAACvX,GAAG,CAACM,GAAG,CAAC;;IAExE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACoY,yBAAyB,CACpCnN,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACnJ,KAAK,CACb,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuW,uBAAuBA,CACrCzP,QAAmB,EAC4C;EAC/D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAG+O,mCAAmC,CAAC1X,GAAG,CAAC0I,SAAS,CAAC;EACnE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,4CAAAb,MAAA,CACe0B,SAAS,EACrD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIM2P,iBAAiB;EAAA,SAAAA,kBAAA;IAAApR,eAAA,OAAAoR,iBAAA;IAAAzS,eAAA,qBAC0B,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,oBAEvC,IAAI;IAAAA,eAAA,gBAEzB,IAAI;IAAAA,eAAA,kBAEU,IAAI;EAAA;EAAAO,YAAA,CAAAkS,iBAAA;IAAArX,GAAA;IAAAY,KAAA;IAEzC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiU,WAAA,GAAA1U,0BAAA,CACiBkG,QAAQ;QAAAyO,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/T,CAAA,MAAAgU,OAAA,GAAAD,WAAA,CAAA9T,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqO,OAAA,CAAA3W,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwT,WAAA,CAAA5U,CAAA,CAAAoB,GAAA;MAAA;QAAAwT,WAAA,CAAA3T,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmU,WAAA,GAAA5U,0BAAA,CACiBkG,QAAQ;QAAA2O,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjU,CAAA,MAAAkU,OAAA,GAAAD,WAAA,CAAAhU,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuO,OAAA,CAAA7W,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0T,WAAA,CAAA9U,CAAA,CAAAoB,GAAA;MAAA;QAAA0T,WAAA,CAAA7T,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqU,WAAA,GAAA9U,0BAAA,CACiBkG,QAAQ;QAAA6O,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnU,CAAA,MAAAoU,OAAA,GAAAD,WAAA,CAAAlU,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyO,OAAA,CAAA/W,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4T,WAAA,CAAAhV,CAAA,CAAAoB,GAAA;MAAA;QAAA4T,WAAA,CAAA/T,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuU,WAAA,GAAAhV,0BAAA,CACiBkG,QAAQ;QAAA+O,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArU,CAAA,MAAAsU,OAAA,GAAAD,WAAA,CAAApU,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2O,OAAA,CAAAjX,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8T,WAAA,CAAAlV,CAAA,CAAAoB,GAAA;MAAA;QAAA8T,WAAA,CAAAjU,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyU,WAAA,GAAAlV,0BAAA,CACiBkG,QAAQ;QAAAiP,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvU,CAAA,MAAAwU,OAAA,GAAAD,WAAA,CAAAtU,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6O,OAAA,CAAAnX,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgU,WAAA,CAAApV,CAAA,CAAAoB,GAAA;MAAA;QAAAgU,WAAA,CAAAnU,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2U,WAAA,GAAApV,0BAAA,CACiBkG,QAAQ;QAAAmP,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzU,CAAA,MAAA0U,OAAA,GAAAD,WAAA,CAAAxU,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+O,OAAA,CAAArX,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkU,WAAA,CAAAtV,CAAA,CAAAoB,GAAA;MAAA;QAAAkU,WAAA,CAAArU,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA0I,yBAAyB5B,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGa,0BAA0B,CAAC7B,QAAQ,CAAC;MAC1D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuB,SAAS,GAAGd,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiM,uBAAuBnF,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC6E,OAAO,GAAGpE,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAmP,iBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,oBAAoBA,CAClCxQ,QAAmB,EACwC;EAC3D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIsN,iBAAiB,EAAE;EAEtC,KAAK,IAAMrX,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGkO,uBAAuB,CAACzY,GAAG,CAACM,GAAG,CAAC;;IAErD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAA0C,IAAI,EAAES,KAAK,CAAC;IACnF;EACF;EAEA,IAAI8B,MAAM,CAACP,SAAS,KAAK,IAAI,EAAE;IAC7B,OAAOjC,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACsZ,QAAQ,CACnBrO,MAAM,CAACP,SAAS,EAChBO,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACnJ,KAAK,EACZmJ,MAAM,CAAC+C,OAAO,CACf,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMuL,8BAA8B;EAAA,SAAAA,+BAAA;IAAApS,eAAA,OAAAoS,8BAAA;IAAAzT,eAAA,qBACa,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAEhC,IAAI;IAAAA,eAAA,kBAElB,IAAI;EAAA;EAAAO,YAAA,CAAAkT,8BAAA;IAAArY,GAAA;IAAAY,KAAA;IAEzC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiV,WAAA,GAAA1V,0BAAA,CACiBkG,QAAQ;QAAAyP,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/U,CAAA,MAAAgV,OAAA,GAAAD,WAAA,CAAA9U,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqP,OAAA,CAAA3X,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwU,WAAA,CAAA5V,CAAA,CAAAoB,GAAA;MAAA;QAAAwU,WAAA,CAAA3U,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmV,WAAA,GAAA5V,0BAAA,CACiBkG,QAAQ;QAAA2P,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjV,CAAA,MAAAkV,OAAA,GAAAD,WAAA,CAAAhV,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuP,OAAA,CAAA7X,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0U,WAAA,CAAA9V,CAAA,CAAAoB,GAAA;MAAA;QAAA0U,WAAA,CAAA7U,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqV,WAAA,GAAA9V,0BAAA,CACiBkG,QAAQ;QAAA6P,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnV,CAAA,MAAAoV,OAAA,GAAAD,WAAA,CAAAlV,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyP,OAAA,CAAA/X,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4U,WAAA,CAAAhW,CAAA,CAAAoB,GAAA;MAAA;QAAA4U,WAAA,CAAA/U,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuV,WAAA,GAAAhW,0BAAA,CACiBkG,QAAQ;QAAA+P,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArV,CAAA,MAAAsV,OAAA,GAAAD,WAAA,CAAApV,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2P,OAAA,CAAAjY,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8U,WAAA,CAAAlW,CAAA,CAAAoB,GAAA;MAAA;QAAA8U,WAAA,CAAAjV,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyV,WAAA,GAAAlW,0BAAA,CACiBkG,QAAQ;QAAAiQ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvV,CAAA,MAAAwV,OAAA,GAAAD,WAAA,CAAAtV,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6P,OAAA,CAAAnY,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgV,WAAA,CAAApW,CAAA,CAAAoB,GAAA;MAAA;QAAAgV,WAAA,CAAAnV,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2V,WAAA,GAAApW,0BAAA,CACiBkG,QAAQ;QAAAmQ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzV,CAAA,MAAA0V,OAAA,GAAAD,WAAA,CAAAxV,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+P,OAAA,CAAArY,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkV,WAAA,CAAAtW,CAAA,CAAAoB,GAAA;MAAA;QAAAkV,WAAA,CAAArV,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6V,WAAA,GAAAtW,0BAAA,CACiBkG,QAAQ;QAAAqQ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3V,CAAA,MAAA4V,OAAA,GAAAD,WAAA,CAAA1V,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiQ,OAAA,CAAAvY,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoV,WAAA,CAAAxW,CAAA,CAAAoB,GAAA;MAAA;QAAAoV,WAAA,CAAAvV,CAAA;MAAA;MAED,IAAI,CAAC/C,KAAK,GAAGmI,KAAK;MAClB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAiM,uBAAuBnF,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC6E,OAAO,GAAGpE,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAmQ,8BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASe,iCAAiCA,CAC/C1R,QAAmB,EACqD;EACxE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIsO,8BAA8B,EAAE;EAEnD,KAAK,IAAMrY,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGoP,sCAAsC,CAAC3Z,GAAG,CAACM,GAAG,CAAC;;IAEpE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACwa,qBAAqB,CAChCvP,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACnJ,KAAK,EACZmJ,MAAM,CAAC+C,OAAO,CACf,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMyM,cAAc;EAAA,SAAAA,eAAA;IAAAtT,eAAA,OAAAsT,cAAA;IAAA3U,eAAA,qBAC6B,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,oBAEvC,IAAI;IAAAA,eAAA,cAE3B,IAAI;IAAAA,eAAA,cAEJ,IAAI;EAAA;EAAAO,YAAA,CAAAoU,cAAA;IAAAvZ,GAAA;IAAAY,KAAA;IAEzB;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmW,WAAA,GAAA5W,0BAAA,CACiBkG,QAAQ;QAAA2Q,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjW,CAAA,MAAAkW,OAAA,GAAAD,WAAA,CAAAhW,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuQ,OAAA,CAAA7Y,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0V,WAAA,CAAA9W,CAAA,CAAAoB,GAAA;MAAA;QAAA0V,WAAA,CAAA7V,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqW,WAAA,GAAA9W,0BAAA,CACiBkG,QAAQ;QAAA6Q,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnW,CAAA,MAAAoW,OAAA,GAAAD,WAAA,CAAAlW,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyQ,OAAA,CAAA/Y,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4V,WAAA,CAAAhX,CAAA,CAAAoB,GAAA;MAAA;QAAA4V,WAAA,CAAA/V,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuW,WAAA,GAAAhX,0BAAA,CACiBkG,QAAQ;QAAA+Q,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArW,CAAA,MAAAsW,OAAA,GAAAD,WAAA,CAAApW,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2Q,OAAA,CAAAjZ,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8V,WAAA,CAAAlX,CAAA,CAAAoB,GAAA;MAAA;QAAA8V,WAAA,CAAAjW,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyW,WAAA,GAAAlX,0BAAA,CACiBkG,QAAQ;QAAAiR,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvW,CAAA,MAAAwW,OAAA,GAAAD,WAAA,CAAAtW,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6Q,OAAA,CAAAnZ,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgW,WAAA,CAAApX,CAAA,CAAAoB,GAAA;MAAA;QAAAgW,WAAA,CAAAnW,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2W,WAAA,GAAApX,0BAAA,CACiBkG,QAAQ;QAAAmR,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzW,CAAA,MAAA0W,OAAA,GAAAD,WAAA,CAAAxW,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+Q,OAAA,CAAArZ,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkW,WAAA,CAAAtX,CAAA,CAAAoB,GAAA;MAAA;QAAAkW,WAAA,CAAArW,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6W,WAAA,GAAAtX,0BAAA,CACiBkG,QAAQ;QAAAqR,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3W,CAAA,MAAA4W,OAAA,GAAAD,WAAA,CAAA1W,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiR,OAAA,CAAAvZ,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoW,WAAA,CAAAxX,CAAA,CAAAoB,GAAA;MAAA;QAAAoW,WAAA,CAAAvW,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA0I,yBAAyB5B,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGa,0BAA0B,CAAC7B,QAAQ,CAAC;MAC1D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuB,SAAS,GAAGd,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAwZ,mBAAmB1S,QAAmB,EAA+B;MACnE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACoS,GAAG,GAAG3R,aAAa,CAACR,SAAS,EAAE;QACpC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0Z,mBAAmB5S,QAAmB,EAA+B;MACnE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACsS,GAAG,GAAG7R,aAAa,CAACR,SAAS,EAAE;QACpC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAqR,cAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiB,iBAAiBA,CAC/B9S,QAAmB,EACqC;EACxD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIwP,cAAc,EAAE;EAEnC,KAAK,IAAMvZ,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGwQ,oBAAoB,CAAC/a,GAAG,CAACM,GAAG,CAAC;;IAElD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAAuC,IAAI,EAAES,KAAK,CAAC;IAChF;EACF;EAEA,IAAI8B,MAAM,CAACP,SAAS,KAAK,IAAI,EAAE;IAC7B,OAAOjC,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC4b,KAAK,CAChB3Q,MAAM,CAACP,SAAS,EAChBO,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACsQ,GAAG,EACVtQ,MAAM,CAACwQ,GAAG,CACX,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,yBAAyB;EAAA,SAAAA,0BAAA;IAAA1U,eAAA,OAAA0U,yBAAA;IAAA/V,eAAA,qBACkB,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAEhD,IAAI;EAAA;EAAAO,YAAA,CAAAwV,yBAAA;IAAA3a,GAAA;IAAAY,KAAA;IAEvC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuX,WAAA,GAAAhY,0BAAA,CACiBkG,QAAQ;QAAA+R,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArX,CAAA,MAAAsX,OAAA,GAAAD,WAAA,CAAApX,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2R,OAAA,CAAAja,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8W,WAAA,CAAAlY,CAAA,CAAAoB,GAAA;MAAA;QAAA8W,WAAA,CAAAjX,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyX,WAAA,GAAAlY,0BAAA,CACiBkG,QAAQ;QAAAiS,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvX,CAAA,MAAAwX,OAAA,GAAAD,WAAA,CAAAtX,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6R,OAAA,CAAAna,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgX,WAAA,CAAApY,CAAA,CAAAoB,GAAA;MAAA;QAAAgX,WAAA,CAAAnX,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2X,WAAA,GAAApY,0BAAA,CACiBkG,QAAQ;QAAAmS,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzX,CAAA,MAAA0X,OAAA,GAAAD,WAAA,CAAAxX,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+R,OAAA,CAAAra,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkX,WAAA,CAAAtY,CAAA,CAAAoB,GAAA;MAAA;QAAAkX,WAAA,CAAArX,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6X,WAAA,GAAAtY,0BAAA,CACiBkG,QAAQ;QAAAqS,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3X,CAAA,MAAA4X,OAAA,GAAAD,WAAA,CAAA1X,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiS,OAAA,CAAAva,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoX,WAAA,CAAAxY,CAAA,CAAAoB,GAAA;MAAA;QAAAoX,WAAA,CAAAvX,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+X,WAAA,GAAAxY,0BAAA,CACiBkG,QAAQ;QAAAuS,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7X,CAAA,MAAA8X,OAAA,GAAAD,WAAA,CAAA5X,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmS,OAAA,CAAAza,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsX,WAAA,CAAA1Y,CAAA,CAAAoB,GAAA;MAAA;QAAAsX,WAAA,CAAAzX,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiY,WAAA,GAAA1Y,0BAAA,CACiBkG,QAAQ;QAAAyS,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/X,CAAA,MAAAgY,OAAA,GAAAD,WAAA,CAAA9X,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqS,OAAA,CAAA3a,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwX,WAAA,CAAA5Y,CAAA,CAAAoB,GAAA;MAAA;QAAAwX,WAAA,CAAA3X,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAyS,yBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,4BAA4BA,CAC1C9T,QAAmB,EACgD;EACnE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI4Q,yBAAyB,EAAE;EAE9C,KAAK,IAAM3a,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGwR,gCAAgC,CAAC/b,GAAG,CAACM,GAAG,CAAC;;IAE9D;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC4c,gBAAgB,CAC3B3R,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACnJ,KAAK,CACb,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM+a,aAAa;EAAA,SAAAA,cAAA;IAAA1V,eAAA,OAAA0V,aAAA;IAAA/W,eAAA,qBAC8B,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAExD,IAAI;IAAAA,eAAA,sBAEF,IAAI;EAAA;EAAAO,YAAA,CAAAwW,aAAA;IAAA3b,GAAA;IAAAY,KAAA;IAEjC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuY,WAAA,GAAAhZ,0BAAA,CACiBkG,QAAQ;QAAA+S,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArY,CAAA,MAAAsY,OAAA,GAAAD,WAAA,CAAApY,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2S,OAAA,CAAAjb,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8X,WAAA,CAAAlZ,CAAA,CAAAoB,GAAA;MAAA;QAAA8X,WAAA,CAAAjY,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyY,WAAA,GAAAlZ,0BAAA,CACiBkG,QAAQ;QAAAiT,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvY,CAAA,MAAAwY,OAAA,GAAAD,WAAA,CAAAtY,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6S,OAAA,CAAAnb,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgY,WAAA,CAAApZ,CAAA,CAAAoB,GAAA;MAAA;QAAAgY,WAAA,CAAAnY,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2Y,WAAA,GAAApZ,0BAAA,CACiBkG,QAAQ;QAAAmT,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzY,CAAA,MAAA0Y,OAAA,GAAAD,WAAA,CAAAxY,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+S,OAAA,CAAArb,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkY,WAAA,CAAAtZ,CAAA,CAAAoB,GAAA;MAAA;QAAAkY,WAAA,CAAArY,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6Y,WAAA,GAAAtZ,0BAAA,CACiBkG,QAAQ;QAAAqT,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3Y,CAAA,MAAA4Y,OAAA,GAAAD,WAAA,CAAA1Y,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiT,OAAA,CAAAvb,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoY,WAAA,CAAAxZ,CAAA,CAAAoB,GAAA;MAAA;QAAAoY,WAAA,CAAAvY,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+Y,WAAA,GAAAxZ,0BAAA,CACiBkG,QAAQ;QAAAuT,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7Y,CAAA,MAAA8Y,OAAA,GAAAD,WAAA,CAAA5Y,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmT,OAAA,CAAAzb,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsY,WAAA,CAAA1Z,CAAA,CAAAoB,GAAA;MAAA;QAAAsY,WAAA,CAAAzY,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiZ,WAAA,GAAA1Z,0BAAA,CACiBkG,QAAQ;QAAAyT,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/Y,CAAA,MAAAgZ,OAAA,GAAAD,WAAA,CAAA9Y,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqT,OAAA,CAAA3b,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwY,WAAA,CAAA5Z,CAAA,CAAAoB,GAAA;MAAA;QAAAwY,WAAA,CAAA3Y,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGZ,iBAAiB,CAACJ,QAAQ,CAAC;MACjD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+P,2BAA2BjJ,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2I,WAAW,GAAGlI,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAyT,aAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,gBAAgBA,CAC9B9U,QAAmB,EACoC;EACvD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI4R,aAAa,EAAE;EAElC,KAAK,IAAM3b,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGwS,mBAAmB,CAAC/c,GAAG,CAACM,GAAG,CAAC;;IAEjD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAAsC,IAAI,EAAES,KAAK,CAAC;IAC/E;EACF;EAEA,IAAI8B,MAAM,CAAC6G,WAAW,KAAK,IAAI,EAAE;IAC/B,OAAOrJ,uBAAuB,CAC5B,gDAAgD,CACjD;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC4d,IAAI,CACf3S,MAAM,CAAC6G,WAAW,EAClB7G,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACnJ,KAAK,CACb,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM+b,aAAa;EAAA,SAAAA,cAAA;IAAA1W,eAAA,OAAA0W,aAAA;IAAA/X,eAAA,qBAC8B,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAE5D,IAAI;IAAAA,eAAA,sBAEE,IAAI;EAAA;EAAAO,YAAA,CAAAwX,aAAA;IAAA3c,GAAA;IAAAY,KAAA;IAEjC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuZ,WAAA,GAAAha,0BAAA,CACiBkG,QAAQ;QAAA+T,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArZ,CAAA,MAAAsZ,OAAA,GAAAD,WAAA,CAAApZ,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2T,OAAA,CAAAjc,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8Y,WAAA,CAAAla,CAAA,CAAAoB,GAAA;MAAA;QAAA8Y,WAAA,CAAAjZ,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyZ,WAAA,GAAAla,0BAAA,CACiBkG,QAAQ;QAAAiU,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvZ,CAAA,MAAAwZ,OAAA,GAAAD,WAAA,CAAAtZ,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6T,OAAA,CAAAnc,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgZ,WAAA,CAAApa,CAAA,CAAAoB,GAAA;MAAA;QAAAgZ,WAAA,CAAAnZ,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2Z,WAAA,GAAApa,0BAAA,CACiBkG,QAAQ;QAAAmU,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzZ,CAAA,MAAA0Z,OAAA,GAAAD,WAAA,CAAAxZ,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+T,OAAA,CAAArc,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkZ,WAAA,CAAAta,CAAA,CAAAoB,GAAA;MAAA;QAAAkZ,WAAA,CAAArZ,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6Z,WAAA,GAAAta,0BAAA,CACiBkG,QAAQ;QAAAqU,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3Z,CAAA,MAAA4Z,OAAA,GAAAD,WAAA,CAAA1Z,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiU,OAAA,CAAAvc,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoZ,WAAA,CAAAxa,CAAA,CAAAoB,GAAA;MAAA;QAAAoZ,WAAA,CAAAvZ,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+Z,WAAA,GAAAxa,0BAAA,CACiBkG,QAAQ;QAAAuU,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7Z,CAAA,MAAA8Z,OAAA,GAAAD,WAAA,CAAA5Z,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmU,OAAA,CAAAzc,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsZ,WAAA,CAAA1a,CAAA,CAAAoB,GAAA;MAAA;QAAAsZ,WAAA,CAAAzZ,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAia,WAAA,GAAA1a,0BAAA,CACiBkG,QAAQ;QAAAyU,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/Z,CAAA,MAAAga,OAAA,GAAAD,WAAA,CAAA9Z,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqU,OAAA,CAAA3c,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwZ,WAAA,CAAA5a,CAAA,CAAAoB,GAAA;MAAA;QAAAwZ,WAAA,CAAA3Z,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+P,2BAA2BjJ,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2I,WAAW,GAAGlI,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAyU,aAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,gBAAgBA,CAC9B9V,QAAmB,EACoC;EACvD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI4S,aAAa,EAAE;EAElC,KAAK,IAAM3c,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGwT,mBAAmB,CAAC/d,GAAG,CAACM,GAAG,CAAC;;IAEjD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAAsC,IAAI,EAAES,KAAK,CAAC;IAC/E;EACF;EAEA,IAAI8B,MAAM,CAAC6G,WAAW,KAAK,IAAI,EAAE;IAC/B,OAAOrJ,uBAAuB,CAC5B,gDAAgD,CACjD;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC4e,IAAI,CACf3T,MAAM,CAAC6G,WAAW,EAClB7G,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACnJ,KAAK,CACb,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM+c,qCAAqC;EAAA,SAAAA,sCAAA;IAAA1X,eAAA,OAAA0X,qCAAA;IAAA/Y,eAAA,qBACM,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,gBAEhD,IAAI;IAAAA,eAAA,iBAEH,IAAI;IAAAA,eAAA,sBAEW,IAAI;EAAA;EAAAO,YAAA,CAAAwY,qCAAA;IAAA3d,GAAA;IAAAY,KAAA;IAEvD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAua,WAAA,GAAAhb,0BAAA,CACiBkG,QAAQ;QAAA+U,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAra,CAAA,MAAAsa,OAAA,GAAAD,WAAA,CAAApa,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2U,OAAA,CAAAjd,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8Z,WAAA,CAAAlb,CAAA,CAAAoB,GAAA;MAAA;QAAA8Z,WAAA,CAAAja,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAya,WAAA,GAAAlb,0BAAA,CACiBkG,QAAQ;QAAAiV,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAva,CAAA,MAAAwa,OAAA,GAAAD,WAAA,CAAAta,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6U,OAAA,CAAAnd,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAga,WAAA,CAAApb,CAAA,CAAAoB,GAAA;MAAA;QAAAga,WAAA,CAAAna,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2a,WAAA,GAAApb,0BAAA,CACiBkG,QAAQ;QAAAmV,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAza,CAAA,MAAA0a,OAAA,GAAAD,WAAA,CAAAxa,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+U,OAAA,CAAArd,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAka,WAAA,CAAAtb,CAAA,CAAAoB,GAAA;MAAA;QAAAka,WAAA,CAAAra,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6a,WAAA,GAAAtb,0BAAA,CACiBkG,QAAQ;QAAAqV,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3a,CAAA,MAAA4a,OAAA,GAAAD,WAAA,CAAA1a,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiV,OAAA,CAAAvd,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAoa,WAAA,CAAAxb,CAAA,CAAAoB,GAAA;MAAA;QAAAoa,WAAA,CAAAva,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+a,WAAA,GAAAxb,0BAAA,CACiBkG,QAAQ;QAAAuV,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7a,CAAA,MAAA8a,OAAA,GAAAD,WAAA,CAAA5a,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmV,OAAA,CAAAzd,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsa,WAAA,CAAA1b,CAAA,CAAAoB,GAAA;MAAA;QAAAsa,WAAA,CAAAza,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAib,WAAA,GAAA1b,0BAAA,CACiBkG,QAAQ;QAAAyV,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/a,CAAA,MAAAgb,OAAA,GAAAD,WAAA,CAAA9a,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqV,OAAA,CAAA3d,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwa,WAAA,CAAA5b,CAAA,CAAAoB,GAAA;MAAA;QAAAwa,WAAA,CAAA3a,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAkT,qBAAqBpM,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC8L,KAAK,GAAGrL,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAoT,sBAAsBtM,QAAmB,EAA+B;MACtE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACgM,MAAM,GAAGvL,aAAa,CAACR,SAAS,EAAE;QACvC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA4d,2BAA2B9W,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAyB;MAEhD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAob,WAAA,GAAA7b,0BAAA,CACiBkG,QAAQ;QAAA4V,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAlb,CAAA,MAAAmb,OAAA,GAAAD,WAAA,CAAAjb,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAwV,OAAA,CAAA9d,KAAA;UACrB,IAAMuI,WAAW,GAAGgO,uBAAuB,CAACjO,YAAY,CAAC;UAEzD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA2a,WAAA,CAAA/b,CAAA,CAAAoB,GAAA;MAAA;QAAA2a,WAAA,CAAA9a,CAAA;MAAA;MAED,IAAI,CAACgb,WAAW,GAAG5V,KAAK;MACxB,OAAO,IAAI;IACb;EAAC;EAAA,OAAA4U,qCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiB,wCAAwCA,CACtDlX,QAAmB,EAC4D;EAC/E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI4T,qCAAqC,EAAE;EAE1D,KAAK,IAAM3d,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG4U,6CAA6C,CAACnf,GAAG,CAACM,GAAG,CAAC;;IAE3E;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAACgK,KAAK,KAAK,IAAI,EAAE;IACzB,OAAOxM,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,IAAIwC,MAAM,CAACkK,MAAM,KAAK,IAAI,EAAE;IAC1B,OAAO1M,uBAAuB,CAC5B,2CAA2C,CAC5C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CAIzB,IAAI1I,QAAQ,CAACggB,4BAA4B,CACvC/U,MAAM,CAACgK,KAAK,EACZhK,MAAM,CAACkK,MAAM,EACblK,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAAC4U,WAAW,CACnB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,eAAe;EAAA,SAAAA,gBAAA;IAAA9Y,eAAA,OAAA8Y,eAAA;IAAAna,eAAA,qBAC4B,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,qBAE7B,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,wBAEd,IAAI;IAAAA,eAAA,2BAEwB,IAAI;EAAA;EAAAO,YAAA,CAAA4Z,eAAA;IAAA/e,GAAA;IAAAY,KAAA;IAE/D;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2b,WAAA,GAAApc,0BAAA,CACiBkG,QAAQ;QAAAmW,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAzb,CAAA,MAAA0b,OAAA,GAAAD,WAAA,CAAAxb,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+V,OAAA,CAAAre,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkb,WAAA,CAAAtc,CAAA,CAAAoB,GAAA;MAAA;QAAAkb,WAAA,CAAArb,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA6b,WAAA,GAAAtc,0BAAA,CACiBkG,QAAQ;QAAAqW,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA3b,CAAA,MAAA4b,OAAA,GAAAD,WAAA,CAAA1b,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAiW,OAAA,CAAAve,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAob,WAAA,CAAAxc,CAAA,CAAAoB,GAAA;MAAA;QAAAob,WAAA,CAAAvb,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+b,WAAA,GAAAxc,0BAAA,CACiBkG,QAAQ;QAAAuW,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7b,CAAA,MAAA8b,OAAA,GAAAD,WAAA,CAAA5b,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmW,OAAA,CAAAze,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsb,WAAA,CAAA1c,CAAA,CAAAoB,GAAA;MAAA;QAAAsb,WAAA,CAAAzb,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAic,WAAA,GAAA1c,0BAAA,CACiBkG,QAAQ;QAAAyW,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/b,CAAA,MAAAgc,OAAA,GAAAD,WAAA,CAAA9b,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqW,OAAA,CAAA3e,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwb,WAAA,CAAA5c,CAAA,CAAAoB,GAAA;MAAA;QAAAwb,WAAA,CAAA3b,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmc,WAAA,GAAA5c,0BAAA,CACiBkG,QAAQ;QAAA2W,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjc,CAAA,MAAAkc,OAAA,GAAAD,WAAA,CAAAhc,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuW,OAAA,CAAA7e,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0b,WAAA,CAAA9c,CAAA,CAAAoB,GAAA;MAAA;QAAA0b,WAAA,CAAA7b,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqc,WAAA,GAAA9c,0BAAA,CACiBkG,QAAQ;QAAA6W,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnc,CAAA,MAAAoc,OAAA,GAAAD,WAAA,CAAAlc,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyW,OAAA,CAAA/e,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4b,WAAA,CAAAhd,CAAA,CAAAoB,GAAA;MAAA;QAAA4b,WAAA,CAAA/b,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAgf,0BAA0BlY,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA6B;MAEpD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAwc,WAAA,GAAAjd,0BAAA,CACiBkG,QAAQ;QAAAgX,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAtc,CAAA,MAAAuc,OAAA,GAAAD,WAAA,CAAArc,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA4W,OAAA,CAAAlf,KAAA;UACrB,IAAMuI,WAAW,GAAGsJ,2BAA2B,CAACvJ,YAAY,CAAC;UAE7D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA+b,WAAA,CAAAnd,CAAA,CAAAoB,GAAA;MAAA;QAAA+b,WAAA,CAAAlc,CAAA;MAAA;MAED,IAAI,CAACoc,UAAU,GAAGhX,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAof,0BAA0BtY,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGuX,sBAAsB,CAACvY,QAAQ,CAAC;MACtD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACiY,UAAU,GAAGxX,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+O,6BAA6BjI,QAAmB,EAA+B;MAC7E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2H,aAAa,GAAGlH,aAAa,CAACR,SAAS,EAAE;QAC9C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiP,gCAAgCnI,QAAmB,EAA+B;MAChF,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA4B;MAEnD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA8c,WAAA,GAAAvd,0BAAA,CACiBkG,QAAQ;QAAAsX,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA5c,CAAA,MAAA6c,OAAA,GAAAD,WAAA,CAAA3c,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAkX,OAAA,CAAAxf,KAAA;UACrB,IAAMuI,WAAW,GAAG6G,2BAA2B,CAAC9G,YAAY,CAAC;UAE7D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAqc,WAAA,CAAAzd,CAAA,CAAAoB,GAAA;MAAA;QAAAqc,WAAA,CAAAxc,CAAA;MAAA;MAED,IAAI,CAACsM,gBAAgB,GAAGlH,KAAK;MAC7B,OAAO,IAAI;IACb;EAAC;EAAA,OAAAgW,eAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsB,kBAAkBA,CAChC3Y,QAAmB,EACsC;EACzD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIgV,eAAe,EAAE;EAEpC,KAAK,IAAM/e,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGqW,qBAAqB,CAAC5gB,GAAG,CAACM,GAAG,CAAC;;IAEnD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAAwC,IAAI,EAAES,KAAK,CAAC;IACjF;EACF;EAEA,IAAI8B,MAAM,CAACmW,UAAU,KAAK,IAAI,EAAE;IAC9B,OAAO3Y,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACyhB,MAAM,CACjBxW,MAAM,CAACmW,UAAU,EACjBnW,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACgW,UAAU,EACjBhW,MAAM,CAAC6F,aAAa,EACpB7F,MAAM,CAACkG,gBAAgB,CACxB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgQ,sBAAsBA,CACpCvY,QAAmB,EAC0C;EAC7D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACyhB,oBAAoB,CAAC9Y,QAAQ,CAAC;EACjE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,+BAAAb,MAAA,CAA+BgB,QAAQ,CAAE,CACjF;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA4CmD,OAAO,EAAE,IAAI,CAAC;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8V,qBAAqBA,CACnC/Y,QAAmB,EACyC;EAC5D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAAC2hB,mBAAmB,CAAChZ,QAAQ,CAAC;EAChE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,8BAAAb,MAAA,CAA8BgB,QAAQ,CAAE,CAChF;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA2CmD,OAAO,EAAE,IAAI,CAAC;AACtF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgW,wBAAwBA,CACtCjZ,QAAmB,EAC4C;EAC/D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAAC6hB,sBAAsB,CAAClZ,QAAQ,CAAC;EACnE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,iCAAAb,MAAA,CAAiCgB,QAAQ,CAAE,CACnF;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMkW,qBAAqB;EAAA,SAAAA,sBAAA;IAAA5a,eAAA,OAAA4a,qBAAA;IAAAjc,eAAA,iBACW,IAAI;IAAAA,eAAA,2BAEM,IAAI;IAAAA,eAAA,8BAED,IAAI;IAAAA,eAAA,+BAEH,IAAI;IAAAA,eAAA,gBAE/B,IAAI;IAAAA,eAAA,oBAEY,IAAI;IAAAA,eAAA,oBAEhB,IAAI;IAAAA,eAAA,kBAEF,IAAI;EAAA;EAAAO,YAAA,CAAA0b,qBAAA;IAAA7gB,GAAA;IAAAY,KAAA;IAEjC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAkgB,sBAAsBpZ,QAAmB,EAA+B;MACtE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC8Y,MAAM,GAAGrY,aAAa,CAACR,SAAS,EAAE;QACvC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAogB,gCAAgCtZ,QAAmB,EAA+B;MAChF,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACgZ,gBAAgB,GAAGvY,aAAa,CAACR,SAAS,EAAE;QACjD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAsgB,mCAAmCxZ,QAAmB,EAA+B;MACnF,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACkZ,mBAAmB,GAAGzY,aAAa,CAACR,SAAS,EAAE;QACpD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAwgB,oCACE1Z,QAAmB,EACU;MAC7B,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACoZ,oBAAoB,GAAG3Y,aAAa,CAACR,SAAS,EAAE;QACrD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0gB,qBAAqB5Z,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACsZ,KAAK,GAAG7Y,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA4gB,yBAAyB9Z,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwZ,SAAS,GAAG/Y,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8gB,yBAAyBha,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0Z,SAAS,GAAGjZ,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAghB,uBAAuBla,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGZ,iBAAiB,CAACJ,QAAQ,CAAC;MACjD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC4Z,OAAO,GAAGnZ,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA2Y,qBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiB,wBAAwBA,CACtCpa,QAAmB,EAC4C;EAC/D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI8W,qBAAqB,EAAE;EAE1C,KAAK,IAAM7gB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG8X,4BAA4B,CAACriB,GAAG,CAACM,GAAG,CAAC;;IAE1D;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACgX,MAAM,KAAK,IAAI,EAAE;IAC1B,OAAOxZ,uBAAuB,CAC5B,2CAA2C,CAC5C;EACH;EAEA,IAAIwC,MAAM,CAACoX,mBAAmB,KAAK,IAAI,EAAE;IACvC,OAAO5Z,uBAAuB,CAC5B,wDAAwD,CACzD;EACH;EAEA,IAAIwC,MAAM,CAAC4X,SAAS,KAAK,IAAI,EAAE;IAC7B,OAAOpa,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACkjB,YAAY,CACvBjY,MAAM,CAACgX,MAAM,EACbhX,MAAM,CAACoX,mBAAmB,EAC1BpX,MAAM,CAAC4X,SAAS,EAChB5X,MAAM,CAACkX,gBAAgB,EACvBlX,MAAM,CAACsX,oBAAoB,EAC3BtX,MAAM,CAACwX,KAAK,EACZxX,MAAM,CAAC0X,SAAS,EAChB1X,MAAM,CAAC8X,OAAO,CACf,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,wBAAwBA,CACtCva,QAAmB,EAC6C;EAChE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAG6Z,oCAAoC,CAACxiB,GAAG,CAAC0I,SAAS,CAAC;EACpE,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,6CAAAb,MAAA,CACgB0B,SAAS,EACtD;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIMya,0BAA0B;EAAA,SAAAA,2BAAA;IAAAlc,eAAA,OAAAkc,0BAAA;IAAAvd,eAAA,qBACiB,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,mBAE7C,IAAI;IAAAA,eAAA,oBAEH,IAAI;IAAAA,eAAA,gBAEL,IAAI;IAAAA,eAAA,uBAEZ,IAAI;IAAAA,eAAA,wBAES,IAAI;IAAAA,eAAA,qBAEnB,IAAI;IAAAA,eAAA,sBAEH,IAAI;IAAAA,eAAA,sBAEJ,IAAI;EAAA;EAAAO,YAAA,CAAAgd,0BAAA;IAAAniB,GAAA;IAAAY,KAAA;IAEjC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+e,WAAA,GAAAxf,0BAAA,CACiBkG,QAAQ;QAAAuZ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7e,CAAA,MAAA8e,OAAA,GAAAD,WAAA,CAAA5e,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmZ,OAAA,CAAAzhB,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAse,WAAA,CAAA1f,CAAA,CAAAoB,GAAA;MAAA;QAAAse,WAAA,CAAAze,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAif,WAAA,GAAA1f,0BAAA,CACiBkG,QAAQ;QAAAyZ,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/e,CAAA,MAAAgf,OAAA,GAAAD,WAAA,CAAA9e,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqZ,OAAA,CAAA3hB,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwe,WAAA,CAAA5f,CAAA,CAAAoB,GAAA;MAAA;QAAAwe,WAAA,CAAA3e,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmf,WAAA,GAAA5f,0BAAA,CACiBkG,QAAQ;QAAA2Z,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjf,CAAA,MAAAkf,OAAA,GAAAD,WAAA,CAAAhf,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAuZ,OAAA,CAAA7hB,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0e,WAAA,CAAA9f,CAAA,CAAAoB,GAAA;MAAA;QAAA0e,WAAA,CAAA7e,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqf,WAAA,GAAA9f,0BAAA,CACiBkG,QAAQ;QAAA6Z,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAnf,CAAA,MAAAof,OAAA,GAAAD,WAAA,CAAAlf,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyZ,OAAA,CAAA/hB,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4e,WAAA,CAAAhgB,CAAA,CAAAoB,GAAA;MAAA;QAAA4e,WAAA,CAAA/e,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuf,WAAA,GAAAhgB,0BAAA,CACiBkG,QAAQ;QAAA+Z,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAArf,CAAA,MAAAsf,OAAA,GAAAD,WAAA,CAAApf,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2Z,OAAA,CAAAjiB,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8e,WAAA,CAAAlgB,CAAA,CAAAoB,GAAA;MAAA;QAAA8e,WAAA,CAAAjf,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyf,WAAA,GAAAlgB,0BAAA,CACiBkG,QAAQ;QAAAia,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAvf,CAAA,MAAAwf,OAAA,GAAAD,WAAA,CAAAtf,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6Z,OAAA,CAAAniB,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgf,WAAA,CAAApgB,CAAA,CAAAoB,GAAA;MAAA;QAAAgf,WAAA,CAAAnf,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoiB,wBAAwBtb,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACgb,QAAQ,GAAGva,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAsiB,yBAAyBxb,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAG+X,qBAAqB,CAAC/Y,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACkb,SAAS,GAAGza,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAwiB,qBAAqB1b,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGiY,wBAAwB,CAACjZ,QAAQ,CAAC;MACxD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACob,KAAK,GAAG3a,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0iB,4BAA4B5b,QAAmB,EAA+B;MAC5E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACsb,YAAY,GAAG7a,aAAa,CAACR,SAAS,EAAE;QAC7C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA4iB,6BAA6B9b,QAAmB,EAA+B;MAC7E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwb,aAAa,GAAG/a,aAAa,CAACR,SAAS,EAAE;QAC9C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8iB,0BAA0Bhc,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0b,UAAU,GAAGjb,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAgjB,2BAA2Blc,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC4b,WAAW,GAAGnb,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAkjB,2BAA2Bpc,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC8b,WAAW,GAAGrb,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAia,0BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6B,6BAA6BA,CAC3Ctc,QAAmB,EACiD;EACpE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIoY,0BAA0B,EAAE;EAE/C,KAAK,IAAMniB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGga,kCAAkC,CAACvkB,GAAG,CAACM,GAAG,CAAC;;IAEhE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACkZ,QAAQ,KAAK,IAAI,EAAE;IAC5B,OAAO1b,uBAAuB,CAC5B,6CAA6C,CAC9C;EACH;EAEA,IAAIwC,MAAM,CAACoZ,SAAS,KAAK,IAAI,EAAE;IAC7B,OAAO5b,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EAEA,IAAIwC,MAAM,CAACsZ,KAAK,KAAK,IAAI,EAAE;IACzB,OAAO9b,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAColB,iBAAiB,CAC5Bna,MAAM,CAACkZ,QAAQ,EACflZ,MAAM,CAACoZ,SAAS,EAChBpZ,MAAM,CAACsZ,KAAK,EACZtZ,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACwZ,YAAY,EACnBxZ,MAAM,CAAC0Z,aAAa,EACpB1Z,MAAM,CAAC4Z,UAAU,EACjB5Z,MAAM,CAAC8Z,WAAW,EAClB9Z,MAAM,CAACga,WAAW,CACnB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,kBAAkB;EAAA,SAAAA,mBAAA;IAAAle,eAAA,OAAAke,kBAAA;IAAAvf,eAAA,qBACyB,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;IAAAA,eAAA,yBAExB,IAAI;IAAAA,eAAA,0BAEH,IAAI;IAAAA,eAAA,4BAEF,IAAI;EAAA;EAAAO,YAAA,CAAAgf,kBAAA;IAAAnkB,GAAA;IAAAY,KAAA;IAElE;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+gB,WAAA,GAAAxhB,0BAAA,CACiBkG,QAAQ;QAAAub,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA7gB,CAAA,MAAA8gB,OAAA,GAAAD,WAAA,CAAA5gB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmb,OAAA,CAAAzjB,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsgB,WAAA,CAAA1hB,CAAA,CAAAoB,GAAA;MAAA;QAAAsgB,WAAA,CAAAzgB,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAihB,WAAA,GAAA1hB,0BAAA,CACiBkG,QAAQ;QAAAyb,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAA/gB,CAAA,MAAAghB,OAAA,GAAAD,WAAA,CAAA9gB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqb,OAAA,CAAA3jB,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwgB,WAAA,CAAA5hB,CAAA,CAAAoB,GAAA;MAAA;QAAAwgB,WAAA,CAAA3gB,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmhB,WAAA,GAAA5hB,0BAAA,CACiBkG,QAAQ;QAAA2b,OAAA;MAAA;QAAnC,KAAAD,WAAA,CAAAjhB,CAAA,MAAAkhB,OAAA,GAAAD,WAAA,CAAAhhB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAub,OAAA,CAAA7jB,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0gB,WAAA,CAAA9hB,CAAA,CAAAoB,GAAA;MAAA;QAAA0gB,WAAA,CAAA7gB,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqhB,YAAA,GAAA9hB,0BAAA,CACiBkG,QAAQ;QAAA6b,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAnhB,CAAA,MAAAohB,QAAA,GAAAD,YAAA,CAAAlhB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyb,QAAA,CAAA/jB,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4gB,YAAA,CAAAhiB,CAAA,CAAAoB,GAAA;MAAA;QAAA4gB,YAAA,CAAA/gB,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuhB,YAAA,GAAAhiB,0BAAA,CACiBkG,QAAQ;QAAA+b,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAArhB,CAAA,MAAAshB,QAAA,GAAAD,YAAA,CAAAphB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2b,QAAA,CAAAjkB,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8gB,YAAA,CAAAliB,CAAA,CAAAoB,GAAA;MAAA;QAAA8gB,YAAA,CAAAjhB,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyhB,YAAA,GAAAliB,0BAAA,CACiBkG,QAAQ;QAAAic,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAvhB,CAAA,MAAAwhB,QAAA,GAAAD,YAAA,CAAAthB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6b,QAAA,CAAAnkB,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAghB,YAAA,CAAApiB,CAAA,CAAAoB,GAAA;MAAA;QAAAghB,YAAA,CAAAnhB,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAokB,8BAA8Btd,QAAmB,EAA+B;MAC9E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA8B;MAErD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA4hB,YAAA,GAAAriB,0BAAA,CACiBkG,QAAQ;QAAAoc,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA1hB,CAAA,MAAA2hB,QAAA,GAAAD,YAAA,CAAAzhB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAgc,QAAA,CAAAtkB,KAAA;UACrB,IAAMuI,WAAW,GAAGgc,6BAA6B,CAACjc,YAAY,CAAC;UAE/D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAmhB,YAAA,CAAAviB,CAAA,CAAAoB,GAAA;MAAA;QAAAmhB,YAAA,CAAAthB,CAAA;MAAA;MAED,IAAI,CAACyhB,cAAc,GAAGrc,KAAK;MAC3B,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAykB,+BAA+B3d,QAAmB,EAA+B;MAC/E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA8B;MAErD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAiiB,YAAA,GAAA1iB,0BAAA,CACiBkG,QAAQ;QAAAyc,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA/hB,CAAA,MAAAgiB,QAAA,GAAAD,YAAA,CAAA9hB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqc,QAAA,CAAA3kB,KAAA;UACrB,IAAMuI,WAAW,GAAGgc,6BAA6B,CAACjc,YAAY,CAAC;UAE/D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwhB,YAAA,CAAA5iB,CAAA,CAAAoB,GAAA;MAAA;QAAAwhB,YAAA,CAAA3hB,CAAA;MAAA;MAED,IAAI,CAAC6hB,eAAe,GAAGzc,KAAK;MAC5B,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6kB,iCAAiC/d,QAAmB,EAA+B;MACjF,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA8B;MAErD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqiB,YAAA,GAAA9iB,0BAAA,CACiBkG,QAAQ;QAAA6c,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAniB,CAAA,MAAAoiB,QAAA,GAAAD,YAAA,CAAAliB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyc,QAAA,CAAA/kB,KAAA;UACrB,IAAMuI,WAAW,GAAGgc,6BAA6B,CAACjc,YAAY,CAAC;UAE/D,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4hB,YAAA,CAAAhjB,CAAA,CAAAoB,GAAA;MAAA;QAAA4hB,YAAA,CAAA/hB,CAAA;MAAA;MAED,IAAI,CAACiiB,iBAAiB,GAAG7c,KAAK;MAC9B,OAAO,IAAI;IACb;EAAC;EAAA,OAAAob,kBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0B,qBAAqBA,CACnCne,QAAmB,EACyC;EAC5D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIoa,kBAAkB,EAAE;EAEvC,KAAK,IAAMnkB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG6b,wBAAwB,CAACpmB,GAAG,CAACM,GAAG,CAAC;;IAEtD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACinB,SAAS,CACpBhc,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACqb,cAAc,EACrBrb,MAAM,CAACyb,eAAe,EACtBzb,MAAM,CAAC6b,iBAAiB,CACzB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,0BAA0B;EAAA,SAAAA,2BAAA;IAAA/f,eAAA,OAAA+f,0BAAA;IAAAphB,eAAA,gBACY,IAAI;EAAA;EAAAO,YAAA,CAAA6gB,0BAAA;IAAAhmB,GAAA;IAAAY,KAAA;IAE9C;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAG+J,2BAA2B,CAAC/K,QAAQ,CAAC;MAC3D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA8d,0BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASb,6BAA6BA,CAC3Czd,QAAmB,EACiD;EACpE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIic,0BAA0B,EAAE;EAE/C,KAAK,IAAMhmB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGgc,iCAAiC,CAACvmB,GAAG,CAACM,GAAG,CAAC;;IAE/D;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACnJ,KAAK,KAAK,IAAI,EAAE;IACzB,OAAO2G,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAConB,iBAAiB,CAACnc,MAAM,CAACnJ,KAAK,CAAC,EAC5C,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMulB,mBAAmB;EAAA,SAAAA,oBAAA;IAAAlgB,eAAA,OAAAkgB,mBAAA;IAAAvhB,eAAA,qBACwB,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,qBAErB,IAAI;IAAAA,eAAA,kCAEgB,IAAI;IAAAA,eAAA,qBAEjB,IAAI;IAAAA,eAAA,qCAE4B,IAAI;EAAA;EAAAO,YAAA,CAAAghB,mBAAA;IAAAnmB,GAAA;IAAAY,KAAA;IAEnF;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+iB,YAAA,GAAAxjB,0BAAA,CACiBkG,QAAQ;QAAAud,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA7iB,CAAA,MAAA8iB,QAAA,GAAAD,YAAA,CAAA5iB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAmd,QAAA,CAAAzlB,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsiB,YAAA,CAAA1jB,CAAA,CAAAoB,GAAA;MAAA;QAAAsiB,YAAA,CAAAziB,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAijB,YAAA,GAAA1jB,0BAAA,CACiBkG,QAAQ;QAAAyd,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA/iB,CAAA,MAAAgjB,QAAA,GAAAD,YAAA,CAAA9iB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqd,QAAA,CAAA3lB,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwiB,YAAA,CAAA5jB,CAAA,CAAAoB,GAAA;MAAA;QAAAwiB,YAAA,CAAA3iB,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmjB,YAAA,GAAA5jB,0BAAA,CACiBkG,QAAQ;QAAA2d,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAjjB,CAAA,MAAAkjB,QAAA,GAAAD,YAAA,CAAAhjB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAud,QAAA,CAAA7lB,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0iB,YAAA,CAAA9jB,CAAA,CAAAoB,GAAA;MAAA;QAAA0iB,YAAA,CAAA7iB,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA6H,0BAA0Bf,QAAmB,EAA+B;MAC1E,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACW,UAAU,GAAGF,aAAa,CAACR,SAAS,EAAE;QAC3C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiI,uCACEnB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqjB,YAAA,GAAA9jB,0BAAA,CACiBkG,QAAQ;QAAA6d,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAnjB,CAAA,MAAAojB,QAAA,GAAAD,YAAA,CAAAljB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAyd,QAAA,CAAA/lB,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4iB,YAAA,CAAAhkB,CAAA,CAAAoB,GAAA;MAAA;QAAA4iB,YAAA,CAAA/iB,CAAA;MAAA;MAED,IAAI,CAACyF,uBAAuB,GAAGL,KAAK;MACpC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoR,0BAA0BtK,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAujB,YAAA,GAAAhkB,0BAAA,CACiBkG,QAAQ;QAAA+d,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAArjB,CAAA,MAAAsjB,QAAA,GAAAD,YAAA,CAAApjB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2d,QAAA,CAAAjmB,KAAA;UACrB,IAAMuI,WAAW,GAAG4D,qBAAqB,CAAC7D,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8iB,YAAA,CAAAlkB,CAAA,CAAAoB,GAAA;MAAA;QAAA8iB,YAAA,CAAAjjB,CAAA;MAAA;MAED,IAAI,CAACwO,UAAU,GAAGpJ,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyjB,YAAA,GAAAlkB,0BAAA,CACiBkG,QAAQ;QAAAie,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAvjB,CAAA,MAAAwjB,QAAA,GAAAD,YAAA,CAAAtjB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6d,QAAA,CAAAnmB,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgjB,YAAA,CAAApkB,CAAA,CAAAoB,GAAA;MAAA;QAAAgjB,YAAA,CAAAnjB,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;EAAC;EAAA,OAAAod,mBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,sBAAsBA,CACpCtf,QAAmB,EAC0C;EAC7D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIoc,mBAAmB,EAAE;EAExC,KAAK,IAAMnmB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGgd,yBAAyB,CAACvnB,GAAG,CAACM,GAAG,CAAC;;IAEvD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACooB,UAAU,CACrBnd,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACnB,UAAU,EACjBmB,MAAM,CAACX,uBAAuB,EAC9BW,MAAM,CAACoI,UAAU,EACjBpI,MAAM,CAACuB,0BAA0B,CAClC,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM6b,2BAA2B;EAAA,SAAAA,4BAAA;IAAAlhB,eAAA,OAAAkhB,2BAAA;IAAAviB,eAAA,qBACgB,IAAI;IAAAA,eAAA,mBAEzB,IAAI;IAAAA,eAAA,kBAEL,IAAI;IAAAA,eAAA,sBAE4B,IAAI;IAAAA,eAAA,sBAEJ,IAAI;IAAAA,eAAA,yBAED,IAAI;IAAAA,eAAA,aAE5C,IAAI;IAAAA,eAAA,qCAEuD,IAAI;IAAAA,eAAA,mBAEtC,IAAI;EAAA;EAAAO,YAAA,CAAAgiB,2BAAA;IAAAnnB,GAAA;IAAAY,KAAA;IAEjD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuM,0BAA0BzF,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA+jB,YAAA,GAAAxkB,0BAAA,CACiBkG,QAAQ;QAAAue,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA7jB,CAAA,MAAA8jB,QAAA,GAAAD,YAAA,CAAA5jB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAme,QAAA,CAAAzmB,KAAA;UACrB,IAAMuI,WAAW,GAAGW,qBAAqB,CAACZ,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAsjB,YAAA,CAAA1kB,CAAA,CAAAoB,GAAA;MAAA;QAAAsjB,YAAA,CAAAzjB,CAAA;MAAA;MAED,IAAI,CAAC2J,UAAU,GAAGvE,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA2M,wBAAwB7F,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuF,QAAQ,GAAG9E,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6M,uBAAuB/F,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACyF,OAAO,GAAGhF,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+M,2BAA2BjG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAikB,YAAA,GAAA1kB,0BAAA,CACiBkG,QAAQ;QAAAye,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA/jB,CAAA,MAAAgkB,QAAA,GAAAD,YAAA,CAAA9jB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqe,QAAA,CAAA3mB,KAAA;UACrB,IAAMuI,WAAW,GAAG2E,8BAA8B,CAAC5E,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwjB,YAAA,CAAA5kB,CAAA,CAAAoB,GAAA;MAAA;QAAAwjB,YAAA,CAAA3jB,CAAA;MAAA;MAED,IAAI,CAACoK,WAAW,GAAGhF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoN,2BAA2BtG,QAAmB,EAA+B;MAC3E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmkB,YAAA,GAAA5kB,0BAAA,CACiBkG,QAAQ;QAAA2e,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAjkB,CAAA,MAAAkkB,QAAA,GAAAD,YAAA,CAAAhkB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAue,QAAA,CAAA7mB,KAAA;UACrB,IAAMuI,WAAW,GAAGgF,8BAA8B,CAACjF,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0jB,YAAA,CAAA9kB,CAAA,CAAAoB,GAAA;MAAA;QAAA0jB,YAAA,CAAA7jB,CAAA;MAAA;MAED,IAAI,CAACyK,WAAW,GAAGrF,KAAK;MACxB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAyN,8BAA8B3G,QAAmB,EAA+B;MAC9E,IAAMgB,aAAa,GAAGqD,qCAAqC,CAACrE,QAAQ,CAAC;MACrE,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACqG,cAAc,GAAG5F,aAAa,CAACR,SAAS,EAAE;QAC/C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA2N,kBAAkB7G,QAAmB,EAA+B;MAClE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACuG,EAAE,GAAG9F,aAAa,CAACR,SAAS,EAAE;QACnC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAsK,0CACExD,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsC;MAE7D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAqkB,YAAA,GAAA9kB,0BAAA,CACiBkG,QAAQ;QAAA6e,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAnkB,CAAA,MAAAokB,QAAA,GAAAD,YAAA,CAAAlkB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAye,QAAA,CAAA/mB,KAAA;UACrB,IAAMuI,WAAW,GAAGkC,qCAAqC,CAACnC,YAAY,CAAC;UAEvE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA4jB,YAAA,CAAAhlB,CAAA,CAAAoB,GAAA;MAAA;QAAA4jB,YAAA,CAAA/jB,CAAA;MAAA;MAED,IAAI,CAAC2H,0BAA0B,GAAGvC,KAAK;MACvC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAgnB,wBAAwBlgB,QAAmB,EAA+B;MACxE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAsB;MAE7C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAwkB,YAAA,GAAAjlB,0BAAA,CACiBkG,QAAQ;QAAAgf,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAtkB,CAAA,MAAAukB,QAAA,GAAAD,YAAA,CAAArkB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA4e,QAAA,CAAAlnB,KAAA;UACrB,IAAMuI,WAAW,GAAGR,qBAAqB,CAACO,YAAY,CAAC;UAEvD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA+jB,YAAA,CAAAnlB,CAAA,CAAAoB,GAAA;MAAA;QAAA+jB,YAAA,CAAAlkB,CAAA;MAAA;MAED,IAAI,CAACokB,QAAQ,GAAGhf,KAAK;MACrB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAoe,2BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,8BAA8BA,CAC5CtgB,QAAmB,EACkD;EACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIod,2BAA2B,EAAE;EAEhD,KAAK,IAAMnnB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGge,kCAAkC,CAACvoB,GAAG,CAACM,GAAG,CAAC;;IAEhE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACyE,EAAE,KAAK,IAAI,EAAE;IACtB,OAAOjH,uBAAuB,CAC5B,uCAAuC,CACxC;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACopB,kBAAkB,CAC7Bne,MAAM,CAACyE,EAAE,EACTzE,MAAM,CAACuD,UAAU,EACjBvD,MAAM,CAACyD,QAAQ,EACfzD,MAAM,CAAC2D,OAAO,EACd3D,MAAM,CAACgE,WAAW,EAClBhE,MAAM,CAACqE,WAAW,EAClBrE,MAAM,CAACuE,cAAc,EACrBvE,MAAM,CAACuB,0BAA0B,EACjCvB,MAAM,CAACge,QAAQ,CAChB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,0BAA0BA,CACxCzgB,QAAmB,EAC8C;EACjE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACqpB,wBAAwB,CAAC1gB,QAAQ,CAAC;EACrE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,mCAAAb,MAAA,CACLgB,QAAQ,CAAE,CAC7C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM0d,kBAAkB;EAAA,SAAAA,mBAAA;IAAApiB,eAAA,OAAAoiB,kBAAA;IAAAzjB,eAAA,eACiB,IAAI;IAAAA,eAAA,6BAEK,IAAI;IAAAA,eAAA,eAEjB,IAAI;EAAA;EAAAO,YAAA,CAAAkjB,kBAAA;IAAAroB,GAAA;IAAAY,KAAA;IAEvC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA+L,oBAAoBjF,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGyf,0BAA0B,CAACzgB,QAAQ,CAAC;MAC1D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2E,IAAI,GAAGlE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0nB,kCAAkC5gB,QAAmB,EAA+B;MAClF,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACsgB,kBAAkB,GAAG7f,aAAa,CAACR,SAAS,EAAE;QACnD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA4nB,oBAAoB9gB,QAAmB,EAA+B;MACpE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAgB;MAEvC,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAolB,YAAA,GAAA7lB,0BAAA,CACiBkG,QAAQ;QAAA4f,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAllB,CAAA,MAAAmlB,QAAA,GAAAD,YAAA,CAAAjlB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAwf,QAAA,CAAA9nB,KAAA;UACrB,IAAMuI,WAAW,GAAGwf,eAAe,CAACzf,YAAY,CAAC;UAEjD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA2kB,YAAA,CAAA/lB,CAAA,CAAAoB,GAAA;MAAA;QAAA2kB,YAAA,CAAA9kB,CAAA;MAAA;MAED,IAAI,CAACilB,IAAI,GAAG7f,KAAK;MACjB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAsf,kBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS1f,qBAAqBA,CACnCjB,QAAmB,EACyC;EAC5D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIse,kBAAkB,EAAE;EAEvC,KAAK,IAAMroB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG4e,wBAAwB,CAACnpB,GAAG,CAACM,GAAG,CAAC;;IAEtD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC6C,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOrF,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,IAAIwC,MAAM,CAAC6e,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOrhB,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACgqB,SAAS,CAAC/e,MAAM,CAAC6C,IAAI,EAAE7C,MAAM,CAAC6e,IAAI,EAAE7e,MAAM,CAACwe,kBAAkB,CAAC,EAC3E,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMQ,YAAY;EAAA,SAAAA,aAAA;IAAA9iB,eAAA,OAAA8iB,YAAA;IAAAnkB,eAAA,eACiB,IAAI;IAAAA,eAAA,gBAEd,IAAI;EAAA;EAAAO,YAAA,CAAA4jB,YAAA;IAAA/oB,GAAA;IAAAY,KAAA;IAE3B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA+L,oBAAoBjF,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGsgB,oBAAoB,CAACthB,QAAQ,CAAC;MACpD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2E,IAAI,GAAGlE,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA6gB,YAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASJ,eAAeA,CAC7BjhB,QAAmB,EACmC;EACtD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIgf,YAAY,EAAE;EAEjC,KAAK,IAAM/oB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGgf,kBAAkB,CAACvpB,GAAG,CAACM,GAAG,CAAC;;IAEhD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAAqC,IAAI,EAAES,KAAK,CAAC;IAC9E;EACF;EAEA,IAAI8B,MAAM,CAAC6C,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOrF,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,IAAIwC,MAAM,CAACnJ,KAAK,KAAK,IAAI,EAAE;IACzB,OAAO2G,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACoqB,GAAG,CAACnf,MAAM,CAAC6C,IAAI,EAAE7C,MAAM,CAACnJ,KAAK,CAAC,EAC3C,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASooB,oBAAoBA,CAClCthB,QAAmB,EACwC;EAC3D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACoqB,kBAAkB,CAACzhB,QAAQ,CAAC;EAC/D,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,6BAAAb,MAAA,CAA6BgB,QAAQ,CAAE,CAC/E;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CAA0CmD,OAAO,EAAE,IAAI,CAAC;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASpB,0BAA0BA,CACxC7B,QAAmB,EAC8C;EACjE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAACqqB,wBAAwB,CAAC1hB,QAAQ,CAAC;EACrE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,mCAAAb,MAAA,CACLgB,QAAQ,CAAE,CAC7C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0e,8BAA8BA,CAC5C3hB,QAAmB,EACmD;EACtE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAGihB,2CAA2C,CAAC5pB,GAAG,CAAC0I,SAAS,CAAC;EAC3E,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,mDAAAb,MAAA,CACsB0B,SAAS,EAC5D;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIM6hB,2BAA2B;EAAA,SAAAA,4BAAA;IAAAtjB,eAAA,OAAAsjB,2BAAA;IAAA3kB,eAAA,mBACL,IAAI;IAAAA,eAAA,eAER,IAAI;EAAA;EAAAO,YAAA,CAAAokB,2BAAA;IAAAvpB,GAAA;IAAAY,KAAA;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4oB,wBAAwB9hB,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwhB,QAAQ,GAAG/gB,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8oB,oBAAoBhiB,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0hB,IAAI,GAAGjhB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAqhB,2BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASzb,8BAA8BA,CAC5CpG,QAAmB,EACkD;EACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIwf,2BAA2B,EAAE;EAEhD,KAAK,IAAMvpB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG2f,oCAAoC,CAAClqB,GAAG,CAACM,GAAG,CAAC;;IAElE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC0f,QAAQ,KAAK,IAAI,EAAE;IAC5B,OAAOliB,uBAAuB,CAC5B,6CAA6C,CAC9C;EACH;EAEA,IAAIwC,MAAM,CAAC4f,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOpiB,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC+qB,kBAAkB,CAAC9f,MAAM,CAAC0f,QAAQ,EAAE1f,MAAM,CAAC4f,IAAI,CAAC,EAC7D,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMG,2BAA2B;EAAA,SAAAA,4BAAA;IAAA7jB,eAAA,OAAA6jB,2BAAA;IAAAllB,eAAA,mBACL,IAAI;IAAAA,eAAA,eAER,IAAI;EAAA;EAAAO,YAAA,CAAA2kB,2BAAA;IAAA9pB,GAAA;IAAAY,KAAA;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4oB,wBAAwB9hB,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwhB,QAAQ,GAAG/gB,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8oB,oBAAoBhiB,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0hB,IAAI,GAAGjhB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA4hB,2BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS3b,8BAA8BA,CAC5CzG,QAAmB,EACkD;EACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI+f,2BAA2B,EAAE;EAEhD,KAAK,IAAM9pB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG8f,oCAAoC,CAACrqB,GAAG,CAACM,GAAG,CAAC;;IAElE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC0f,QAAQ,KAAK,IAAI,EAAE;IAC5B,OAAOliB,uBAAuB,CAC5B,6CAA6C,CAC9C;EACH;EAEA,IAAIwC,MAAM,CAAC4f,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOpiB,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACkrB,kBAAkB,CAACjgB,MAAM,CAAC0f,QAAQ,EAAE1f,MAAM,CAAC4f,IAAI,CAAC,EAC7D,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMM,oBAAoB;EAAA,SAAAA,qBAAA;IAAAhkB,eAAA,OAAAgkB,oBAAA;IAAArlB,eAAA,oCACqD,IAAI;IAAAA,eAAA,oBAEpC,IAAI;IAAAA,eAAA,8BAEgB,IAAI;EAAA;EAAAO,YAAA,CAAA8kB,oBAAA;IAAAjqB,GAAA;IAAAY,KAAA;IAErE;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAspB,yCACExiB,QAAmB,EACU;MAC7B,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAqC;MAE5D,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA8mB,YAAA,GAAAvnB,0BAAA,CACiBkG,QAAQ;QAAAshB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA5mB,CAAA,MAAA6mB,QAAA,GAAAD,YAAA,CAAA3mB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAkhB,QAAA,CAAAxpB,KAAA;UACrB,IAAMuI,WAAW,GAAGiG,oCAAoC,CAAClG,YAAY,CAAC;UAEtE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAqmB,YAAA,CAAAznB,CAAA,CAAAoB,GAAA;MAAA;QAAAqmB,YAAA,CAAAxmB,CAAA;MAAA;MAED,IAAI,CAAC0mB,yBAAyB,GAAGthB,KAAK;MACtC,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAoO,yBAAyBtH,QAAmB,EAA+B;MACzE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAqB;MAE5C,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAinB,YAAA,GAAA1nB,0BAAA,CACiBkG,QAAQ;QAAAyhB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAA/mB,CAAA,MAAAgnB,QAAA,GAAAD,YAAA,CAAA9mB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAqhB,QAAA,CAAA3pB,KAAA;UACrB,IAAMuI,WAAW,GAAGwJ,oBAAoB,CAACzJ,YAAY,CAAC;UAEtD,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAwmB,YAAA,CAAA5nB,CAAA,CAAAoB,GAAA;MAAA;QAAAwmB,YAAA,CAAA3mB,CAAA;MAAA;MAED,IAAI,CAACwL,SAAS,GAAGpG,KAAK;MACtB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAA4pB,mCAAmC9iB,QAAmB,EAA+B;MACnF,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAonB,YAAA,GAAA7nB,0BAAA,CACiBkG,QAAQ;QAAA4hB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAlnB,CAAA,MAAAmnB,QAAA,GAAAD,YAAA,CAAAjnB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAwhB,QAAA,CAAA9pB,KAAA;UACrB,IAAMuI,WAAW,GAAG6e,8BAA8B,CAAC9e,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA2mB,YAAA,CAAA/nB,CAAA,CAAAoB,GAAA;MAAA;QAAA2mB,YAAA,CAAA9mB,CAAA;MAAA;MAED,IAAI,CAACgnB,mBAAmB,GAAG5hB,KAAK;MAChC,OAAO,IAAI;IACb;EAAC;EAAA,OAAAkhB,oBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASW,uBAAuBA,CACrCljB,QAAmB,EAC2C;EAC9D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIkgB,oBAAoB,EAAE;EAEzC,KAAK,IAAMjqB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG4gB,0BAA0B,CAACnrB,GAAG,CAACM,GAAG,CAAC;;IAExD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,OAAO,IAAItJ,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACgsB,WAAW,CACtB/gB,MAAM,CAACsgB,yBAAyB,EAChCtgB,MAAM,CAACoF,SAAS,EAChBpF,MAAM,CAAC4gB,mBAAmB,CAC3B,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,oCAAoCA,CAClDrjB,QAAmB,EACyD;EAC5E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMU,SAAS,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACvC,IAAIU,SAAS,KAAKtC,SAAS,EAAE;IAC3B,OAAOyB,uBAAuB,CAC5B,+CAA+C,CAChD;EACH;EAEA,IAAI,OAAOa,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOb,uBAAuB,6DAAAb,MAAA,CAAAnH,OAAA,CACuC6I,SAAS,GAC7E;EACH;EAEA,IAAMC,QAAQ,GAAG2iB,iDAAiD,CAACtrB,GAAG,CAAC0I,SAAS,CAAC;EACjF,IAAIC,QAAQ,KAAKvC,SAAS,EAAE;IAC1B,OAAOyB,uBAAuB,yDAAAb,MAAA,CAC4B0B,SAAS,EAClE;EACH;EAEA,OAAOC,QAAQ,CAACX,QAAQ,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AAHA,IAIMujB,kCAAkC;EAAA,SAAAA,mCAAA;IAAAhlB,eAAA,OAAAglB,kCAAA;IAAArmB,eAAA,mCACgC,IAAI;IAAAA,eAAA,4BAE3B,IAAI;EAAA;EAAAO,YAAA,CAAA8lB,kCAAA;IAAAjrB,GAAA;IAAAY,KAAA;IAEnD;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAsqB,wCACExjB,QAAmB,EACU;MAC7B,IAAMgB,aAAa,GAAGqiB,oCAAoC,CAACrjB,QAAQ,CAAC;MACpE,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACkjB,wBAAwB,GAAGziB,aAAa,CAACR,SAAS,EAAE;QACzD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAwqB,iCAAiC1jB,QAAmB,EAA+B;MACjF,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACojB,iBAAiB,GAAG3iB,aAAa,CAACR,SAAS,EAAE;QAClD,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA+iB,kCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS5f,qCAAqCA,CACnD3D,QAAmB,EACyD;EAC5E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIkhB,kCAAkC,EAAE;EAEvD,KAAK,IAAMjrB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGqhB,0CAA0C,CAAC5rB,GAAG,CAACM,GAAG,CAAC;;IAExE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAACohB,wBAAwB,KAAK,IAAI,EAAE;IAC5C,OAAO5jB,uBAAuB,CAC5B,6DAA6D,CAC9D;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACysB,yBAAyB,CACpCxhB,MAAM,CAACohB,wBAAwB,EAC/BphB,MAAM,CAACshB,iBAAiB,CACzB,EACD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,4BAA4BA,CAC1C9jB,QAAmB,EACgD;EACnE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,gCAAAb,MAAA,CAAAnH,OAAA,CACUmI,QAAQ,GAC/C;EACH;EAEA,IAAMiD,OAAO,GAAG5L,kBAAkB,CAAC0sB,0BAA0B,CAAC/jB,QAAQ,CAAC;EACvE,IAAIiD,OAAO,KAAK,IAAI,EAAE;IACpB,OAAOpD,uBAAuB,CAC5B,uCAAuC,qCAAAb,MAAA,CACHgB,QAAQ,CAAE,CAC/C;EACH;EAEA,OAAO,IAAI/I,SAAS,CAAC6I,MAAM,CACzBmD,OAAO,EACP,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM+gB,kBAAkB;EAAA,SAAAA,mBAAA;IAAAzlB,eAAA,OAAAylB,kBAAA;IAAA9mB,eAAA,cACA,IAAI;IAAAA,eAAA,cAEJ,IAAI;IAAAA,eAAA,cAEJ,IAAI;IAAAA,eAAA,cAEJ,IAAI;EAAA;EAAAO,YAAA,CAAAumB,kBAAA;IAAA1rB,GAAA;IAAAY,KAAA;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAwZ,mBAAmB1S,QAAmB,EAA+B;MACnE,IAAMgB,aAAa,GAAGjB,mBAAmB,CAACC,QAAQ,CAAC;MACnD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACoS,GAAG,GAAG3R,aAAa,CAACR,SAAS,EAAE;QACpC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+qB,mBAAmBjkB,QAAmB,EAA+B;MACnE,IAAMgB,aAAa,GAAGjB,mBAAmB,CAACC,QAAQ,CAAC;MACnD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2jB,GAAG,GAAGljB,aAAa,CAACR,SAAS,EAAE;QACpC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAirB,mBAAmBnkB,QAAmB,EAA+B;MACnE,IAAMgB,aAAa,GAAGjB,mBAAmB,CAACC,QAAQ,CAAC;MACnD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC6jB,GAAG,GAAGpjB,aAAa,CAACR,SAAS,EAAE;QACpC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA0Z,mBAAmB5S,QAAmB,EAA+B;MACnE,IAAMgB,aAAa,GAAGjB,mBAAmB,CAACC,QAAQ,CAAC;MACnD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACsS,GAAG,GAAG7R,aAAa,CAACR,SAAS,EAAE;QACpC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAwjB,kBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,qBAAqBA,CACnCrkB,QAAmB,EACyC;EAC5D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI2hB,kBAAkB,EAAE;EAEvC,KAAK,IAAM1rB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG+hB,yBAAyB,CAACtsB,GAAG,CAACM,GAAG,CAAC;;IAEvD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACsQ,GAAG,KAAK,IAAI,EAAE;IACvB,OAAO9S,uBAAuB,CAC5B,wCAAwC,CACzC;EACH;EAEA,IAAIwC,MAAM,CAAC6hB,GAAG,KAAK,IAAI,EAAE;IACvB,OAAOrkB,uBAAuB,CAC5B,wCAAwC,CACzC;EACH;EAEA,IAAIwC,MAAM,CAAC+hB,GAAG,KAAK,IAAI,EAAE;IACvB,OAAOvkB,uBAAuB,CAC5B,wCAAwC,CACzC;EACH;EAEA,IAAIwC,MAAM,CAACwQ,GAAG,KAAK,IAAI,EAAE;IACvB,OAAOhT,uBAAuB,CAC5B,wCAAwC,CACzC;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACmtB,SAAS,CAACliB,MAAM,CAACsQ,GAAG,EAAEtQ,MAAM,CAAC6hB,GAAG,EAAE7hB,MAAM,CAAC+hB,GAAG,EAAE/hB,MAAM,CAACwQ,GAAG,CAAC,EACtE,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIM2R,2BAA2B;EAAA,SAAAA,4BAAA;IAAAjmB,eAAA,OAAAimB,2BAAA;IAAAtnB,eAAA,gBACR,IAAI;IAAAA,eAAA,kBAEU,IAAI;EAAA;EAAAO,YAAA,CAAA+mB,2BAAA;IAAAlsB,GAAA;IAAAY,KAAA;IAEzC;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiM,uBAAuBnF,QAAmB,EAA+B;MACvE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC6E,OAAO,GAAGpE,aAAa,CAACR,SAAS,EAAE;QACxC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAgkB,2BAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,8BAA8BA,CAC5CzkB,QAAmB,EACkD;EACrE,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAImiB,2BAA2B,EAAE;EAEhD,KAAK,IAAMlsB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGmiB,mCAAmC,CAAC1sB,GAAG,CAACM,GAAG,CAAC;;IAEjE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAACnJ,KAAK,KAAK,IAAI,EAAE;IACzB,OAAO2G,uBAAuB,CAC5B,0CAA0C,CAC3C;EACH;EAEA,IAAIwC,MAAM,CAAC+C,OAAO,KAAK,IAAI,EAAE;IAC3B,OAAOvF,uBAAuB,CAC5B,4CAA4C,CAC7C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAACutB,kBAAkB,CAACtiB,MAAM,CAACnJ,KAAK,EAAEmJ,MAAM,CAAC+C,OAAO,CAAC,EAC7D,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMwf,kBAAkB;EAAA,SAAAA,mBAAA;IAAArmB,eAAA,OAAAqmB,kBAAA;IAAA1nB,eAAA,8BAC2C,IAAI;EAAA;EAAAO,YAAA,CAAAmnB,kBAAA;IAAAtsB,GAAA;IAAAY,KAAA;IAErE;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA2rB,mCAAmC7kB,QAAmB,EAA+B;MACnF,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA+B;MAEtD,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAmpB,YAAA,GAAA5pB,0BAAA,CACiBkG,QAAQ;QAAA2jB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAjpB,CAAA,MAAAkpB,QAAA,GAAAD,YAAA,CAAAhpB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAAujB,QAAA,CAAA7rB,KAAA;UACrB,IAAMuI,WAAW,GAAGgjB,8BAA8B,CAACjjB,YAAY,CAAC;UAEhE,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA0oB,YAAA,CAAA9pB,CAAA,CAAAoB,GAAA;MAAA;QAAA0oB,YAAA,CAAA7oB,CAAA;MAAA;MAED,IAAI,CAAC+oB,mBAAmB,GAAG3jB,KAAK;MAChC,OAAO,IAAI;IACb;EAAC;EAAA,OAAAujB,kBAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASK,qBAAqBA,CACnCjlB,QAAmB,EACyC;EAC5D,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIuiB,kBAAkB,EAAE;EAEvC,KAAK,IAAMtsB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAG2iB,yBAAyB,CAACltB,GAAG,CAACM,GAAG,CAAC;;IAEvD;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CACzB,IAAI,EACJS,KAAK,CACN;IACH;EACF;EAEA,IAAI8B,MAAM,CAAC2iB,mBAAmB,KAAK,IAAI,EAAE;IACvC,OAAOnlB,uBAAuB,CAC5B,wDAAwD,CACzD;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC+tB,SAAS,CAAC9iB,MAAM,CAAC2iB,mBAAmB,CAAC,EAClD,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMI,4CAA4C;EAAA,SAAAA,6CAAA;IAAA7mB,eAAA,OAAA6mB,4CAAA;IAAAloB,eAAA,mBACtB,IAAI;IAAAA,eAAA,eAER,IAAI;EAAA;EAAAO,YAAA,CAAA2nB,4CAAA;IAAA9sB,GAAA;IAAAY,KAAA;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4oB,wBAAwB9hB,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwhB,QAAQ,GAAG/gB,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8oB,oBAAoBhiB,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0hB,IAAI,GAAGjhB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAA4kB,4CAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,+CAA+CA,CAC7DrlB,QAAmB,EAInB;EACA,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI+iB,4CAA4C,EAAE;EAEjE,KAAK,IAAM9sB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAChB+iB,wDAAwD,CAACttB,GAAG,CAACM,GAAG,CAAC;;IAEnE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAAC0f,QAAQ,KAAK,IAAI,EAAE;IAC5B,OAAOliB,uBAAuB,CAC5B,6CAA6C,CAC9C;EACH;EAEA,IAAIwC,MAAM,CAAC4f,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOpiB,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CAIzB,IAAI1I,QAAQ,CAACmuB,mCAAmC,CAACljB,MAAM,CAAC0f,QAAQ,EAAE1f,MAAM,CAAC4f,IAAI,CAAC,EAC9E,IAAI,CACL;AACH;;AAEA;AACA;AACA;AACA;AAHA,IAIMuD,wCAAwC;EAAA,SAAAA,yCAAA;IAAAjnB,eAAA,OAAAinB,wCAAA;IAAAtoB,eAAA,mBAClB,IAAI;IAAAA,eAAA,eAER,IAAI;EAAA;EAAAO,YAAA,CAAA+nB,wCAAA;IAAAltB,GAAA;IAAAY,KAAA;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4oB,wBAAwB9hB,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwhB,QAAQ,GAAG/gB,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8oB,oBAAoBhiB,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0hB,IAAI,GAAGjhB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAglB,wCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,2CAA2CA,CACzDzlB,QAAmB,EAC+D;EAClF,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAImjB,wCAAwC,EAAE;EAE7D,KAAK,IAAMltB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGmjB,oDAAoD,CAAC1tB,GAAG,CAACM,GAAG,CAAC;;IAElF;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAAC0f,QAAQ,KAAK,IAAI,EAAE;IAC5B,OAAOliB,uBAAuB,CAC5B,6CAA6C,CAC9C;EACH;EAEA,IAAIwC,MAAM,CAAC4f,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOpiB,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CAGzB,IAAI1I,QAAQ,CAACuuB,+BAA+B,CAACtjB,MAAM,CAAC0f,QAAQ,EAAE1f,MAAM,CAAC4f,IAAI,CAAC,EAAE,IAAI,CAAC;AACrF;;AAEA;AACA;AACA;AACA;AAHA,IAIM2D,yCAAyC;EAAA,SAAAA,0CAAA;IAAArnB,eAAA,OAAAqnB,yCAAA;IAAA1oB,eAAA,mBACnB,IAAI;IAAAA,eAAA,eAER,IAAI;EAAA;EAAAO,YAAA,CAAAmoB,yCAAA;IAAAttB,GAAA;IAAAY,KAAA;IAE1B;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4oB,wBAAwB9hB,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACwhB,QAAQ,GAAG/gB,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA8oB,oBAAoBhiB,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC0hB,IAAI,GAAGjhB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAolB,yCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,4CAA4CA,CAC1D7lB,QAAmB,EACgE;EACnF,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAIujB,yCAAyC,EAAE;EAE9D,KAAK,IAAMttB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGujB,oDAAoD,CAAC9tB,GAAG,CAACM,GAAG,CAAC;;IAElF;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAAC0f,QAAQ,KAAK,IAAI,EAAE;IAC5B,OAAOliB,uBAAuB,CAC5B,6CAA6C,CAC9C;EACH;EAEA,IAAIwC,MAAM,CAAC4f,IAAI,KAAK,IAAI,EAAE;IACxB,OAAOpiB,uBAAuB,CAC5B,yCAAyC,CAC1C;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CAGzB,IAAI1I,QAAQ,CAAC2uB,gCAAgC,CAAC1jB,MAAM,CAAC0f,QAAQ,EAAE1f,MAAM,CAAC4f,IAAI,CAAC,EAAE,IAAI,CAAC;AACtF;;AAEA;AACA;AACA;AACA;AAHA,IAIM+D,kCAAkC;EAAA,SAAAA,mCAAA;IAAAznB,eAAA,OAAAynB,kCAAA;IAAA9oB,eAAA,wBACsC,IAAI;IAAAA,eAAA,oBAEZ,IAAI;IAAAA,eAAA,eAElD,IAAI;IAAAA,eAAA,iBAEU,IAAI;IAAAA,eAAA,6BAEJ,IAAI;IAAAA,eAAA,iBAEhB,IAAI;IAAAA,eAAA,mBAEiB,IAAI;IAAAA,eAAA,qBAEqB,IAAI;IAAAA,eAAA,sBAE7C,IAAI;IAAAA,eAAA,oBAEM,IAAI;IAAAA,eAAA,gBAEpB,IAAI;IAAAA,eAAA,oBAEY,IAAI;EAAA;EAAAO,YAAA,CAAAuoB,kCAAA;IAAA1tB,GAAA;IAAAY,KAAA;IAE3C;AACF;AACA;AACA;AACA;AACA;IACE;IACA,SAAA4H,OAAOd,QAAmB,EAA+B;MACvD;MACA,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA+sB,6BAA6BjmB,QAAmB,EAA+B;MAC7E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAAgD;MAEvE,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAuqB,YAAA,GAAAhrB,0BAAA,CACiBkG,QAAQ;QAAA+kB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAArqB,CAAA,MAAAsqB,QAAA,GAAAD,YAAA,CAAApqB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA2kB,QAAA,CAAAjtB,KAAA;UACrB,IAAMuI,WAAW,GAAG4jB,+CAA+C,CAAC7jB,YAAY,CAAC;UAEjF,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAA8pB,YAAA,CAAAlrB,CAAA,CAAAoB,GAAA;MAAA;QAAA8pB,YAAA,CAAAjqB,CAAA;MAAA;MAED,IAAI,CAACmqB,aAAa,GAAG/kB,KAAK;MAC1B,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAmtB,yBAAyBrmB,QAAmB,EAA+B;MACzE,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA4C;MAEnE,IAAII,CAAC,GAAG,CAAC;MAAC,IAAA2qB,YAAA,GAAAprB,0BAAA,CACiBkG,QAAQ;QAAAmlB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAzqB,CAAA,MAAA0qB,QAAA,GAAAD,YAAA,CAAAxqB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA+kB,QAAA,CAAArtB,KAAA;UACrB,IAAMuI,WAAW,GAAGgkB,2CAA2C,CAACjkB,YAAY,CAAC;UAE7E,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAkqB,YAAA,CAAAtrB,CAAA,CAAAoB,GAAA;MAAA;QAAAkqB,YAAA,CAAArqB,CAAA;MAAA;MAED,IAAI,CAACuqB,SAAS,GAAGnlB,KAAK;MACtB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAutB,oBAAoBzmB,QAAmB,EAA+B;MACpE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACmmB,IAAI,GAAG1lB,aAAa,CAACR,SAAS,EAAE;QACrC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAytB,sBAAsB3mB,QAAmB,EAA+B;MACtE,IAAMgB,aAAa,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACqmB,MAAM,GAAG5lB,aAAa,CAACR,SAAS,EAAE;QACvC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA2tB,kCAAkC7mB,QAAmB,EAA+B;MAClF,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACumB,kBAAkB,GAAG9lB,aAAa,CAACR,SAAS,EAAE;QACnD,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6tB,sBAAsB/mB,QAAmB,EAA+B;MACtE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACymB,MAAM,GAAGhmB,aAAa,CAACR,SAAS,EAAE;QACvC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA+tB,wBAAwBjnB,QAAmB,EAA+B;MACxE,IAAMgB,aAAa,GAAG8iB,4BAA4B,CAAC9jB,QAAQ,CAAC;MAC5D,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAAC2mB,QAAQ,GAAGlmB,aAAa,CAACR,SAAS,EAAE;QACzC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAiuB,0BAA0BnnB,QAAmB,EAA+B;MAC1E,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACrB,OAAO,IAAIN,oBAAoB,CAAC,oCAAoC,CAAC;MACvE;MACA,IAAI7H,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;QAChC,OAAO,IAAIN,oBAAoB,mCAAAV,MAAA,CAAAnH,OAAA,CACYmI,QAAQ,GAClD;MACH;MACA,IAAI,OAAOA,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU,EAAE;QACnD,OAAO,IAAIoE,oBAAoB,CAC7B,+CAA+C,gCAAAV,MAAA,CAAAnH,OAAA,CACTmI,QAAQ,CAAC3E,MAAM,CAACC,QAAQ,CAAC,EAAE,CAClE;MACH;MAEA,IAAM8F,QAAQ,GAAwBpB,QAAQ;MAE9C,IAAMqB,KAAK,GAAG,IAAI9F,KAAK,EAA6C;MAEpE,IAAII,CAAC,GAAG,CAAC;MAAC,IAAAyrB,YAAA,GAAAlsB,0BAAA,CACiBkG,QAAQ;QAAAimB,QAAA;MAAA;QAAnC,KAAAD,YAAA,CAAAvrB,CAAA,MAAAwrB,QAAA,GAAAD,YAAA,CAAAtrB,CAAA,IAAAC,IAAA,GAAqC;UAAA,IAA1ByF,YAAY,GAAA6lB,QAAA,CAAAnuB,KAAA;UACrB,IAAMuI,WAAW,GAAGokB,4CAA4C,CAACrkB,YAAY,CAAC;UAE9E,IAAIC,WAAW,CAAClB,KAAK,KAAK,IAAI,EAAE;YAC9BkB,WAAW,CAAClB,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIT,YAAY,CAACyC,QAAQ,EAAEzF,CAAC,CAAC,CAAC;YAC7D,OAAO8F,WAAW,CAAClB,KAAK;UAC1B;UAEAc,KAAK,CAAC7B,IAAI,CAACiC,WAAW,CAACjB,SAAS,EAAE,CAAC;UACnC7E,CAAC,EAAE;QACL;MAAC,SAAAS,GAAA;QAAAgrB,YAAA,CAAApsB,CAAA,CAAAoB,GAAA;MAAA;QAAAgrB,YAAA,CAAAnrB,CAAA;MAAA;MAED,IAAI,CAACqrB,UAAU,GAAGjmB,KAAK;MACvB,OAAO,IAAI;IACb;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/I,GAAA;IAAAY,KAAA,EAMA,SAAAquB,2BAA2BvnB,QAAmB,EAA+B;MAC3E,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACinB,WAAW,GAAGxmB,aAAa,CAACR,SAAS,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAuuB,yBAAyBznB,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGikB,qBAAqB,CAACjlB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACmnB,SAAS,GAAG1mB,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAA6I,qBAAqB/B,QAAmB,EAA+B;MACrE,IAAMgB,aAAa,GAAGb,kBAAkB,CAACH,QAAQ,CAAC;MAClD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACrH,KAAK,GAAG8H,aAAa,CAACR,SAAS,EAAE;QACtC,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAlI,GAAA;IAAAY,KAAA,EAMA,SAAAyuB,yBAAyB3nB,QAAmB,EAA+B;MACzE,IAAMgB,aAAa,GAAGqjB,qBAAqB,CAACrkB,QAAQ,CAAC;MACrD,IAAIgB,aAAa,CAACT,KAAK,KAAK,IAAI,EAAE;QAChC,OAAOS,aAAa,CAACT,KAAK;MAC5B,CAAC,MAAM;QACL,IAAI,CAACqnB,SAAS,GAAG5mB,aAAa,CAACR,SAAS,EAAE;QAC1C,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAwlB,kCAAA;AAAA;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6B,qCAAqCA,CACnD7nB,QAAmB,EACyD;EAC5E,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOH,uBAAuB,CAC5B,sCAAsC,CACvC;EACH;EACA,IAAItE,KAAK,CAACC,OAAO,CAACwE,QAAQ,CAAC,EAAE;IAC3B,OAAOH,uBAAuB,CAC5B,8CAA8C,CAC/C;EACH;EACA,IAAIhI,OAAA,CAAOmI,QAAQ,MAAK,QAAQ,EAAE;IAChC,OAAOH,uBAAuB,qCAAAb,MAAA,CAAAnH,OAAA,CACemI,QAAQ,GACpD;EACH;EAEA,IAAMqC,MAAM,GAAG,IAAI2jB,kCAAkC,EAAE;EAEvD,KAAK,IAAM1tB,GAAG,IAAI0H,QAAQ,EAAE;IAC1B,IAAMsC,aAAa,GAAGtC,QAAQ,CAAC1H,GAAG,CAAC;IACnC,IAAMiK,YAAY,GAAGulB,2CAA2C,CAAC9vB,GAAG,CAACM,GAAG,CAAC;;IAEzE;IACA;IACA;IACA;IACA,IAAIiK,YAAY,KAAKnE,SAAS,EAAE;MAC9B;IACF;IAEA,IAAMmC,KAAK,GAAGgC,YAAY,CAAC9J,IAAI,CAAC4J,MAAM,EAAEC,aAAa,CAAC;IACtD,IAAI/B,KAAK,KAAK,IAAI,EAAE;MAClBA,KAAK,CAACX,IAAI,CAACR,OAAO,CAAC,IAAIX,eAAe,CAAauB,QAAQ,EAAE1H,GAAG,CAAC,CAAC;MAClE,OAAO,IAAIrB,SAAS,CAAC6I,MAAM,CAGzB,IAAI,EAAES,KAAK,CAAC;IAChB;EACF;EAEA,IAAI8B,MAAM,CAAC+jB,aAAa,KAAK,IAAI,EAAE;IACjC,OAAOvmB,uBAAuB,CAC5B,kDAAkD,CACnD;EACH;EAEA,OAAO,IAAI5I,SAAS,CAAC6I,MAAM,CACzB,IAAI1I,QAAQ,CAAC2wB,yBAAyB,CACpC1lB,MAAM,CAAC+jB,aAAa,EACpB/jB,MAAM,CAACmkB,SAAS,EAChBnkB,MAAM,CAACqkB,IAAI,EACXrkB,MAAM,CAACukB,MAAM,EACbvkB,MAAM,CAACykB,kBAAkB,EACzBzkB,MAAM,CAAC2kB,MAAM,EACb3kB,MAAM,CAAC6kB,QAAQ,EACf7kB,MAAM,CAACilB,UAAU,EACjBjlB,MAAM,CAACmlB,WAAW,EAClBnlB,MAAM,CAACqlB,SAAS,EAChBrlB,MAAM,CAACnJ,KAAK,EACZmJ,MAAM,CAACulB,SAAS,CACjB,EACD,IAAI,CACL;AACH;AAEA,IAAMhnB,oCAAoC,GAAG,IAAIonB,GAAG,CAGlD,CACA,CAAC,qBAAqB,EAAExb,8CAA8C,CAAC,EACvE,CAAC,8BAA8B,EAAE0K,wCAAwC,CAAC,EAC1E,CAAC,mBAAmB,EAAEoF,6BAA6B,CAAC,EACpD,CAAC,MAAM,EAAExH,gBAAgB,CAAC,EAC1B,CAAC,YAAY,EAAEwK,sBAAsB,CAAC,EACtC,CAAC,QAAQ,EAAE3G,kBAAkB,CAAC,EAC9B,CAAC,WAAW,EAAEvW,qBAAqB,CAAC,EACpC,CAAC,MAAM,EAAE0T,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,WAAW,EAAEyM,qBAAqB,CAAC,EACpC,CAAC,UAAU,EAAE3N,oBAAoB,CAAC,EAClC,CAAC,WAAW,EAAEnL,qBAAqB,CAAC,EACpC,CAAC,OAAO,EAAEyN,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,EAClD,CAAC,iBAAiB,EAAExL,2BAA2B,CAAC,EAChD,CAAC,UAAU,EAAE2C,oBAAoB,CAAC,EAClC,CAAC,2BAA2B,EAAEqE,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAElB,+BAA+B,CAAC,CACzD,CAAC;AAEF,IAAM5L,wBAAwB,GAAG,IAAIwlB,GAAG,CAGtC,CACA,CAAC,YAAY,EAAEnnB,kBAAkB,CAACtI,SAAS,CAACwI,yBAAyB,CAAC,EACtE,CACE,yBAAyB,EACzBF,kBAAkB,CAACtI,SAAS,CAAC4I,sCAAsC,CACpE,EACD,CAAC,MAAM,EAAEN,kBAAkB,CAACtI,SAAS,CAACoJ,mBAAmB,CAAC,EAC1D,CAAC,WAAW,EAAEd,kBAAkB,CAACtI,SAAS,CAACqJ,wBAAwB,CAAC,EACpE,CAAC,OAAO,EAAEf,kBAAkB,CAACtI,SAAS,CAACwJ,oBAAoB,CAAC,EAC5D,CAAC,UAAU,EAAElB,kBAAkB,CAACtI,SAAS,CAACyJ,uBAAuB,CAAC,EAClE,CAAC,WAAW,EAAEnB,kBAAkB,CAACtI,SAAS,CAACuI,MAAM,CAAC,CACnD,CAAC;AAEF,IAAM6B,qCAAqC,GAAG,IAAIqlB,GAAG,CAGnD,CACA,CAAC,qBAAqB,EAAExb,8CAA8C,CAAC,EACvE,CAAC,8BAA8B,EAAE0K,wCAAwC,CAAC,EAC1E,CAAC,0BAA0B,EAAExP,oCAAoC,CAAC,EAClE,CAAC,mBAAmB,EAAE4U,6BAA6B,CAAC,EACpD,CAAC,MAAM,EAAExH,gBAAgB,CAAC,EAC1B,CAAC,YAAY,EAAEwK,sBAAsB,CAAC,EACtC,CAAC,oBAAoB,EAAEgB,8BAA8B,CAAC,EACtD,CAAC,QAAQ,EAAE3H,kBAAkB,CAAC,EAC9B,CAAC,MAAM,EAAE7C,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,WAAW,EAAEyM,qBAAqB,CAAC,EACpC,CAAC,UAAU,EAAE3N,oBAAoB,CAAC,EAClC,CAAC,OAAO,EAAEsC,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,EAClD,CAAC,UAAU,EAAE7I,oBAAoB,CAAC,EAClC,CAAC,2BAA2B,EAAEqE,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAElB,+BAA+B,CAAC,CACzD,CAAC;AAEF,IAAMvL,gCAAgC,GAAG,IAAImlB,GAAG,CAG9C,CACA,CAAC,qBAAqB,EAAExb,8CAA8C,CAAC,EACvE,CAAC,8BAA8B,EAAE0K,wCAAwC,CAAC,EAC1E,CAAC,0BAA0B,EAAExP,oCAAoC,CAAC,EAClE,CAAC,mBAAmB,EAAE4U,6BAA6B,CAAC,EACpD,CAAC,MAAM,EAAExH,gBAAgB,CAAC,EAC1B,CAAC,YAAY,EAAEwK,sBAAsB,CAAC,EACtC,CAAC,oBAAoB,EAAEgB,8BAA8B,CAAC,EACtD,CAAC,QAAQ,EAAE3H,kBAAkB,CAAC,EAC9B,CAAC,MAAM,EAAE7C,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,WAAW,EAAEyM,qBAAqB,CAAC,EACpC,CAAC,UAAU,EAAE3N,oBAAoB,CAAC,EAClC,CAAC,OAAO,EAAEsC,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,EAClD,CAAC,UAAU,EAAE7I,oBAAoB,CAAC,EAClC,CAAC,2BAA2B,EAAEqE,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAElB,+BAA+B,CAAC,CACzD,CAAC;AAEF,IAAMrL,mCAAmC,GAAG,IAAIilB,GAAG,CAGjD,CACA,CAAC,0BAA0B,EAAEtgB,oCAAoC,CAAC,EAClE,CAAC,oBAAoB,EAAE4Y,8BAA8B,CAAC,EACtD,CAAC,UAAU,EAAErV,oBAAoB,CAAC,CACnC,CAAC;AAEF,IAAM7H,+BAA+B,GAAG,IAAI4kB,GAAG,CAG7C,CAAC,CAAC,UAAU,EAAE/c,oBAAoB,CAAC,CAAC,CAAC;AAEvC,IAAM3H,6CAA6C,GAAG,IAAI0kB,GAAG,CAG3D,CACA,CAAC,2BAA2B,EAAE3jB,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAEmI,8CAA8C,CAAC,EACvE,CAAC,8BAA8B,EAAE0K,wCAAwC,CAAC,EAC1E,CAAC,0BAA0B,EAAExP,oCAAoC,CAAC,EAClE,CAAC,mBAAmB,EAAE4U,6BAA6B,CAAC,EACpD,CAAC,MAAM,EAAExH,gBAAgB,CAAC,EAC1B,CAAC,YAAY,EAAEwK,sBAAsB,CAAC,EACtC,CAAC,oBAAoB,EAAEgB,8BAA8B,CAAC,EACtD,CAAC,QAAQ,EAAE3H,kBAAkB,CAAC,EAC9B,CAAC,MAAM,EAAE7C,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,WAAW,EAAEyM,qBAAqB,CAAC,EACpC,CAAC,UAAU,EAAE3N,oBAAoB,CAAC,EAClC,CAAC,OAAO,EAAEsC,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,EAClD,CAAC,UAAU,EAAE7I,oBAAoB,CAAC,EAClC,CAAC,2BAA2B,EAAEqE,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAElB,+BAA+B,CAAC,CACzD,CAAC;AAEF,IAAM9J,yCAAyC,GAAG,IAAI0jB,GAAG,CAGvD,CACA,CACE,4BAA4B,EAC5BzkB,kCAAkC,CAAChL,SAAS,CACzCiL,yCAAyC,CAC7C,EACD,CAAC,SAAS,EAAED,kCAAkC,CAAChL,SAAS,CAACsL,sBAAsB,CAAC,EAChF,CAAC,UAAU,EAAEN,kCAAkC,CAAChL,SAAS,CAACwL,uBAAuB,CAAC,EAClF,CAAC,SAAS,EAAER,kCAAkC,CAAChL,SAAS,CAAC0L,sBAAsB,CAAC,EAChF,CACE,YAAY,EACZV,kCAAkC,CAAChL,SAAS,CAAC4L,yBAAyB,CACvE,EACD,CAAC,WAAW,EAAEZ,kCAAkC,CAAChL,SAAS,CAACuI,MAAM,CAAC,CACnE,CAAC;AAEF,IAAM2D,kCAAkC,GAAG,IAAIujB,GAAG,CAGhD,CACA,CAAC,qBAAqB,EAAExb,8CAA8C,CAAC,EACvE,CAAC,8BAA8B,EAAE0K,wCAAwC,CAAC,EAC1E,CAAC,mBAAmB,EAAEoF,6BAA6B,CAAC,EACpD,CAAC,MAAM,EAAExH,gBAAgB,CAAC,EAC1B,CAAC,YAAY,EAAEwK,sBAAsB,CAAC,EACtC,CAAC,QAAQ,EAAE3G,kBAAkB,CAAC,EAC9B,CAAC,MAAM,EAAE7C,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,WAAW,EAAEyM,qBAAqB,CAAC,EACpC,CAAC,UAAU,EAAE3N,oBAAoB,CAAC,EAClC,CAAC,OAAO,EAAEsC,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,EAClD,CAAC,UAAU,EAAE7I,oBAAoB,CAAC,EAClC,CAAC,2BAA2B,EAAEqE,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAElB,+BAA+B,CAAC,CACzD,CAAC;AAEF,IAAM9I,wBAAwB,GAAG,IAAI0iB,GAAG,CAGtC,CACA,CAAC,YAAY,EAAEpjB,kBAAkB,CAACrM,SAAS,CAACwI,yBAAyB,CAAC,EACtE,CACE,yBAAyB,EACzB6D,kBAAkB,CAACrM,SAAS,CAAC4I,sCAAsC,CACpE,EACD,CAAC,MAAM,EAAEyD,kBAAkB,CAACrM,SAAS,CAACwM,mBAAmB,CAAC,EAC1D,CAAC,MAAM,EAAEH,kBAAkB,CAACrM,SAAS,CAAC0M,mBAAmB,CAAC,EAC1D,CAAC,WAAW,EAAEL,kBAAkB,CAACrM,SAAS,CAACqJ,wBAAwB,CAAC,EACpE,CAAC,OAAO,EAAEgD,kBAAkB,CAACrM,SAAS,CAACwJ,oBAAoB,CAAC,EAC5D,CAAC,SAAS,EAAE6C,kBAAkB,CAACrM,SAAS,CAAC4M,sBAAsB,CAAC,EAChE,CAAC,WAAW,EAAEP,kBAAkB,CAACrM,SAAS,CAACuI,MAAM,CAAC,CACnD,CAAC;AAEF,IAAM6G,yCAAyC,GAAG,IAAIqgB,GAAG,CAGvD,CACA,CAAC,YAAY,EAAExiB,iCAAiC,CAACjN,SAAS,CAACkN,yBAAyB,CAAC,EACrF,CAAC,UAAU,EAAED,iCAAiC,CAACjN,SAAS,CAACsN,uBAAuB,CAAC,EACjF,CAAC,SAAS,EAAEL,iCAAiC,CAACjN,SAAS,CAACwN,sBAAsB,CAAC,EAC/E,CACE,aAAa,EACbP,iCAAiC,CAACjN,SAAS,CAAC0N,0BAA0B,CACvE,EACD,CACE,aAAa,EACbT,iCAAiC,CAACjN,SAAS,CAAC+N,0BAA0B,CACvE,EACD,CACE,gBAAgB,EAChBd,iCAAiC,CAACjN,SAAS,CAACoO,6BAA6B,CAC1E,EACD,CAAC,IAAI,EAAEnB,iCAAiC,CAACjN,SAAS,CAACsO,iBAAiB,CAAC,EACrE,CACE,4BAA4B,EAC5BrB,iCAAiC,CAACjN,SAAS,CACxCiL,yCAAyC,CAC7C,EACD,CACE,aAAa,EACbgC,iCAAiC,CAACjN,SAAS,CAAC0O,0BAA0B,CACvE,EACD,CACE,kBAAkB,EAClBzB,iCAAiC,CAACjN,SAAS,CAAC4O,+BAA+B,CAC5E,EACD,CAAC,WAAW,EAAE3B,iCAAiC,CAACjN,SAAS,CAAC+O,wBAAwB,CAAC,EACnF,CAAC,WAAW,EAAE9B,iCAAiC,CAACjN,SAAS,CAACuI,MAAM,CAAC,CAClE,CAAC;AAEF,IAAM+H,gCAAgC,GAAG,IAAImf,GAAG,CAG9C,CACA,CAAC,WAAW,EAAEngB,yBAAyB,CAACtP,SAAS,CAACuP,wBAAwB,CAAC,EAC3E,CAAC,eAAe,EAAED,yBAAyB,CAACtP,SAAS,CAAC0P,4BAA4B,CAAC,EACnF,CACE,kBAAkB,EAClBJ,yBAAyB,CAACtP,SAAS,CAAC4P,+BAA+B,CACpE,EACD,CAAC,WAAW,EAAEN,yBAAyB,CAACtP,SAAS,CAACiQ,wBAAwB,CAAC,EAC3E,CACE,kBAAkB,EAClBX,yBAAyB,CAACtP,SAAS,CAACmQ,+BAA+B,CACpE,EACD,CAAC,WAAW,EAAEb,yBAAyB,CAACtP,SAAS,CAACuI,MAAM,CAAC,CAC1D,CAAC;AAEF,IAAMqI,uBAAuB,GAAG,IAAI6e,GAAG,CAGrC,CACA,CAAC,MAAM,EAAEjf,iBAAiB,CAACxQ,SAAS,CAACyQ,mBAAmB,CAAC,EACzD,CAAC,aAAa,EAAED,iBAAiB,CAACxQ,SAAS,CAAC0Q,0BAA0B,CAAC,EACvE,CAAC,WAAW,EAAEF,iBAAiB,CAACxQ,SAAS,CAACuI,MAAM,CAAC,CAClD,CAAC;AAEF,IAAM6I,gCAAgC,GAAG,IAAIqe,GAAG,CAG9C,CACA,CAAC,YAAY,EAAE1e,wBAAwB,CAAC/Q,SAAS,CAACwI,yBAAyB,CAAC,EAC5E,CACE,yBAAyB,EACzBuI,wBAAwB,CAAC/Q,SAAS,CAAC4I,sCAAsC,CAC1E,EACD,CAAC,MAAM,EAAEmI,wBAAwB,CAAC/Q,SAAS,CAACoJ,mBAAmB,CAAC,EAChE,CAAC,OAAO,EAAE2H,wBAAwB,CAAC/Q,SAAS,CAACwJ,oBAAoB,CAAC,EAClE,CACE,mBAAmB,EACnBuH,wBAAwB,CAAC/Q,SAAS,CAACkR,gCAAgC,CACpE,EACD,CAAC,WAAW,EAAEH,wBAAwB,CAAC/Q,SAAS,CAACuI,MAAM,CAAC,CACzD,CAAC;AAEF,IAAMoK,uBAAuB,GAAG,IAAI8c,GAAG,CAGrC,CACA,CAAC,YAAY,EAAEne,iBAAiB,CAACtR,SAAS,CAACkN,yBAAyB,CAAC,EACrE,CAAC,UAAU,EAAEoE,iBAAiB,CAACtR,SAAS,CAACsN,uBAAuB,CAAC,EACjE,CAAC,SAAS,EAAEgE,iBAAiB,CAACtR,SAAS,CAACwN,sBAAsB,CAAC,EAC/D,CAAC,aAAa,EAAE8D,iBAAiB,CAACtR,SAAS,CAAC0N,0BAA0B,CAAC,EACvE,CAAC,aAAa,EAAE4D,iBAAiB,CAACtR,SAAS,CAAC+N,0BAA0B,CAAC,EACvE,CAAC,gBAAgB,EAAEuD,iBAAiB,CAACtR,SAAS,CAACoO,6BAA6B,CAAC,EAC7E,CAAC,IAAI,EAAEkD,iBAAiB,CAACtR,SAAS,CAACsO,iBAAiB,CAAC,EACrD,CAAC,MAAM,EAAEgD,iBAAiB,CAACtR,SAAS,CAACwM,mBAAmB,CAAC,EACzD,CAAC,YAAY,EAAE8E,iBAAiB,CAACtR,SAAS,CAACwI,yBAAyB,CAAC,EACrE,CACE,yBAAyB,EACzB8I,iBAAiB,CAACtR,SAAS,CAAC4I,sCAAsC,CACnE,EACD,CAAC,YAAY,EAAE0I,iBAAiB,CAACtR,SAAS,CAAC+R,yBAAyB,CAAC,EACrE,CACE,4BAA4B,EAC5BT,iBAAiB,CAACtR,SAAS,CAACiL,yCAAyC,CACtE,EACD,CAAC,kBAAkB,EAAEqG,iBAAiB,CAACtR,SAAS,CAACqS,+BAA+B,CAAC,EACjF,CAAC,WAAW,EAAEf,iBAAiB,CAACtR,SAAS,CAACuI,MAAM,CAAC,CAClD,CAAC;AAEF,IAAMsK,uCAAuC,GAAG,IAAI4c,GAAG,CAGrD,CACA,CAAC,qBAAqB,EAAExb,8CAA8C,CAAC,EACvE,CAAC,8BAA8B,EAAE0K,wCAAwC,CAAC,EAC1E,CAAC,mBAAmB,EAAEoF,6BAA6B,CAAC,EACpD,CAAC,MAAM,EAAExH,gBAAgB,CAAC,EAC1B,CAAC,YAAY,EAAEwK,sBAAsB,CAAC,EACtC,CAAC,QAAQ,EAAE3G,kBAAkB,CAAC,EAC9B,CAAC,MAAM,EAAE7C,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,WAAW,EAAEyM,qBAAqB,CAAC,EACpC,CAAC,UAAU,EAAE3N,oBAAoB,CAAC,EAClC,CAAC,OAAO,EAAEsC,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,EAClD,CAAC,2BAA2B,EAAExE,qCAAqC,CAAC,EACpE,CAAC,qBAAqB,EAAElB,+BAA+B,CAAC,CACzD,CAAC;AAEF,IAAM9C,2CAA2C,GAAG,IAAI0c,GAAG,CAGzD,CACA,CAAC,8BAA8B,EAAE9Q,wCAAwC,CAAC,EAC1E,CAAC,qBAAqB,EAAE1K,8CAA8C,CAAC,CACxE,CAAC;AAEF,IAAMC,mCAAmC,GAAG,IAAIub,GAAG,CAGjD,CACA,CAAC,YAAY,EAAEzc,4BAA4B,CAAChT,SAAS,CAACkN,yBAAyB,CAAC,EAChF,CAAC,UAAU,EAAE8F,4BAA4B,CAAChT,SAAS,CAACsN,uBAAuB,CAAC,EAC5E,CAAC,SAAS,EAAE0F,4BAA4B,CAAChT,SAAS,CAACwN,sBAAsB,CAAC,EAC1E,CAAC,aAAa,EAAEwF,4BAA4B,CAAChT,SAAS,CAAC0N,0BAA0B,CAAC,EAClF,CAAC,aAAa,EAAEsF,4BAA4B,CAAChT,SAAS,CAAC+N,0BAA0B,CAAC,EAClF,CAAC,YAAY,EAAEiF,4BAA4B,CAAChT,SAAS,CAACwI,yBAAyB,CAAC,EAChF,CACE,yBAAyB,EACzBwK,4BAA4B,CAAChT,SAAS,CAAC4I,sCAAsC,CAC9E,EACD,CAAC,YAAY,EAAEoK,4BAA4B,CAAChT,SAAS,CAAC+R,yBAAyB,CAAC,EAChF,CACE,4BAA4B,EAC5BiB,4BAA4B,CAAChT,SAAS,CAACiL,yCAAyC,CACjF,EACD,CAAC,OAAO,EAAE+H,4BAA4B,CAAChT,SAAS,CAAC6T,oBAAoB,CAAC,EACtE,CAAC,QAAQ,EAAEb,4BAA4B,CAAChT,SAAS,CAAC+T,qBAAqB,CAAC,EACxE,CAAC,WAAW,EAAEf,4BAA4B,CAAChT,SAAS,CAACuI,MAAM,CAAC,CAC7D,CAAC;AAEF,IAAMuN,oCAAoC,GAAG,IAAI2Z,GAAG,CAGlD,CACA,CAAC,YAAY,EAAEnb,4BAA4B,CAACtU,SAAS,CAACkN,yBAAyB,CAAC,EAChF,CAAC,UAAU,EAAEoH,4BAA4B,CAACtU,SAAS,CAACsN,uBAAuB,CAAC,EAC5E,CAAC,SAAS,EAAEgH,4BAA4B,CAACtU,SAAS,CAACwN,sBAAsB,CAAC,EAC1E,CAAC,aAAa,EAAE8G,4BAA4B,CAACtU,SAAS,CAAC0N,0BAA0B,CAAC,EAClF,CAAC,aAAa,EAAE4G,4BAA4B,CAACtU,SAAS,CAAC+N,0BAA0B,CAAC,EAClF,CAAC,YAAY,EAAEuG,4BAA4B,CAACtU,SAAS,CAACwI,yBAAyB,CAAC,EAChF,CACE,yBAAyB,EACzB8L,4BAA4B,CAACtU,SAAS,CAAC4I,sCAAsC,CAC9E,EACD,CAAC,YAAY,EAAE0L,4BAA4B,CAACtU,SAAS,CAAC+R,yBAAyB,CAAC,EAChF,CACE,4BAA4B,EAC5BuC,4BAA4B,CAACtU,SAAS,CAACiL,yCAAyC,CACjF,EACD,CACE,eAAe,EACfqJ,4BAA4B,CAACtU,SAAS,CAACmV,4BAA4B,CACpE,EACD,CACE,uBAAuB,EACvBb,4BAA4B,CAACtU,SAAS,CAACqV,oCAAoC,CAC5E,EACD,CACE,sBAAsB,EACtBf,4BAA4B,CAACtU,SAAS,CAACuV,mCAAmC,CAC3E,EACD,CACE,sBAAsB,EACtBjB,4BAA4B,CAACtU,SAAS,CAACyV,mCAAmC,CAC3E,EACD,CAAC,OAAO,EAAEnB,4BAA4B,CAACtU,SAAS,CAACwJ,oBAAoB,CAAC,EACtE,CAAC,WAAW,EAAE8K,4BAA4B,CAACtU,SAAS,CAACuI,MAAM,CAAC,CAC7D,CAAC;AAEF,IAAMyO,0CAA0C,GAAG,IAAIyY,GAAG,CAGxD,CACA,CACE,YAAY,EACZzZ,kCAAkC,CAAChW,SAAS,CAACkN,yBAAyB,CACvE,EACD,CAAC,UAAU,EAAE8I,kCAAkC,CAAChW,SAAS,CAACsN,uBAAuB,CAAC,EAClF,CAAC,SAAS,EAAE0I,kCAAkC,CAAChW,SAAS,CAACwN,sBAAsB,CAAC,EAChF,CACE,aAAa,EACbwI,kCAAkC,CAAChW,SAAS,CAAC0N,0BAA0B,CACxE,EACD,CACE,aAAa,EACbsI,kCAAkC,CAAChW,SAAS,CAAC+N,0BAA0B,CACxE,EACD,CACE,YAAY,EACZiI,kCAAkC,CAAChW,SAAS,CAACwI,yBAAyB,CACvE,EACD,CACE,yBAAyB,EACzBwN,kCAAkC,CAAChW,SAAS,CAAC4I,sCAAsC,CACpF,EACD,CACE,YAAY,EACZoN,kCAAkC,CAAChW,SAAS,CAAC+R,yBAAyB,CACvE,EACD,CACE,4BAA4B,EAC5BiE,kCAAkC,CAAChW,SAAS,CACzCiL,yCAAyC,CAC7C,EACD,CAAC,OAAO,EAAE+K,kCAAkC,CAAChW,SAAS,CAACwJ,oBAAoB,CAAC,EAC5E,CAAC,WAAW,EAAEwM,kCAAkC,CAAChW,SAAS,CAACuI,MAAM,CAAC,CACnE,CAAC;AAEF,IAAM4O,mCAAmC,GAAG,IAAIsY,GAAG,CAGjD,CACA,CAAC,MAAM,EAAElT,gBAAgB,CAAC,EAC1B,CAAC,MAAM,EAAEgB,gBAAgB,CAAC,EAC1B,CAAC,uBAAuB,EAAEpE,iCAAiC,CAAC,EAC5D,CAAC,UAAU,EAAElB,oBAAoB,CAAC,EAClC,CAAC,OAAO,EAAEsC,iBAAiB,CAAC,EAC5B,CAAC,kBAAkB,EAAEgB,4BAA4B,CAAC,CACnD,CAAC;AAEF,IAAMrD,uBAAuB,GAAG,IAAIuX,GAAG,CAGrC,CACA,CAAC,YAAY,EAAErY,iBAAiB,CAACpX,SAAS,CAACkN,yBAAyB,CAAC,EACrE,CAAC,UAAU,EAAEkK,iBAAiB,CAACpX,SAAS,CAACsN,uBAAuB,CAAC,EACjE,CAAC,SAAS,EAAE8J,iBAAiB,CAACpX,SAAS,CAACwN,sBAAsB,CAAC,EAC/D,CAAC,aAAa,EAAE4J,iBAAiB,CAACpX,SAAS,CAAC0N,0BAA0B,CAAC,EACvE,CAAC,aAAa,EAAE0J,iBAAiB,CAACpX,SAAS,CAAC+N,0BAA0B,CAAC,EACvE,CAAC,YAAY,EAAEqJ,iBAAiB,CAACpX,SAAS,CAACwI,yBAAyB,CAAC,EACrE,CACE,yBAAyB,EACzB4O,iBAAiB,CAACpX,SAAS,CAAC4I,sCAAsC,CACnE,EACD,CAAC,YAAY,EAAEwO,iBAAiB,CAACpX,SAAS,CAAC+R,yBAAyB,CAAC,EACrE,CACE,4BAA4B,EAC5BqF,iBAAiB,CAACpX,SAAS,CAACiL,yCAAyC,CACtE,EACD,CAAC,WAAW,EAAEmM,iBAAiB,CAACpX,SAAS,CAACqJ,wBAAwB,CAAC,EACnE,CAAC,OAAO,EAAE+N,iBAAiB,CAACpX,SAAS,CAACwJ,oBAAoB,CAAC,EAC3D,CAAC,SAAS,EAAE4N,iBAAiB,CAACpX,SAAS,CAAC4M,sBAAsB,CAAC,EAC/D,CAAC,WAAW,EAAEwK,iBAAiB,CAACpX,SAAS,CAACuI,MAAM,CAAC,CAClD,CAAC;AAEF,IAAM6Q,sCAAsC,GAAG,IAAIqW,GAAG,CAGpD,CACA,CAAC,YAAY,EAAErX,8BAA8B,CAACpY,SAAS,CAACkN,yBAAyB,CAAC,EAClF,CAAC,UAAU,EAAEkL,8BAA8B,CAACpY,SAAS,CAACsN,uBAAuB,CAAC,EAC9E,CAAC,SAAS,EAAE8K,8BAA8B,CAACpY,SAAS,CAACwN,sBAAsB,CAAC,EAC5E,CAAC,aAAa,EAAE4K,8BAA8B,CAACpY,SAAS,CAAC0N,0BAA0B,CAAC,EACpF,CAAC,aAAa,EAAE0K,8BAA8B,CAACpY,SAAS,CAAC+N,0BAA0B,CAAC,EACpF,CAAC,YAAY,EAAEqK,8BAA8B,CAACpY,SAAS,CAACwI,yBAAyB,CAAC,EAClF,CACE,yBAAyB,EACzB4P,8BAA8B,CAACpY,SAAS,CAAC4I,sCAAsC,CAChF,EACD,CAAC,YAAY,EAAEwP,8BAA8B,CAACpY,SAAS,CAAC+R,yBAAyB,CAAC,EAClF,CACE,4BAA4B,EAC5BqG,8BAA8B,CAACpY,SAAS,CAACiL,yCAAyC,CACnF,EACD,CAAC,OAAO,EAAEmN,8BAA8B,CAACpY,SAAS,CAACwJ,oBAAoB,CAAC,EACxE,CAAC,SAAS,EAAE4O,8BAA8B,CAACpY,SAAS,CAAC4M,sBAAsB,CAAC,EAC5E,CAAC,WAAW,EAAEwL,8BAA8B,CAACpY,SAAS,CAACuI,MAAM,CAAC,CAC/D,CAAC;AAEF,IAAMiS,oBAAoB,GAAG,IAAIiV,GAAG,CAGlC,CACA,CAAC,YAAY,EAAEnW,cAAc,CAACtZ,SAAS,CAACkN,yBAAyB,CAAC,EAClE,CAAC,UAAU,EAAEoM,cAAc,CAACtZ,SAAS,CAACsN,uBAAuB,CAAC,EAC9D,CAAC,SAAS,EAAEgM,cAAc,CAACtZ,SAAS,CAACwN,sBAAsB,CAAC,EAC5D,CAAC,aAAa,EAAE8L,cAAc,CAACtZ,SAAS,CAAC0N,0BAA0B,CAAC,EACpE,CAAC,aAAa,EAAE4L,cAAc,CAACtZ,SAAS,CAAC+N,0BAA0B,CAAC,EACpE,CAAC,YAAY,EAAEuL,cAAc,CAACtZ,SAAS,CAACwI,yBAAyB,CAAC,EAClE,CACE,yBAAyB,EACzB8Q,cAAc,CAACtZ,SAAS,CAAC4I,sCAAsC,CAChE,EACD,CAAC,YAAY,EAAE0Q,cAAc,CAACtZ,SAAS,CAAC+R,yBAAyB,CAAC,EAClE,CACE,4BAA4B,EAC5BuH,cAAc,CAACtZ,SAAS,CAACiL,yCAAyC,CACnE,EACD,CAAC,WAAW,EAAEqO,cAAc,CAACtZ,SAAS,CAACqJ,wBAAwB,CAAC,EAChE,CAAC,KAAK,EAAEiQ,cAAc,CAACtZ,SAAS,CAACma,kBAAkB,CAAC,EACpD,CAAC,KAAK,EAAEb,cAAc,CAACtZ,SAAS,CAACqa,kBAAkB,CAAC,EACpD,CAAC,WAAW,EAAEf,cAAc,CAACtZ,SAAS,CAACuI,MAAM,CAAC,CAC/C,CAAC;AAEF,IAAMiT,gCAAgC,GAAG,IAAIiU,GAAG,CAG9C,CACA,CAAC,YAAY,EAAE/U,yBAAyB,CAAC1a,SAAS,CAACkN,yBAAyB,CAAC,EAC7E,CAAC,UAAU,EAAEwN,yBAAyB,CAAC1a,SAAS,CAACsN,uBAAuB,CAAC,EACzE,CAAC,SAAS,EAAEoN,yBAAyB,CAAC1a,SAAS,CAACwN,sBAAsB,CAAC,EACvE,CAAC,aAAa,EAAEkN,yBAAyB,CAAC1a,SAAS,CAAC0N,0BAA0B,CAAC,EAC/E,CAAC,aAAa,EAAEgN,yBAAyB,CAAC1a,SAAS,CAAC+N,0BAA0B,CAAC,EAC/E,CAAC,YAAY,EAAE2M,yBAAyB,CAAC1a,SAAS,CAACwI,yBAAyB,CAAC,EAC7E,CACE,yBAAyB,EACzBkS,yBAAyB,CAAC1a,SAAS,CAAC4I,sCAAsC,CAC3E,EACD,CAAC,YAAY,EAAE8R,yBAAyB,CAAC1a,SAAS,CAAC+R,yBAAyB,CAAC,EAC7E,CACE,4BAA4B,EAC5B2I,yBAAyB,CAAC1a,SAAS,CAACiL,yCAAyC,CAC9E,EACD,CAAC,OAAO,EAAEyP,yBAAyB,CAAC1a,SAAS,CAACwJ,oBAAoB,CAAC,EACnE,CAAC,WAAW,EAAEkR,yBAAyB,CAAC1a,SAAS,CAACuI,MAAM,CAAC,CAC1D,CAAC;AAEF,IAAMiU,mBAAmB,GAAG,IAAIiT,GAAG,CAGjC,CACA,CAAC,YAAY,EAAE/T,aAAa,CAAC1b,SAAS,CAACkN,yBAAyB,CAAC,EACjE,CAAC,UAAU,EAAEwO,aAAa,CAAC1b,SAAS,CAACsN,uBAAuB,CAAC,EAC7D,CAAC,SAAS,EAAEoO,aAAa,CAAC1b,SAAS,CAACwN,sBAAsB,CAAC,EAC3D,CAAC,aAAa,EAAEkO,aAAa,CAAC1b,SAAS,CAAC0N,0BAA0B,CAAC,EACnE,CAAC,aAAa,EAAEgO,aAAa,CAAC1b,SAAS,CAAC+N,0BAA0B,CAAC,EACnE,CAAC,YAAY,EAAE2N,aAAa,CAAC1b,SAAS,CAACwI,yBAAyB,CAAC,EACjE,CACE,yBAAyB,EACzBkT,aAAa,CAAC1b,SAAS,CAAC4I,sCAAsC,CAC/D,EACD,CAAC,YAAY,EAAE8S,aAAa,CAAC1b,SAAS,CAAC+R,yBAAyB,CAAC,EACjE,CACE,4BAA4B,EAC5B2J,aAAa,CAAC1b,SAAS,CAACiL,yCAAyC,CAClE,EACD,CAAC,OAAO,EAAEyQ,aAAa,CAAC1b,SAAS,CAACwJ,oBAAoB,CAAC,EACvD,CAAC,aAAa,EAAEkS,aAAa,CAAC1b,SAAS,CAAC0Q,0BAA0B,CAAC,EACnE,CAAC,WAAW,EAAEgL,aAAa,CAAC1b,SAAS,CAACuI,MAAM,CAAC,CAC9C,CAAC;AAEF,IAAMiV,mBAAmB,GAAG,IAAIiS,GAAG,CAGjC,CACA,CAAC,YAAY,EAAE/S,aAAa,CAAC1c,SAAS,CAACkN,yBAAyB,CAAC,EACjE,CAAC,UAAU,EAAEwP,aAAa,CAAC1c,SAAS,CAACsN,uBAAuB,CAAC,EAC7D,CAAC,SAAS,EAAEoP,aAAa,CAAC1c,SAAS,CAACwN,sBAAsB,CAAC,EAC3D,CAAC,aAAa,EAAEkP,aAAa,CAAC1c,SAAS,CAAC0N,0BAA0B,CAAC,EACnE,CAAC,aAAa,EAAEgP,aAAa,CAAC1c,SAAS,CAAC+N,0BAA0B,CAAC,EACnE,CAAC,YAAY,EAAE2O,aAAa,CAAC1c,SAAS,CAACwI,yBAAyB,CAAC,EACjE,CACE,yBAAyB,EACzBkU,aAAa,CAAC1c,SAAS,CAAC4I,sCAAsC,CAC/D,EACD,CAAC,YAAY,EAAE8T,aAAa,CAAC1c,SAAS,CAAC+R,yBAAyB,CAAC,EACjE,CACE,4BAA4B,EAC5B2K,aAAa,CAAC1c,SAAS,CAACiL,yCAAyC,CAClE,EACD,CAAC,OAAO,EAAEyR,aAAa,CAAC1c,SAAS,CAACwJ,oBAAoB,CAAC,EACvD,CAAC,aAAa,EAAEkT,aAAa,CAAC1c,SAAS,CAAC0Q,0BAA0B,CAAC,EACnE,CAAC,WAAW,EAAEgM,aAAa,CAAC1c,SAAS,CAACuI,MAAM,CAAC,CAC9C,CAAC;AAEF,IAAMqW,6CAA6C,GAAG,IAAI6Q,GAAG,CAG3D,CACA,CACE,YAAY,EACZ/R,qCAAqC,CAAC1d,SAAS,CAACkN,yBAAyB,CAC1E,EACD,CAAC,UAAU,EAAEwQ,qCAAqC,CAAC1d,SAAS,CAACsN,uBAAuB,CAAC,EACrF,CAAC,SAAS,EAAEoQ,qCAAqC,CAAC1d,SAAS,CAACwN,sBAAsB,CAAC,EACnF,CACE,aAAa,EACbkQ,qCAAqC,CAAC1d,SAAS,CAAC0N,0BAA0B,CAC3E,EACD,CACE,aAAa,EACbgQ,qCAAqC,CAAC1d,SAAS,CAAC+N,0BAA0B,CAC3E,EACD,CACE,YAAY,EACZ2P,qCAAqC,CAAC1d,SAAS,CAACwI,yBAAyB,CAC1E,EACD,CACE,yBAAyB,EACzBkV,qCAAqC,CAAC1d,SAAS,CAC5C4I,sCAAsC,CAC1C,EACD,CACE,YAAY,EACZ8U,qCAAqC,CAAC1d,SAAS,CAAC+R,yBAAyB,CAC1E,EACD,CACE,4BAA4B,EAC5B2L,qCAAqC,CAAC1d,SAAS,CAC5CiL,yCAAyC,CAC7C,EACD,CAAC,OAAO,EAAEyS,qCAAqC,CAAC1d,SAAS,CAAC6T,oBAAoB,CAAC,EAC/E,CAAC,QAAQ,EAAE6J,qCAAqC,CAAC1d,SAAS,CAAC+T,qBAAqB,CAAC,EACjF,CACE,aAAa,EACb2J,qCAAqC,CAAC1d,SAAS,CAACue,0BAA0B,CAC3E,EACD,CAAC,WAAW,EAAEb,qCAAqC,CAAC1d,SAAS,CAACuI,MAAM,CAAC,CACtE,CAAC;AAEF,IAAM8X,qBAAqB,GAAG,IAAIoP,GAAG,CAGnC,CACA,CAAC,YAAY,EAAE3Q,eAAe,CAAC9e,SAAS,CAACkN,yBAAyB,CAAC,EACnE,CAAC,UAAU,EAAE4R,eAAe,CAAC9e,SAAS,CAACsN,uBAAuB,CAAC,EAC/D,CAAC,SAAS,EAAEwR,eAAe,CAAC9e,SAAS,CAACwN,sBAAsB,CAAC,EAC7D,CAAC,aAAa,EAAEsR,eAAe,CAAC9e,SAAS,CAAC0N,0BAA0B,CAAC,EACrE,CAAC,aAAa,EAAEoR,eAAe,CAAC9e,SAAS,CAAC+N,0BAA0B,CAAC,EACrE,CAAC,YAAY,EAAE+Q,eAAe,CAAC9e,SAAS,CAACwI,yBAAyB,CAAC,EACnE,CACE,yBAAyB,EACzBsW,eAAe,CAAC9e,SAAS,CAAC4I,sCAAsC,CACjE,EACD,CAAC,YAAY,EAAEkW,eAAe,CAAC9e,SAAS,CAAC+R,yBAAyB,CAAC,EACnE,CACE,4BAA4B,EAC5B+M,eAAe,CAAC9e,SAAS,CAACiL,yCAAyC,CACpE,EACD,CAAC,YAAY,EAAE6T,eAAe,CAAC9e,SAAS,CAAC2f,yBAAyB,CAAC,EACnE,CAAC,YAAY,EAAEb,eAAe,CAAC9e,SAAS,CAAC+f,yBAAyB,CAAC,EACnE,CAAC,eAAe,EAAEjB,eAAe,CAAC9e,SAAS,CAAC0P,4BAA4B,CAAC,EACzE,CAAC,kBAAkB,EAAEoP,eAAe,CAAC9e,SAAS,CAAC4P,+BAA+B,CAAC,EAC/E,CAAC,WAAW,EAAEkP,eAAe,CAAC9e,SAAS,CAACuI,MAAM,CAAC,CAChD,CAAC;AAEF,IAAMuZ,4BAA4B,GAAG,IAAI2N,GAAG,CAG1C,CACA,CAAC,QAAQ,EAAE7O,qBAAqB,CAAC5gB,SAAS,CAAC6gB,qBAAqB,CAAC,EACjE,CAAC,kBAAkB,EAAED,qBAAqB,CAAC5gB,SAAS,CAAC+gB,+BAA+B,CAAC,EACrF,CACE,qBAAqB,EACrBH,qBAAqB,CAAC5gB,SAAS,CAACihB,kCAAkC,CACnE,EACD,CACE,sBAAsB,EACtBL,qBAAqB,CAAC5gB,SAAS,CAACmhB,mCAAmC,CACpE,EACD,CAAC,OAAO,EAAEP,qBAAqB,CAAC5gB,SAAS,CAACqhB,oBAAoB,CAAC,EAC/D,CAAC,WAAW,EAAET,qBAAqB,CAAC5gB,SAAS,CAACuhB,wBAAwB,CAAC,EACvE,CAAC,WAAW,EAAEX,qBAAqB,CAAC5gB,SAAS,CAACyhB,wBAAwB,CAAC,EACvE,CAAC,SAAS,EAAEb,qBAAqB,CAAC5gB,SAAS,CAAC2hB,sBAAsB,CAAC,EACnE,CAAC,WAAW,EAAEf,qBAAqB,CAAC5gB,SAAS,CAACuI,MAAM,CAAC,CACtD,CAAC;AAEF,IAAM0Z,oCAAoC,GAAG,IAAIwN,GAAG,CAGlD,CAAC,CAAC,mBAAmB,EAAE1L,6BAA6B,CAAC,CAAC,CAAC;AAEzD,IAAMC,kCAAkC,GAAG,IAAIyL,GAAG,CAGhD,CACA,CAAC,YAAY,EAAEvN,0BAA0B,CAACliB,SAAS,CAACkN,yBAAyB,CAAC,EAC9E,CAAC,UAAU,EAAEgV,0BAA0B,CAACliB,SAAS,CAACsN,uBAAuB,CAAC,EAC1E,CAAC,SAAS,EAAE4U,0BAA0B,CAACliB,SAAS,CAACwN,sBAAsB,CAAC,EACxE,CAAC,aAAa,EAAE0U,0BAA0B,CAACliB,SAAS,CAAC0N,0BAA0B,CAAC,EAChF,CAAC,aAAa,EAAEwU,0BAA0B,CAACliB,SAAS,CAAC+N,0BAA0B,CAAC,EAChF,CAAC,YAAY,EAAEmU,0BAA0B,CAACliB,SAAS,CAACwI,yBAAyB,CAAC,EAC9E,CACE,yBAAyB,EACzB0Z,0BAA0B,CAACliB,SAAS,CAAC4I,sCAAsC,CAC5E,EACD,CAAC,YAAY,EAAEsZ,0BAA0B,CAACliB,SAAS,CAAC+R,yBAAyB,CAAC,EAC9E,CACE,4BAA4B,EAC5BmQ,0BAA0B,CAACliB,SAAS,CAACiL,yCAAyC,CAC/E,EACD,CAAC,UAAU,EAAEiX,0BAA0B,CAACliB,SAAS,CAAC+iB,uBAAuB,CAAC,EAC1E,CAAC,WAAW,EAAEb,0BAA0B,CAACliB,SAAS,CAACijB,wBAAwB,CAAC,EAC5E,CAAC,OAAO,EAAEf,0BAA0B,CAACliB,SAAS,CAACmjB,oBAAoB,CAAC,EACpE,CAAC,cAAc,EAAEjB,0BAA0B,CAACliB,SAAS,CAACqjB,2BAA2B,CAAC,EAClF,CAAC,eAAe,EAAEnB,0BAA0B,CAACliB,SAAS,CAACujB,4BAA4B,CAAC,EACpF,CAAC,YAAY,EAAErB,0BAA0B,CAACliB,SAAS,CAACyjB,yBAAyB,CAAC,EAC9E,CAAC,aAAa,EAAEvB,0BAA0B,CAACliB,SAAS,CAAC2jB,0BAA0B,CAAC,EAChF,CAAC,aAAa,EAAEzB,0BAA0B,CAACliB,SAAS,CAAC6jB,0BAA0B,CAAC,EAChF,CAAC,WAAW,EAAE3B,0BAA0B,CAACliB,SAAS,CAACuI,MAAM,CAAC,CAC3D,CAAC;AAEF,IAAMsd,wBAAwB,GAAG,IAAI4J,GAAG,CAGtC,CACA,CAAC,YAAY,EAAEvL,kBAAkB,CAAClkB,SAAS,CAACkN,yBAAyB,CAAC,EACtE,CAAC,UAAU,EAAEgX,kBAAkB,CAAClkB,SAAS,CAACsN,uBAAuB,CAAC,EAClE,CAAC,SAAS,EAAE4W,kBAAkB,CAAClkB,SAAS,CAACwN,sBAAsB,CAAC,EAChE,CAAC,aAAa,EAAE0W,kBAAkB,CAAClkB,SAAS,CAAC0N,0BAA0B,CAAC,EACxE,CAAC,aAAa,EAAEwW,kBAAkB,CAAClkB,SAAS,CAAC+N,0BAA0B,CAAC,EACxE,CAAC,YAAY,EAAEmW,kBAAkB,CAAClkB,SAAS,CAACwI,yBAAyB,CAAC,EACtE,CACE,yBAAyB,EACzB0b,kBAAkB,CAAClkB,SAAS,CAAC4I,sCAAsC,CACpE,EACD,CAAC,YAAY,EAAEsb,kBAAkB,CAAClkB,SAAS,CAAC+R,yBAAyB,CAAC,EACtE,CACE,4BAA4B,EAC5BmS,kBAAkB,CAAClkB,SAAS,CAACiL,yCAAyC,CACvE,EACD,CAAC,gBAAgB,EAAEiZ,kBAAkB,CAAClkB,SAAS,CAAC+kB,6BAA6B,CAAC,EAC9E,CAAC,iBAAiB,EAAEb,kBAAkB,CAAClkB,SAAS,CAAColB,8BAA8B,CAAC,EAChF,CAAC,mBAAmB,EAAElB,kBAAkB,CAAClkB,SAAS,CAACwlB,gCAAgC,CAAC,EACpF,CAAC,WAAW,EAAEtB,kBAAkB,CAAClkB,SAAS,CAACuI,MAAM,CAAC,CACnD,CAAC;AAEF,IAAMyd,iCAAiC,GAAG,IAAIyJ,GAAG,CAG/C,CACA,CAAC,OAAO,EAAE1J,0BAA0B,CAAC/lB,SAAS,CAACwJ,oBAAoB,CAAC,EACpE,CAAC,WAAW,EAAEuc,0BAA0B,CAAC/lB,SAAS,CAACuI,MAAM,CAAC,CAC3D,CAAC;AAEF,IAAMye,yBAAyB,GAAG,IAAIyI,GAAG,CAGvC,CACA,CAAC,YAAY,EAAEvJ,mBAAmB,CAAClmB,SAAS,CAACkN,yBAAyB,CAAC,EACvE,CAAC,UAAU,EAAEgZ,mBAAmB,CAAClmB,SAAS,CAACsN,uBAAuB,CAAC,EACnE,CAAC,SAAS,EAAE4Y,mBAAmB,CAAClmB,SAAS,CAACwN,sBAAsB,CAAC,EACjE,CAAC,aAAa,EAAE0Y,mBAAmB,CAAClmB,SAAS,CAAC0N,0BAA0B,CAAC,EACzE,CAAC,aAAa,EAAEwY,mBAAmB,CAAClmB,SAAS,CAAC+N,0BAA0B,CAAC,EACzE,CAAC,YAAY,EAAEmY,mBAAmB,CAAClmB,SAAS,CAACwI,yBAAyB,CAAC,EACvE,CACE,yBAAyB,EACzB0d,mBAAmB,CAAClmB,SAAS,CAAC4I,sCAAsC,CACrE,EACD,CAAC,YAAY,EAAEsd,mBAAmB,CAAClmB,SAAS,CAAC+R,yBAAyB,CAAC,EACvE,CACE,4BAA4B,EAC5BmU,mBAAmB,CAAClmB,SAAS,CAACiL,yCAAyC,CACxE,EACD,CAAC,WAAW,EAAEib,mBAAmB,CAAClmB,SAAS,CAACuI,MAAM,CAAC,CACpD,CAAC;AAEF,IAAMyf,kCAAkC,GAAG,IAAIyH,GAAG,CAGhD,CACA,CAAC,YAAY,EAAEvI,2BAA2B,CAAClnB,SAAS,CAACkN,yBAAyB,CAAC,EAC/E,CAAC,UAAU,EAAEga,2BAA2B,CAAClnB,SAAS,CAACsN,uBAAuB,CAAC,EAC3E,CAAC,SAAS,EAAE4Z,2BAA2B,CAAClnB,SAAS,CAACwN,sBAAsB,CAAC,EACzE,CAAC,aAAa,EAAE0Z,2BAA2B,CAAClnB,SAAS,CAAC0N,0BAA0B,CAAC,EACjF,CAAC,aAAa,EAAEwZ,2BAA2B,CAAClnB,SAAS,CAAC+N,0BAA0B,CAAC,EACjF,CACE,gBAAgB,EAChBmZ,2BAA2B,CAAClnB,SAAS,CAACoO,6BAA6B,CACpE,EACD,CAAC,IAAI,EAAE8Y,2BAA2B,CAAClnB,SAAS,CAACsO,iBAAiB,CAAC,EAC/D,CACE,4BAA4B,EAC5B4Y,2BAA2B,CAAClnB,SAAS,CAACiL,yCAAyC,CAChF,EACD,CAAC,UAAU,EAAEic,2BAA2B,CAAClnB,SAAS,CAAC2nB,uBAAuB,CAAC,EAC3E,CAAC,WAAW,EAAET,2BAA2B,CAAClnB,SAAS,CAACuI,MAAM,CAAC,CAC5D,CAAC;AAEF,IAAMqgB,wBAAwB,GAAG,IAAI6G,GAAG,CAGtC,CACA,CAAC,MAAM,EAAErH,kBAAkB,CAACpoB,SAAS,CAAC0M,mBAAmB,CAAC,EAC1D,CACE,oBAAoB,EACpB0b,kBAAkB,CAACpoB,SAAS,CAACqoB,iCAAiC,CAC/D,EACD,CAAC,MAAM,EAAED,kBAAkB,CAACpoB,SAAS,CAACuoB,mBAAmB,CAAC,EAC1D,CAAC,WAAW,EAAEH,kBAAkB,CAACpoB,SAAS,CAACuI,MAAM,CAAC,CACnD,CAAC;AAEF,IAAMygB,kBAAkB,GAAG,IAAIyG,GAAG,CAGhC,CACA,CAAC,MAAM,EAAE3G,YAAY,CAAC9oB,SAAS,CAAC0M,mBAAmB,CAAC,EACpD,CAAC,OAAO,EAAEoc,YAAY,CAAC9oB,SAAS,CAACwJ,oBAAoB,CAAC,EACtD,CAAC,WAAW,EAAEsf,YAAY,CAAC9oB,SAAS,CAACuI,MAAM,CAAC,CAC7C,CAAC;AAEF,IAAM8gB,2CAA2C,GAAG,IAAIoG,GAAG,CAGzD,CACA,CAAC,kCAAkC,EAAEnC,4CAA4C,CAAC,EAClF,CAAC,oBAAoB,EAAEzf,8BAA8B,CAAC,EACtD,CACE,qCAAqC,EACrCif,+CAA+C,CAChD,EACD,CAAC,iCAAiC,EAAEI,2CAA2C,CAAC,EAChF,CAAC,oBAAoB,EAAEhf,8BAA8B,CAAC,CACvD,CAAC;AAEF,IAAMyb,oCAAoC,GAAG,IAAI8F,GAAG,CAGlD,CACA,CAAC,UAAU,EAAEnG,2BAA2B,CAACtpB,SAAS,CAACupB,uBAAuB,CAAC,EAC3E,CAAC,MAAM,EAAED,2BAA2B,CAACtpB,SAAS,CAACypB,mBAAmB,CAAC,EACnE,CAAC,WAAW,EAAEH,2BAA2B,CAACtpB,SAAS,CAACuI,MAAM,CAAC,CAC5D,CAAC;AAEF,IAAMuhB,oCAAoC,GAAG,IAAI2F,GAAG,CAGlD,CACA,CAAC,UAAU,EAAE5F,2BAA2B,CAAC7pB,SAAS,CAACupB,uBAAuB,CAAC,EAC3E,CAAC,MAAM,EAAEM,2BAA2B,CAAC7pB,SAAS,CAACypB,mBAAmB,CAAC,EACnE,CAAC,WAAW,EAAEI,2BAA2B,CAAC7pB,SAAS,CAACuI,MAAM,CAAC,CAC5D,CAAC;AAEF,IAAMqiB,0BAA0B,GAAG,IAAI6E,GAAG,CAGxC,CACA,CACE,2BAA2B,EAC3BzF,oBAAoB,CAAChqB,SAAS,CAACiqB,wCAAwC,CACxE,EACD,CAAC,WAAW,EAAED,oBAAoB,CAAChqB,SAAS,CAAC+O,wBAAwB,CAAC,EACtE,CACE,qBAAqB,EACrBib,oBAAoB,CAAChqB,SAAS,CAACuqB,kCAAkC,CAClE,EACD,CAAC,WAAW,EAAEP,oBAAoB,CAAChqB,SAAS,CAACuI,MAAM,CAAC,CACrD,CAAC;AAEF,IAAMwiB,iDAAiD,GAAG,IAAI0E,GAAG,CAK/D,CAAC,CAAC,2BAA2B,EAAEH,qCAAqC,CAAC,CAAC,CAAC;AAEzE,IAAMjE,0CAA0C,GAAG,IAAIoE,GAAG,CAGxD,CACA,CACE,0BAA0B,EAC1BzE,kCAAkC,CAAChrB,SAAS,CAACirB,uCAAuC,CACrF,EACD,CACE,mBAAmB,EACnBD,kCAAkC,CAAChrB,SAAS,CAACmrB,gCAAgC,CAC9E,EACD,CAAC,WAAW,EAAEH,kCAAkC,CAAChrB,SAAS,CAACuI,MAAM,CAAC,CACnE,CAAC;AAEF,IAAMwjB,yBAAyB,GAAG,IAAI0D,GAAG,CAGvC,CACA,CAAC,KAAK,EAAEhE,kBAAkB,CAACzrB,SAAS,CAACma,kBAAkB,CAAC,EACxD,CAAC,KAAK,EAAEsR,kBAAkB,CAACzrB,SAAS,CAAC0rB,kBAAkB,CAAC,EACxD,CAAC,KAAK,EAAED,kBAAkB,CAACzrB,SAAS,CAAC4rB,kBAAkB,CAAC,EACxD,CAAC,KAAK,EAAEH,kBAAkB,CAACzrB,SAAS,CAACqa,kBAAkB,CAAC,EACxD,CAAC,WAAW,EAAEoR,kBAAkB,CAACzrB,SAAS,CAACuI,MAAM,CAAC,CACnD,CAAC;AAEF,IAAM4jB,mCAAmC,GAAG,IAAIsD,GAAG,CAGjD,CACA,CAAC,OAAO,EAAExD,2BAA2B,CAACjsB,SAAS,CAACwJ,oBAAoB,CAAC,EACrE,CAAC,SAAS,EAAEyiB,2BAA2B,CAACjsB,SAAS,CAAC4M,sBAAsB,CAAC,EACzE,CAAC,WAAW,EAAEqf,2BAA2B,CAACjsB,SAAS,CAACuI,MAAM,CAAC,CAC5D,CAAC;AAEF,IAAMokB,yBAAyB,GAAG,IAAI8C,GAAG,CAGvC,CACA,CACE,qBAAqB,EACrBpD,kBAAkB,CAACrsB,SAAS,CAACssB,kCAAkC,CAChE,EACD,CAAC,WAAW,EAAED,kBAAkB,CAACrsB,SAAS,CAACuI,MAAM,CAAC,CACnD,CAAC;AAEF,IAAMwkB,wDAAwD,GAAG,IAAI0C,GAAG,CAGtE,CACA,CACE,UAAU,EACV5C,4CAA4C,CAAC7sB,SAAS,CAACupB,uBAAuB,CAC/E,EACD,CAAC,MAAM,EAAEsD,4CAA4C,CAAC7sB,SAAS,CAACypB,mBAAmB,CAAC,EACpF,CAAC,WAAW,EAAEoD,4CAA4C,CAAC7sB,SAAS,CAACuI,MAAM,CAAC,CAC7E,CAAC;AAEF,IAAM4kB,oDAAoD,GAAG,IAAIsC,GAAG,CAGlE,CACA,CACE,UAAU,EACVxC,wCAAwC,CAACjtB,SAAS,CAACupB,uBAAuB,CAC3E,EACD,CAAC,MAAM,EAAE0D,wCAAwC,CAACjtB,SAAS,CAACypB,mBAAmB,CAAC,EAChF,CAAC,WAAW,EAAEwD,wCAAwC,CAACjtB,SAAS,CAACuI,MAAM,CAAC,CACzE,CAAC;AAEF,IAAMglB,oDAAoD,GAAG,IAAIkC,GAAG,CAGlE,CACA,CACE,UAAU,EACVpC,yCAAyC,CAACrtB,SAAS,CAACupB,uBAAuB,CAC5E,EACD,CAAC,MAAM,EAAE8D,yCAAyC,CAACrtB,SAAS,CAACypB,mBAAmB,CAAC,EACjF,CAAC,WAAW,EAAE4D,yCAAyC,CAACrtB,SAAS,CAACuI,MAAM,CAAC,CAC1E,CAAC;AAEF,IAAMgnB,2CAA2C,GAAG,IAAIE,GAAG,CAGzD,CACA,CACE,eAAe,EACfhC,kCAAkC,CAACztB,SAAS,CAAC0tB,4BAA4B,CAC1E,EACD,CAAC,WAAW,EAAED,kCAAkC,CAACztB,SAAS,CAAC8tB,wBAAwB,CAAC,EACpF,CAAC,MAAM,EAAEL,kCAAkC,CAACztB,SAAS,CAACkuB,mBAAmB,CAAC,EAC1E,CAAC,QAAQ,EAAET,kCAAkC,CAACztB,SAAS,CAACouB,qBAAqB,CAAC,EAC9E,CACE,oBAAoB,EACpBX,kCAAkC,CAACztB,SAAS,CAACsuB,iCAAiC,CAC/E,EACD,CAAC,QAAQ,EAAEb,kCAAkC,CAACztB,SAAS,CAACwuB,qBAAqB,CAAC,EAC9E,CAAC,UAAU,EAAEf,kCAAkC,CAACztB,SAAS,CAAC0uB,uBAAuB,CAAC,EAClF,CACE,YAAY,EACZjB,kCAAkC,CAACztB,SAAS,CAAC4uB,yBAAyB,CACvE,EACD,CACE,aAAa,EACbnB,kCAAkC,CAACztB,SAAS,CAACgvB,0BAA0B,CACxE,EACD,CAAC,WAAW,EAAEvB,kCAAkC,CAACztB,SAAS,CAACkvB,wBAAwB,CAAC,EACpF,CAAC,OAAO,EAAEzB,kCAAkC,CAACztB,SAAS,CAACwJ,oBAAoB,CAAC,EAC5E,CAAC,WAAW,EAAEikB,kCAAkC,CAACztB,SAAS,CAACovB,wBAAwB,CAAC,EACpF,CAAC,WAAW,EAAE3B,kCAAkC,CAACztB,SAAS,CAACuI,MAAM,CAAC,CACnE,CAAC;;AAEF;;AAEA;;AAEA;AACA;AACA;AAFA,IAGMmnB,UAAU,0BAAAC,qBAAA;EAAAtvB,SAAA,CAAAqvB,UAAA,EAAAC,qBAAA;EAAA,IAAAC,MAAA,GAAAxuB,YAAA,CAAAsuB,UAAA;EAAA,SAAAA,WAAA;IAAA1pB,eAAA,OAAA0pB,UAAA;IAAA,OAAAE,MAAA,CAAA5tB,KAAA,OAAAD,SAAA;EAAA;EAAAmD,YAAA,CAAAwqB,UAAA;IAAA3vB,GAAA;IAAAY,KAAA;IACd;AACF;AACA;AACA;AACA;AACA;IACE,SAAAkvB,mBAAmBC,IAAwB,EAAc;MACvD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAitB,YAAA,GAAAttB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA+mB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA3sB,CAAA,MAAA4sB,QAAA,GAAAD,YAAA,CAAA1sB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,IAAI,GAAAD,QAAA,CAAAvvB,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAosB,YAAA,CAAAxtB,CAAA,CAAAoB,GAAA;QAAA;UAAAosB,YAAA,CAAAvsB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEAvoB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACzrB,IAAI;MAE5B,IAAIyrB,IAAI,CAACvmB,SAAS,KAAK,IAAI,EAAE;QAC3B9B,QAAQ,CAAC,WAAW,CAAC,GAAG3I,kBAAkB,CAACsxB,0BAA0B,CACnEN,IAAI,CAACvmB,SAAS,CACf;MACH;MAEA,IAAIumB,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAChC;MAEA,IAAImvB,IAAI,CAAClmB,QAAQ,KAAK,IAAI,EAAE;QAC1B,IAAMymB,aAAa,GAAG,IAAIrtB,KAAK,EAAc;QAAC,IAAAstB,YAAA,GAAA3tB,0BAAA,CAC3BmtB,IAAI,CAAClmB,QAAQ;UAAA2mB,QAAA;QAAA;UAAhC,KAAAD,YAAA,CAAAhtB,CAAA,MAAAitB,QAAA,GAAAD,YAAA,CAAA/sB,CAAA,IAAAC,IAAA,GAAkC;YAAA,IAAvB2sB,KAAI,GAAAI,QAAA,CAAA5vB,KAAA;YACb0vB,aAAa,CAACppB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,KAAI,CAAC,CAAC;UAC1C;QAAC,SAAAtsB,GAAA;UAAAysB,YAAA,CAAA7tB,CAAA,CAAAoB,GAAA;QAAA;UAAAysB,YAAA,CAAA5sB,CAAA;QAAA;QACD+D,QAAQ,CAAC,UAAU,CAAC,GAAG4oB,aAAa;MACtC;MAEA,OAAO5oB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6vB,mCACEV,IAAwC,EAC5B;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAA0tB,YAAA,GAAA/tB,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAslB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAptB,CAAA,MAAAqtB,QAAA,GAAAD,YAAA,CAAAntB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,IAAI,GAAAQ,QAAA,CAAAhwB,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAA6sB,YAAA,CAAAjuB,CAAA,CAAAoB,GAAA;QAAA;UAAA6sB,YAAA,CAAAhtB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACvkB,OAAO,KAAK,IAAI,EAAE;QACzB9D,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACvkB,OAAO;MACpC;MAEA,IAAIukB,IAAI,CAACrkB,QAAQ,KAAK,IAAI,EAAE;QAC1BhE,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACrkB,QAAQ;MACtC;MAEA,IAAIqkB,IAAI,CAACnkB,OAAO,KAAK,IAAI,EAAE;QACzBlE,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnkB,OAAO,CAAC;MACpD;MAEA,IAAImkB,IAAI,CAACjkB,UAAU,KAAK,IAAI,EAAE;QAC5BpE,QAAQ,CAAC,YAAY,CAAC,GAAGqoB,IAAI,CAACjkB,UAAU;MAC1C;MAEA,OAAOpE,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAiwB,mBAAmBd,IAAwB,EAAc;MACvD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA6tB,YAAA,GAAAluB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA2nB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAvtB,CAAA,MAAAwtB,QAAA,GAAAD,YAAA,CAAAttB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,IAAI,GAAAW,QAAA,CAAAnwB,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAgtB,YAAA,CAAApuB,CAAA,CAAAoB,GAAA;QAAA;UAAAgtB,YAAA,CAAAntB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAACrjB,IAAI,KAAK,IAAI,EAAE;QACtBhF,QAAQ,CAAC,MAAM,CAAC,GAAG3I,kBAAkB,CAACiyB,yBAAyB,CAACjB,IAAI,CAACrjB,IAAI,CAAC;MAC5E;MAEAhF,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACnjB,IAAI;MAE5BlF,QAAQ,CAAC,WAAW,CAAC,GAAG3I,kBAAkB,CAACsxB,0BAA0B,CACnEN,IAAI,CAACvmB,SAAS,CACf;MAED,IAAIumB,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAChC;MAEA,IAAImvB,IAAI,CAACjjB,OAAO,KAAK,IAAI,EAAE;QACzBpF,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACjjB,OAAO,CAAC;MACpD;MAEA,OAAOpF,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAqwB,kCACElB,IAAuC,EAC3B;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAkuB,YAAA,GAAAvuB,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAA8jB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA5tB,CAAA,MAAA6tB,QAAA,GAAAD,YAAA,CAAA3tB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAgB,QAAA,CAAAxwB,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAqtB,YAAA,CAAAzuB,CAAA,CAAAoB,GAAA;QAAA;UAAAqtB,YAAA,CAAAxtB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAquB,YAAA,GAAA1uB,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAwjB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA/tB,CAAA,MAAAguB,QAAA,GAAAD,YAAA,CAAA9tB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,MAAI,GAAAmB,QAAA,CAAA3wB,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAwtB,YAAA,CAAA5uB,CAAA,CAAAoB,GAAA;QAAA;UAAAwtB,YAAA,CAAA3tB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAwuB,YAAA,GAAA7uB,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAsjB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAluB,CAAA,MAAAmuB,QAAA,GAAAD,YAAA,CAAAjuB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,MAAI,GAAAsB,QAAA,CAAA9wB,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA2tB,YAAA,CAAA/uB,CAAA,CAAAoB,GAAA;QAAA;UAAA2tB,YAAA,CAAA9tB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACzhB,cAAc,KAAK,IAAI,EAAE;QAChC5G,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACzhB,cAAc,CAAC;MAClE;MAEA5G,QAAQ,CAAC,IAAI,CAAC,GAAGqoB,IAAI,CAACvhB,EAAE;MAExB,IAAIuhB,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAA0uB,YAAA,GAAA/uB,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAsmB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAApuB,CAAA,MAAAquB,QAAA,GAAAD,YAAA,CAAAnuB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,MAAI,GAAAwB,QAAA,CAAAhxB,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAA6tB,YAAA,CAAAjvB,CAAA,CAAAoB,GAAA;QAAA;UAAA6tB,YAAA,CAAAhuB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACnhB,WAAW,KAAK,IAAI,EAAE;QAC7BlH,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnhB,WAAW,CAAC;MAC5D;MAEAlH,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAChhB,gBAAgB,CAAC;MAEpE,IAAIghB,IAAI,CAAC5gB,SAAS,KAAK,IAAI,EAAE;QAC3B,IAAM0iB,cAAc,GAAG,IAAI5uB,KAAK,EAAc;QAAC,IAAA6uB,YAAA,GAAAlvB,0BAAA,CAC5BmtB,IAAI,CAAC5gB,SAAS;UAAA4iB,QAAA;QAAA;UAAjC,KAAAD,YAAA,CAAAvuB,CAAA,MAAAwuB,QAAA,GAAAD,YAAA,CAAAtuB,CAAA,IAAAC,IAAA,GAAmC;YAAA,IAAxB2sB,MAAI,GAAA2B,QAAA,CAAAnxB,KAAA;YACbixB,cAAc,CAAC3qB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC3C;QAAC,SAAAtsB,GAAA;UAAAguB,YAAA,CAAApvB,CAAA,CAAAoB,GAAA;QAAA;UAAAguB,YAAA,CAAAnuB,CAAA;QAAA;QACD+D,QAAQ,CAAC,WAAW,CAAC,GAAGmqB,cAAc;MACxC;MAEAnqB,QAAQ,CAAC,WAAW,CAAC,GAAG,0BAA0B;MAElD,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAoxB,0BAA0BjC,IAA+B,EAAc;MACrE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,WAAW,CAAC,GAAG3I,kBAAkB,CAACkzB,qBAAqB,CAAClC,IAAI,CAACrgB,SAAS,CAAC;MAEhF,IAAIqgB,IAAI,CAACngB,aAAa,KAAK,IAAI,EAAE;QAC/BlI,QAAQ,CAAC,eAAe,CAAC,GAAGqoB,IAAI,CAACngB,aAAa;MAChD;MAEA,IAAImgB,IAAI,CAAC9f,gBAAgB,KAAK,IAAI,EAAE;QAClC,IAAMiiB,qBAAqB,GAAG,IAAIjvB,KAAK,EAAc;QAAC,IAAAkvB,YAAA,GAAAvvB,0BAAA,CACnCmtB,IAAI,CAAC9f,gBAAgB;UAAAmiB,QAAA;QAAA;UAAxC,KAAAD,YAAA,CAAA5uB,CAAA,MAAA6uB,QAAA,GAAAD,YAAA,CAAA3uB,CAAA,IAAAC,IAAA,GAA0C;YAAA,IAA/B2sB,IAAI,GAAAgC,QAAA,CAAAxxB,KAAA;YACbsxB,qBAAqB,CAAChrB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAClD;QAAC,SAAAtsB,GAAA;UAAAquB,YAAA,CAAAzvB,CAAA,CAAAoB,GAAA;QAAA;UAAAquB,YAAA,CAAAxuB,CAAA;QAAA;QACD+D,QAAQ,CAAC,kBAAkB,CAAC,GAAGwqB,qBAAqB;MACtD;MAEA,IAAInC,IAAI,CAAC5f,SAAS,KAAK,IAAI,EAAE;QAC3BzI,QAAQ,CAAC,WAAW,CAAC,GAAGqoB,IAAI,CAAC5f,SAAS;MACxC;MAEA,IAAI4f,IAAI,CAACzf,gBAAgB,KAAK,IAAI,EAAE;QAClC5I,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACzf,gBAAgB,CAAC;MACtE;MAEA,OAAO5I,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAyxB,kBAAkBtC,IAAuB,EAAc;MACrD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACzoB,IAAI;MAE5B,IAAIyoB,IAAI,CAACnf,WAAW,KAAK,IAAI,EAAE;QAC7BlJ,QAAQ,CAAC,aAAa,CAAC,GAAGqoB,IAAI,CAACnf,WAAW;MAC5C;MAEA,OAAOlJ,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA0xB,yBAAyBvC,IAA8B,EAAc;MACnE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAsvB,YAAA,GAAA3vB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAopB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAhvB,CAAA,MAAAivB,QAAA,GAAAD,YAAA,CAAA/uB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,IAAI,GAAAoC,QAAA,CAAA5xB,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAyuB,YAAA,CAAA7vB,CAAA,CAAAoB,GAAA;QAAA;UAAAyuB,YAAA,CAAA5uB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEAvoB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACzrB,IAAI;MAE5BoD,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAE9B,IAAImvB,IAAI,CAAC3e,iBAAiB,KAAK,IAAI,EAAE;QACnC1J,QAAQ,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC3e,iBAAiB,CAAC;MACxE;MAEA,OAAO1J,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA6xB,kBAAkB1C,IAAuB,EAAc;MACrD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAyvB,YAAA,GAAA9vB,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAqlB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAnvB,CAAA,MAAAovB,QAAA,GAAAD,YAAA,CAAAlvB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAuC,QAAA,CAAA/xB,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA4uB,YAAA,CAAAhwB,CAAA,CAAAoB,GAAA;QAAA;UAAA4uB,YAAA,CAAA/uB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA2vB,YAAA,GAAAhwB,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA8kB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAArvB,CAAA,MAAAsvB,QAAA,GAAAD,YAAA,CAAApvB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,MAAI,GAAAyC,QAAA,CAAAjyB,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA8uB,YAAA,CAAAlwB,CAAA,CAAAoB,GAAA;QAAA;UAAA8uB,YAAA,CAAAjvB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA6vB,YAAA,GAAAlwB,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA2kB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAvvB,CAAA,MAAAwvB,QAAA,GAAAD,YAAA,CAAAtvB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,MAAI,GAAA2C,QAAA,CAAAnyB,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAgvB,YAAA,CAAApwB,CAAA,CAAAoB,GAAA;QAAA;UAAAgvB,YAAA,CAAAnvB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACzhB,cAAc,KAAK,IAAI,EAAE;QAChC5G,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACzhB,cAAc,CAAC;MAClE;MAEA5G,QAAQ,CAAC,IAAI,CAAC,GAAGqoB,IAAI,CAACvhB,EAAE;MAExB,IAAIuhB,IAAI,CAACrjB,IAAI,KAAK,IAAI,EAAE;QACtBhF,QAAQ,CAAC,MAAM,CAAC,GAAG3I,kBAAkB,CAACi0B,yBAAyB,CAACjD,IAAI,CAACrjB,IAAI,CAAC;MAC5E;MAEA,IAAIqjB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAgwB,YAAA,GAAArwB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA8pB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA1vB,CAAA,MAAA2vB,QAAA,GAAAD,YAAA,CAAAzvB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,MAAI,GAAA8C,QAAA,CAAAtyB,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAmvB,YAAA,CAAAvwB,CAAA,CAAAoB,GAAA;QAAA;UAAAmvB,YAAA,CAAAtvB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAmwB,YAAA,GAAAxwB,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAkhB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA7vB,CAAA,MAAA8vB,QAAA,GAAAD,YAAA,CAAA5vB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,MAAI,GAAAiD,QAAA,CAAAzyB,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,MAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAsvB,YAAA,CAAA1wB,CAAA,CAAAoB,GAAA;QAAA;UAAAsvB,YAAA,CAAAzvB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAqwB,YAAA,GAAA1wB,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAioB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA/vB,CAAA,MAAAgwB,QAAA,GAAAD,YAAA,CAAA9vB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAmD,QAAA,CAAA3yB,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAwvB,YAAA,CAAA5wB,CAAA,CAAAoB,GAAA;QAAA;UAAAwvB,YAAA,CAAA3vB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACrd,gBAAgB,KAAK,IAAI,EAAE;QAClC,IAAM8gB,qBAAqB,GAAG,IAAIvwB,KAAK,EAAc;QAAC,IAAAwwB,YAAA,GAAA7wB,0BAAA,CACnCmtB,IAAI,CAACrd,gBAAgB;UAAAghB,QAAA;QAAA;UAAxC,KAAAD,YAAA,CAAAlwB,CAAA,MAAAmwB,QAAA,GAAAD,YAAA,CAAAjwB,CAAA,IAAAC,IAAA,GAA0C;YAAA,IAA/B2sB,OAAI,GAAAsD,QAAA,CAAA9yB,KAAA;YACb4yB,qBAAqB,CAACtsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAClD;QAAC,SAAAtsB,GAAA;UAAA2vB,YAAA,CAAA/wB,CAAA,CAAAoB,GAAA;QAAA;UAAA2vB,YAAA,CAAA9vB,CAAA;QAAA;QACD+D,QAAQ,CAAC,kBAAkB,CAAC,GAAG8rB,qBAAqB;MACtD;MAEA9rB,QAAQ,CAAC,WAAW,CAAC,GAAG,UAAU;MAElC,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA+yB,6BAA6B5D,IAAkC,EAAc;MAC3E,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAA2wB,YAAA,GAAAhxB,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAumB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAArwB,CAAA,MAAAswB,QAAA,GAAAD,YAAA,CAAApwB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAyD,QAAA,CAAAjzB,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA8vB,YAAA,CAAAlxB,CAAA,CAAAoB,GAAA;QAAA;UAAA8vB,YAAA,CAAAjwB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA6wB,YAAA,GAAAlxB,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAgmB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAvwB,CAAA,MAAAwwB,QAAA,GAAAD,YAAA,CAAAtwB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA2D,QAAA,CAAAnzB,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAgwB,YAAA,CAAApxB,CAAA,CAAAoB,GAAA;QAAA;UAAAgwB,YAAA,CAAAnwB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA+wB,YAAA,GAAApxB,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA6lB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAzwB,CAAA,MAAA0wB,QAAA,GAAAD,YAAA,CAAAxwB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA6D,QAAA,CAAArzB,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAkwB,YAAA,CAAAtxB,CAAA,CAAAoB,GAAA;QAAA;UAAAkwB,YAAA,CAAArwB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAixB,YAAA,GAAAtxB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA+qB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA3wB,CAAA,MAAA4wB,QAAA,GAAAD,YAAA,CAAA1wB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAA+D,QAAA,CAAAvzB,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAowB,YAAA,CAAAxxB,CAAA,CAAAoB,GAAA;QAAA;UAAAowB,YAAA,CAAAvwB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAmxB,YAAA,GAAAxxB,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAkiB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA7wB,CAAA,MAAA8wB,QAAA,GAAAD,YAAA,CAAA5wB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAiE,QAAA,CAAAzzB,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAswB,YAAA,CAAA1xB,CAAA,CAAAoB,GAAA;QAAA;UAAAswB,YAAA,CAAAzwB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAqxB,YAAA,GAAA1xB,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAipB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA/wB,CAAA,MAAAgxB,QAAA,GAAAD,YAAA,CAAA9wB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAmE,QAAA,CAAA3zB,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAwwB,YAAA,CAAA5xB,CAAA,CAAAoB,GAAA;QAAA;UAAAwwB,YAAA,CAAA3wB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEAhpB,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAChc,KAAK,CAAC;MAE9CrM,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC9b,MAAM,CAAC;MAEhDvM,QAAQ,CAAC,WAAW,CAAC,GAAG,qBAAqB;MAE7C,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4zB,6BAA6BzE,IAAkC,EAAc;MAC3E,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAwxB,YAAA,GAAA7xB,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAonB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAlxB,CAAA,MAAAmxB,QAAA,GAAAD,YAAA,CAAAjxB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAsE,QAAA,CAAA9zB,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA2wB,YAAA,CAAA/xB,CAAA,CAAAoB,GAAA;QAAA;UAAA2wB,YAAA,CAAA9wB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA0xB,YAAA,GAAA/xB,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA6mB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAApxB,CAAA,MAAAqxB,QAAA,GAAAD,YAAA,CAAAnxB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAwE,QAAA,CAAAh0B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA6wB,YAAA,CAAAjyB,CAAA,CAAAoB,GAAA;QAAA;UAAA6wB,YAAA,CAAAhxB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA4xB,YAAA,GAAAjyB,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA0mB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAtxB,CAAA,MAAAuxB,QAAA,GAAAD,YAAA,CAAArxB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA0E,QAAA,CAAAl0B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA+wB,YAAA,CAAAnyB,CAAA,CAAAoB,GAAA;QAAA;UAAA+wB,YAAA,CAAAlxB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA8xB,YAAA,GAAAnyB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA4rB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAxxB,CAAA,MAAAyxB,QAAA,GAAAD,YAAA,CAAAvxB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAA4E,QAAA,CAAAp0B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAixB,YAAA,CAAAryB,CAAA,CAAAoB,GAAA;QAAA;UAAAixB,YAAA,CAAApxB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAgyB,YAAA,GAAAryB,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAA+iB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA1xB,CAAA,MAAA2xB,QAAA,GAAAD,YAAA,CAAAzxB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA8E,QAAA,CAAAt0B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAmxB,YAAA,CAAAvyB,CAAA,CAAAoB,GAAA;QAAA;UAAAmxB,YAAA,CAAAtxB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAkyB,YAAA,GAAAvyB,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA8pB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA5xB,CAAA,MAAA6xB,QAAA,GAAAD,YAAA,CAAA3xB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAgF,QAAA,CAAAx0B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAqxB,YAAA,CAAAzyB,CAAA,CAAAoB,GAAA;QAAA;UAAAqxB,YAAA,CAAAxxB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAAC1a,aAAa,KAAK,IAAI,EAAE;QAC/B3N,QAAQ,CAAC,eAAe,CAAC,GAAGqoB,IAAI,CAAC1a,aAAa;MAChD;MAEA,IAAI0a,IAAI,CAACxa,qBAAqB,KAAK,IAAI,EAAE;QACvC7N,QAAQ,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACxa,qBAAqB,CAAC;MAChF;MAEA7N,QAAQ,CAAC,sBAAsB,CAAC,GAC9B3I,kBAAkB,CAACs2B,+BAA+B,CAACtF,IAAI,CAACta,oBAAoB,CAAC;MAE/E,IAAIsa,IAAI,CAACpa,oBAAoB,KAAK,IAAI,EAAE;QACtCjO,QAAQ,CAAC,sBAAsB,CAAC,GAAG3I,kBAAkB,CAACsxB,0BAA0B,CAC9EN,IAAI,CAACpa,oBAAoB,CAC1B;MACH;MAEA,IAAIoa,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB,IAAM00B,UAAU,GAAG,IAAIryB,KAAK,EAAc;QAAC,IAAAsyB,YAAA,GAAA3yB,0BAAA,CACxBmtB,IAAI,CAACnvB,KAAK;UAAA40B,QAAA;QAAA;UAA7B,KAAAD,YAAA,CAAAhyB,CAAA,MAAAiyB,QAAA,GAAAD,YAAA,CAAA/xB,CAAA,IAAAC,IAAA,GAA+B;YAAA,IAApB2sB,OAAI,GAAAoF,QAAA,CAAA50B,KAAA;YACb00B,UAAU,CAACpuB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACvC;QAAC,SAAAtsB,GAAA;UAAAyxB,YAAA,CAAA7yB,CAAA,CAAAoB,GAAA;QAAA;UAAAyxB,YAAA,CAAA5xB,CAAA;QAAA;QACD+D,QAAQ,CAAC,OAAO,CAAC,GAAG4tB,UAAU;MAChC;MAEA5tB,QAAQ,CAAC,WAAW,CAAC,GAAG,qBAAqB;MAE7C,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA60B,mCACE1F,IAAwC,EAC5B;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAyyB,YAAA,GAAA9yB,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAqoB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAnyB,CAAA,MAAAoyB,QAAA,GAAAD,YAAA,CAAAlyB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAuF,QAAA,CAAA/0B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA4xB,YAAA,CAAAhzB,CAAA,CAAAoB,GAAA;QAAA;UAAA4xB,YAAA,CAAA/xB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA2yB,YAAA,GAAAhzB,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA8nB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAryB,CAAA,MAAAsyB,QAAA,GAAAD,YAAA,CAAApyB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAyF,QAAA,CAAAj1B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA8xB,YAAA,CAAAlzB,CAAA,CAAAoB,GAAA;QAAA;UAAA8xB,YAAA,CAAAjyB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA6yB,YAAA,GAAAlzB,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA2nB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAvyB,CAAA,MAAAwyB,QAAA,GAAAD,YAAA,CAAAtyB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA2F,QAAA,CAAAn1B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAgyB,YAAA,CAAApzB,CAAA,CAAAoB,GAAA;QAAA;UAAAgyB,YAAA,CAAAnyB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA+yB,YAAA,GAAApzB,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA6sB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAzyB,CAAA,MAAA0yB,QAAA,GAAAD,YAAA,CAAAxyB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAA6F,QAAA,CAAAr1B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAkyB,YAAA,CAAAtzB,CAAA,CAAAoB,GAAA;QAAA;UAAAkyB,YAAA,CAAAryB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAizB,YAAA,GAAAtzB,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAgkB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA3yB,CAAA,MAAA4yB,QAAA,GAAAD,YAAA,CAAA1yB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA+F,QAAA,CAAAv1B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAoyB,YAAA,CAAAxzB,CAAA,CAAAoB,GAAA;QAAA;UAAAoyB,YAAA,CAAAvyB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAmzB,YAAA,GAAAxzB,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA+qB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA7yB,CAAA,MAAA8yB,QAAA,GAAAD,YAAA,CAAA5yB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAiG,QAAA,CAAAz1B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAsyB,YAAA,CAAA1zB,CAAA,CAAAoB,GAAA;QAAA;UAAAsyB,YAAA,CAAAzyB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB,IAAM00B,UAAU,GAAG,IAAIryB,KAAK,EAAc;QAAC,IAAAqzB,YAAA,GAAA1zB,0BAAA,CACxBmtB,IAAI,CAACnvB,KAAK;UAAA21B,QAAA;QAAA;UAA7B,KAAAD,YAAA,CAAA/yB,CAAA,MAAAgzB,QAAA,GAAAD,YAAA,CAAA9yB,CAAA,IAAAC,IAAA,GAA+B;YAAA,IAApB2sB,OAAI,GAAAmG,QAAA,CAAA31B,KAAA;YACb00B,UAAU,CAACpuB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACvC;QAAC,SAAAtsB,GAAA;UAAAwyB,YAAA,CAAA5zB,CAAA,CAAAoB,GAAA;QAAA;UAAAwyB,YAAA,CAAA3yB,CAAA;QAAA;QACD+D,QAAQ,CAAC,OAAO,CAAC,GAAG4tB,UAAU;MAChC;MAEA5tB,QAAQ,CAAC,WAAW,CAAC,GAAG,2BAA2B;MAEnD,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA41B,kBAAkBzG,IAAuB,EAAc;MACrD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAwzB,YAAA,GAAA7zB,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAopB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAlzB,CAAA,MAAAmzB,QAAA,GAAAD,YAAA,CAAAjzB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAsG,QAAA,CAAA91B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA2yB,YAAA,CAAA/zB,CAAA,CAAAoB,GAAA;QAAA;UAAA2yB,YAAA,CAAA9yB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA0zB,YAAA,GAAA/zB,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA6oB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAApzB,CAAA,MAAAqzB,QAAA,GAAAD,YAAA,CAAAnzB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAwG,QAAA,CAAAh2B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA6yB,YAAA,CAAAj0B,CAAA,CAAAoB,GAAA;QAAA;UAAA6yB,YAAA,CAAAhzB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA4zB,YAAA,GAAAj0B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA0oB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAtzB,CAAA,MAAAuzB,QAAA,GAAAD,YAAA,CAAArzB,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA0G,QAAA,CAAAl2B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA+yB,YAAA,CAAAn0B,CAAA,CAAAoB,GAAA;QAAA;UAAA+yB,YAAA,CAAAlzB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA8zB,YAAA,GAAAn0B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA4tB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAxzB,CAAA,MAAAyzB,QAAA,GAAAD,YAAA,CAAAvzB,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAA4G,QAAA,CAAAp2B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAizB,YAAA,CAAAr0B,CAAA,CAAAoB,GAAA;QAAA;UAAAizB,YAAA,CAAApzB,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAg0B,YAAA,GAAAr0B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAA+kB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA1zB,CAAA,MAAA2zB,QAAA,GAAAD,YAAA,CAAAzzB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA8G,QAAA,CAAAt2B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAmzB,YAAA,CAAAv0B,CAAA,CAAAoB,GAAA;QAAA;UAAAmzB,YAAA,CAAAtzB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAk0B,YAAA,GAAAv0B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA8rB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA5zB,CAAA,MAAA6zB,QAAA,GAAAD,YAAA,CAAA3zB,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAgH,QAAA,CAAAx2B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAqzB,YAAA,CAAAz0B,CAAA,CAAAoB,GAAA;QAAA;UAAAqzB,YAAA,CAAAxzB,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEAhpB,QAAQ,CAAC,WAAW,CAAC,GAAG3I,kBAAkB,CAACsxB,0BAA0B,CACnEN,IAAI,CAACvmB,SAAS,CACf;MAED,IAAIumB,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAChC;MAEA,IAAImvB,IAAI,CAACjjB,OAAO,KAAK,IAAI,EAAE;QACzBpF,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACjjB,OAAO,CAAC;MACpD;MAEApF,QAAQ,CAAC,WAAW,CAAC,GAAG,UAAU;MAElC,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAy2B,+BAA+BtH,IAAoC,EAAc;MAC/E,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAq0B,YAAA,GAAA10B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAiqB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA/zB,CAAA,MAAAg0B,QAAA,GAAAD,YAAA,CAAA9zB,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAmH,QAAA,CAAA32B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAwzB,YAAA,CAAA50B,CAAA,CAAAoB,GAAA;QAAA;UAAAwzB,YAAA,CAAA3zB,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAu0B,YAAA,GAAA50B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA0pB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAj0B,CAAA,MAAAk0B,QAAA,GAAAD,YAAA,CAAAh0B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAqH,QAAA,CAAA72B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA0zB,YAAA,CAAA90B,CAAA,CAAAoB,GAAA;QAAA;UAAA0zB,YAAA,CAAA7zB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAy0B,YAAA,GAAA90B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAupB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAn0B,CAAA,MAAAo0B,QAAA,GAAAD,YAAA,CAAAl0B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAuH,QAAA,CAAA/2B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA4zB,YAAA,CAAAh1B,CAAA,CAAAoB,GAAA;QAAA;UAAA4zB,YAAA,CAAA/zB,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA20B,YAAA,GAAAh1B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAyuB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAr0B,CAAA,MAAAs0B,QAAA,GAAAD,YAAA,CAAAp0B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAyH,QAAA,CAAAj3B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAA8zB,YAAA,CAAAl1B,CAAA,CAAAoB,GAAA;QAAA;UAAA8zB,YAAA,CAAAj0B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAA60B,YAAA,GAAAl1B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAA4lB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAv0B,CAAA,MAAAw0B,QAAA,GAAAD,YAAA,CAAAt0B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA2H,QAAA,CAAAn3B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAg0B,YAAA,CAAAp1B,CAAA,CAAAoB,GAAA;QAAA;UAAAg0B,YAAA,CAAAn0B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAA+0B,YAAA,GAAAp1B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA2sB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAz0B,CAAA,MAAA00B,QAAA,GAAAD,YAAA,CAAAx0B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAA6H,QAAA,CAAAr3B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAk0B,YAAA,CAAAt1B,CAAA,CAAAoB,GAAA;QAAA;UAAAk0B,YAAA,CAAAr0B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB,IAAM00B,UAAU,GAAG,IAAIryB,KAAK,EAAc;QAAC,IAAAi1B,YAAA,GAAAt1B,0BAAA,CACxBmtB,IAAI,CAACnvB,KAAK;UAAAu3B,QAAA;QAAA;UAA7B,KAAAD,YAAA,CAAA30B,CAAA,MAAA40B,QAAA,GAAAD,YAAA,CAAA10B,CAAA,IAAAC,IAAA,GAA+B;YAAA,IAApB2sB,OAAI,GAAA+H,QAAA,CAAAv3B,KAAA;YACb00B,UAAU,CAACpuB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACvC;QAAC,SAAAtsB,GAAA;UAAAo0B,YAAA,CAAAx1B,CAAA,CAAAoB,GAAA;QAAA;UAAAo0B,YAAA,CAAAv0B,CAAA;QAAA;QACD+D,QAAQ,CAAC,OAAO,CAAC,GAAG4tB,UAAU;MAChC;MAEA,IAAIvF,IAAI,CAACjjB,OAAO,KAAK,IAAI,EAAE;QACzBpF,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACjjB,OAAO,CAAC;MACpD;MAEApF,QAAQ,CAAC,WAAW,CAAC,GAAG,uBAAuB;MAE/C,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAw3B,eAAerI,IAAoB,EAAc;MAC/C,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAo1B,YAAA,GAAAz1B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAgrB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA90B,CAAA,MAAA+0B,QAAA,GAAAD,YAAA,CAAA70B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAkI,QAAA,CAAA13B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAu0B,YAAA,CAAA31B,CAAA,CAAAoB,GAAA;QAAA;UAAAu0B,YAAA,CAAA10B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAs1B,YAAA,GAAA31B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAyqB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAh1B,CAAA,MAAAi1B,QAAA,GAAAD,YAAA,CAAA/0B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAoI,QAAA,CAAA53B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAy0B,YAAA,CAAA71B,CAAA,CAAAoB,GAAA;QAAA;UAAAy0B,YAAA,CAAA50B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAw1B,YAAA,GAAA71B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAsqB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAl1B,CAAA,MAAAm1B,QAAA,GAAAD,YAAA,CAAAj1B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAsI,QAAA,CAAA93B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA20B,YAAA,CAAA/1B,CAAA,CAAAoB,GAAA;QAAA;UAAA20B,YAAA,CAAA90B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA01B,YAAA,GAAA/1B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAwvB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAp1B,CAAA,MAAAq1B,QAAA,GAAAD,YAAA,CAAAn1B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAwI,QAAA,CAAAh4B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAA60B,YAAA,CAAAj2B,CAAA,CAAAoB,GAAA;QAAA;UAAA60B,YAAA,CAAAh1B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAA41B,YAAA,GAAAj2B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAA2mB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAt1B,CAAA,MAAAu1B,QAAA,GAAAD,YAAA,CAAAr1B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA0I,QAAA,CAAAl4B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA+0B,YAAA,CAAAn2B,CAAA,CAAAoB,GAAA;QAAA;UAAA+0B,YAAA,CAAAl1B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAA81B,YAAA,GAAAn2B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA0tB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAx1B,CAAA,MAAAy1B,QAAA,GAAAD,YAAA,CAAAv1B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAA4I,QAAA,CAAAp4B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAi1B,YAAA,CAAAr2B,CAAA,CAAAoB,GAAA;QAAA;UAAAi1B,YAAA,CAAAp1B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEAhpB,QAAQ,CAAC,WAAW,CAAC,GAAG3I,kBAAkB,CAACsxB,0BAA0B,CACnEN,IAAI,CAACvmB,SAAS,CACf;MAED,IAAIumB,IAAI,CAAC1V,GAAG,KAAK,IAAI,EAAE;QACrB3S,QAAQ,CAAC,KAAK,CAAC,GAAGqoB,IAAI,CAAC1V,GAAG;MAC5B;MAEA,IAAI0V,IAAI,CAACxV,GAAG,KAAK,IAAI,EAAE;QACrB7S,QAAQ,CAAC,KAAK,CAAC,GAAGqoB,IAAI,CAACxV,GAAG;MAC5B;MAEA7S,QAAQ,CAAC,WAAW,CAAC,GAAG,OAAO;MAE/B,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAq4B,0BAA0BlJ,IAA+B,EAAc;MACrE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAi2B,YAAA,GAAAt2B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAA6rB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA31B,CAAA,MAAA41B,QAAA,GAAAD,YAAA,CAAA11B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAA+I,QAAA,CAAAv4B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAo1B,YAAA,CAAAx2B,CAAA,CAAAoB,GAAA;QAAA;UAAAo1B,YAAA,CAAAv1B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAm2B,YAAA,GAAAx2B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAsrB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA71B,CAAA,MAAA81B,QAAA,GAAAD,YAAA,CAAA51B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAiJ,QAAA,CAAAz4B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAs1B,YAAA,CAAA12B,CAAA,CAAAoB,GAAA;QAAA;UAAAs1B,YAAA,CAAAz1B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAq2B,YAAA,GAAA12B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAmrB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA/1B,CAAA,MAAAg2B,QAAA,GAAAD,YAAA,CAAA91B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAmJ,QAAA,CAAA34B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAw1B,YAAA,CAAA52B,CAAA,CAAAoB,GAAA;QAAA;UAAAw1B,YAAA,CAAA31B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAu2B,YAAA,GAAA52B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAqwB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAj2B,CAAA,MAAAk2B,QAAA,GAAAD,YAAA,CAAAh2B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAqJ,QAAA,CAAA74B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAA01B,YAAA,CAAA92B,CAAA,CAAAoB,GAAA;QAAA;UAAA01B,YAAA,CAAA71B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAy2B,YAAA,GAAA92B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAwnB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAn2B,CAAA,MAAAo2B,QAAA,GAAAD,YAAA,CAAAl2B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAuJ,QAAA,CAAA/4B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA41B,YAAA,CAAAh3B,CAAA,CAAAoB,GAAA;QAAA;UAAA41B,YAAA,CAAA/1B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAA22B,YAAA,GAAAh3B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAuuB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAr2B,CAAA,MAAAs2B,QAAA,GAAAD,YAAA,CAAAp2B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAyJ,QAAA,CAAAj5B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAA81B,YAAA,CAAAl3B,CAAA,CAAAoB,GAAA;QAAA;UAAA81B,YAAA,CAAAj2B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnvB,KAAK,CAAC;MAChD;MAEA8G,QAAQ,CAAC,WAAW,CAAC,GAAG,kBAAkB;MAE1C,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAk5B,cAAc/J,IAAmB,EAAc;MAC7C,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAA82B,YAAA,GAAAn3B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAA0sB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAx2B,CAAA,MAAAy2B,QAAA,GAAAD,YAAA,CAAAv2B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAA4J,QAAA,CAAAp5B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAi2B,YAAA,CAAAr3B,CAAA,CAAAoB,GAAA;QAAA;UAAAi2B,YAAA,CAAAp2B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAg3B,YAAA,GAAAr3B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAmsB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA12B,CAAA,MAAA22B,QAAA,GAAAD,YAAA,CAAAz2B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA8J,QAAA,CAAAt5B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAm2B,YAAA,CAAAv3B,CAAA,CAAAoB,GAAA;QAAA;UAAAm2B,YAAA,CAAAt2B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAk3B,YAAA,GAAAv3B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAgsB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA52B,CAAA,MAAA62B,QAAA,GAAAD,YAAA,CAAA32B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAgK,QAAA,CAAAx5B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAq2B,YAAA,CAAAz3B,CAAA,CAAAoB,GAAA;QAAA;UAAAq2B,YAAA,CAAAx2B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAo3B,YAAA,GAAAz3B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAkxB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA92B,CAAA,MAAA+2B,QAAA,GAAAD,YAAA,CAAA72B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAkK,QAAA,CAAA15B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAu2B,YAAA,CAAA33B,CAAA,CAAAoB,GAAA;QAAA;UAAAu2B,YAAA,CAAA12B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAs3B,YAAA,GAAA33B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAqoB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAh3B,CAAA,MAAAi3B,QAAA,GAAAD,YAAA,CAAA/2B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAoK,QAAA,CAAA55B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAy2B,YAAA,CAAA73B,CAAA,CAAAoB,GAAA;QAAA;UAAAy2B,YAAA,CAAA52B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAw3B,YAAA,GAAA73B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAovB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAl3B,CAAA,MAAAm3B,QAAA,GAAAD,YAAA,CAAAj3B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAsK,QAAA,CAAA95B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAA22B,YAAA,CAAA/3B,CAAA,CAAAoB,GAAA;QAAA;UAAA22B,YAAA,CAAA92B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAG/I,SAAS,CAACg8B,YAAY,CAAC5K,IAAI,CAACnvB,KAAK,CAAC;MACxD;MAEA8G,QAAQ,CAAC,aAAa,CAAC,GAAGqoB,IAAI,CAACnf,WAAW;MAE1ClJ,QAAQ,CAAC,WAAW,CAAC,GAAG,MAAM;MAE9B,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAg6B,cAAc7K,IAAmB,EAAc;MAC7C,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAA43B,YAAA,GAAAj4B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAwtB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAt3B,CAAA,MAAAu3B,QAAA,GAAAD,YAAA,CAAAr3B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAA0K,QAAA,CAAAl6B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA+2B,YAAA,CAAAn4B,CAAA,CAAAoB,GAAA;QAAA;UAAA+2B,YAAA,CAAAl3B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA83B,YAAA,GAAAn4B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAitB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAx3B,CAAA,MAAAy3B,QAAA,GAAAD,YAAA,CAAAv3B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA4K,QAAA,CAAAp6B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAi3B,YAAA,CAAAr4B,CAAA,CAAAoB,GAAA;QAAA;UAAAi3B,YAAA,CAAAp3B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAg4B,YAAA,GAAAr4B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA8sB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA13B,CAAA,MAAA23B,QAAA,GAAAD,YAAA,CAAAz3B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA8K,QAAA,CAAAt6B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAm3B,YAAA,CAAAv4B,CAAA,CAAAoB,GAAA;QAAA;UAAAm3B,YAAA,CAAAt3B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAk4B,YAAA,GAAAv4B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAgyB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA53B,CAAA,MAAA63B,QAAA,GAAAD,YAAA,CAAA33B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAgL,QAAA,CAAAx6B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAq3B,YAAA,CAAAz4B,CAAA,CAAAoB,GAAA;QAAA;UAAAq3B,YAAA,CAAAx3B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAo4B,YAAA,GAAAz4B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAmpB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA93B,CAAA,MAAA+3B,QAAA,GAAAD,YAAA,CAAA73B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAkL,QAAA,CAAA16B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAu3B,YAAA,CAAA34B,CAAA,CAAAoB,GAAA;QAAA;UAAAu3B,YAAA,CAAA13B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAs4B,YAAA,GAAA34B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAkwB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAh4B,CAAA,MAAAi4B,QAAA,GAAAD,YAAA,CAAA/3B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAoL,QAAA,CAAA56B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAy3B,YAAA,CAAA74B,CAAA,CAAAoB,GAAA;QAAA;UAAAy3B,YAAA,CAAA53B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAChC;MAEA8G,QAAQ,CAAC,aAAa,CAAC,GAAGqoB,IAAI,CAACnf,WAAW;MAE1ClJ,QAAQ,CAAC,WAAW,CAAC,GAAG,MAAM;MAE9B,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA66B,sCACE1L,IAA2C,EAC/B;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAy4B,YAAA,GAAA94B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAquB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAn4B,CAAA,MAAAo4B,QAAA,GAAAD,YAAA,CAAAl4B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAuL,QAAA,CAAA/6B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA43B,YAAA,CAAAh5B,CAAA,CAAAoB,GAAA;QAAA;UAAA43B,YAAA,CAAA/3B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA24B,YAAA,GAAAh5B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA8tB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAr4B,CAAA,MAAAs4B,QAAA,GAAAD,YAAA,CAAAp4B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAyL,QAAA,CAAAj7B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA83B,YAAA,CAAAl5B,CAAA,CAAAoB,GAAA;QAAA;UAAA83B,YAAA,CAAAj4B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA64B,YAAA,GAAAl5B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA2tB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAv4B,CAAA,MAAAw4B,QAAA,GAAAD,YAAA,CAAAt4B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA2L,QAAA,CAAAn7B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAg4B,YAAA,CAAAp5B,CAAA,CAAAoB,GAAA;QAAA;UAAAg4B,YAAA,CAAAn4B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA+4B,YAAA,GAAAp5B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA6yB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAz4B,CAAA,MAAA04B,QAAA,GAAAD,YAAA,CAAAx4B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAA6L,QAAA,CAAAr7B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAk4B,YAAA,CAAAt5B,CAAA,CAAAoB,GAAA;QAAA;UAAAk4B,YAAA,CAAAr4B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAi5B,YAAA,GAAAt5B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAgqB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA34B,CAAA,MAAA44B,QAAA,GAAAD,YAAA,CAAA14B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA+L,QAAA,CAAAv7B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAo4B,YAAA,CAAAx5B,CAAA,CAAAoB,GAAA;QAAA;UAAAo4B,YAAA,CAAAv4B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAm5B,YAAA,GAAAx5B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA+wB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA74B,CAAA,MAAA84B,QAAA,GAAAD,YAAA,CAAA54B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAiM,QAAA,CAAAz7B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAs4B,YAAA,CAAA15B,CAAA,CAAAoB,GAAA;QAAA;UAAAs4B,YAAA,CAAAz4B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEAhpB,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAChc,KAAK,CAAC;MAE9CrM,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC9b,MAAM,CAAC;MAEhD,IAAI8b,IAAI,CAACpR,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAM2d,gBAAgB,GAAG,IAAIr5B,KAAK,EAAc;QAAC,IAAAs5B,YAAA,GAAA35B,0BAAA,CAC9BmtB,IAAI,CAACpR,WAAW;UAAA6d,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAh5B,CAAA,MAAAi5B,QAAA,GAAAD,YAAA,CAAA/4B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAoM,QAAA,CAAA57B,KAAA;YACb07B,gBAAgB,CAACp1B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAy4B,YAAA,CAAA75B,CAAA,CAAAoB,GAAA;QAAA;UAAAy4B,YAAA,CAAA54B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG40B,gBAAgB;MAC5C;MAEA50B,QAAQ,CAAC,WAAW,CAAC,GAAG,8BAA8B;MAEtD,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA67B,gBAAgB1M,IAAqB,EAAc;MACjD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAy5B,YAAA,GAAA95B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAqvB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAn5B,CAAA,MAAAo5B,QAAA,GAAAD,YAAA,CAAAl5B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAuM,QAAA,CAAA/7B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA44B,YAAA,CAAAh6B,CAAA,CAAAoB,GAAA;QAAA;UAAA44B,YAAA,CAAA/4B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA25B,YAAA,GAAAh6B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAA8uB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAr5B,CAAA,MAAAs5B,QAAA,GAAAD,YAAA,CAAAp5B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAyM,QAAA,CAAAj8B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA84B,YAAA,CAAAl6B,CAAA,CAAAoB,GAAA;QAAA;UAAA84B,YAAA,CAAAj5B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAA65B,YAAA,GAAAl6B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA2uB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAv5B,CAAA,MAAAw5B,QAAA,GAAAD,YAAA,CAAAt5B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA2M,QAAA,CAAAn8B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAg5B,YAAA,CAAAp6B,CAAA,CAAAoB,GAAA;QAAA;UAAAg5B,YAAA,CAAAn5B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAA+5B,YAAA,GAAAp6B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAA6zB,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAz5B,CAAA,MAAA05B,QAAA,GAAAD,YAAA,CAAAx5B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAA6M,QAAA,CAAAr8B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAk5B,YAAA,CAAAt6B,CAAA,CAAAoB,GAAA;QAAA;UAAAk5B,YAAA,CAAAr5B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAi6B,YAAA,GAAAt6B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAgrB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA35B,CAAA,MAAA45B,QAAA,GAAAD,YAAA,CAAA15B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA+M,QAAA,CAAAv8B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAo5B,YAAA,CAAAx6B,CAAA,CAAAoB,GAAA;QAAA;UAAAo5B,YAAA,CAAAv5B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAm6B,YAAA,GAAAx6B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAA+xB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAA75B,CAAA,MAAA85B,QAAA,GAAAD,YAAA,CAAA55B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAiN,QAAA,CAAAz8B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAs5B,YAAA,CAAA16B,CAAA,CAAAoB,GAAA;QAAA;UAAAs5B,YAAA,CAAAz5B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAAChQ,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMud,eAAe,GAAG,IAAIr6B,KAAK,EAAc;QAAC,IAAAs6B,YAAA,GAAA36B,0BAAA,CAC7BmtB,IAAI,CAAChQ,UAAU;UAAAyd,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAh6B,CAAA,MAAAi6B,QAAA,GAAAD,YAAA,CAAA/5B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAoN,QAAA,CAAA58B,KAAA;YACb08B,eAAe,CAACp2B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAy5B,YAAA,CAAA76B,CAAA,CAAAoB,GAAA;QAAA;UAAAy5B,YAAA,CAAA55B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAG41B,eAAe;MAC1C;MAEA51B,QAAQ,CAAC,YAAY,CAAC,GAAG3I,kBAAkB,CAAC0+B,sBAAsB,CAAC1N,IAAI,CAAC7P,UAAU,CAAC;MAEnF,IAAI6P,IAAI,CAACngB,aAAa,KAAK,IAAI,EAAE;QAC/BlI,QAAQ,CAAC,eAAe,CAAC,GAAGqoB,IAAI,CAACngB,aAAa;MAChD;MAEA,IAAImgB,IAAI,CAAC9f,gBAAgB,KAAK,IAAI,EAAE;QAClC,IAAMiiB,qBAAqB,GAAG,IAAIjvB,KAAK,EAAc;QAAC,IAAAy6B,YAAA,GAAA96B,0BAAA,CACnCmtB,IAAI,CAAC9f,gBAAgB;UAAA0tB,QAAA;QAAA;UAAxC,KAAAD,YAAA,CAAAn6B,CAAA,MAAAo6B,QAAA,GAAAD,YAAA,CAAAl6B,CAAA,IAAAC,IAAA,GAA0C;YAAA,IAA/B2sB,OAAI,GAAAuN,QAAA,CAAA/8B,KAAA;YACbsxB,qBAAqB,CAAChrB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAClD;QAAC,SAAAtsB,GAAA;UAAA45B,YAAA,CAAAh7B,CAAA,CAAAoB,GAAA;QAAA;UAAA45B,YAAA,CAAA/5B,CAAA;QAAA;QACD+D,QAAQ,CAAC,kBAAkB,CAAC,GAAGwqB,qBAAqB;MACtD;MAEAxqB,QAAQ,CAAC,WAAW,CAAC,GAAG,QAAQ;MAEhC,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAg9B,sBAAsB7N,IAA2B,EAAc;MAC7D,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAChP,MAAM,CAAC;MAEhD,IAAIgP,IAAI,CAAC9O,gBAAgB,KAAK,IAAI,EAAE;QAClCvZ,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC9O,gBAAgB,CAAC;MACtE;MAEAvZ,QAAQ,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC5O,mBAAmB,CAAC;MAE1E,IAAI4O,IAAI,CAAC1O,oBAAoB,KAAK,IAAI,EAAE;QACtC3Z,QAAQ,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC1O,oBAAoB,CAAC;MAC9E;MAEA,IAAI0O,IAAI,CAACxO,KAAK,KAAK,IAAI,EAAE;QACvB7Z,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACxO,KAAK;MAChC;MAEA,IAAIwO,IAAI,CAACtO,SAAS,KAAK,IAAI,EAAE;QAC3B/Z,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACtO,SAAS,CAAC;MACxD;MAEA/Z,QAAQ,CAAC,WAAW,CAAC,GAAGqoB,IAAI,CAACpO,SAAS;MAEtC,IAAIoO,IAAI,CAAClO,OAAO,KAAK,IAAI,EAAE;QACzBna,QAAQ,CAAC,SAAS,CAAC,GAAG/I,SAAS,CAACg8B,YAAY,CAAC5K,IAAI,CAAClO,OAAO,CAAC;MAC5D;MAEA,OAAOna,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAi9B,2BAA2B9N,IAAgC,EAAc;MACvE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAA66B,YAAA,GAAAl7B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAywB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAv6B,CAAA,MAAAw6B,QAAA,GAAAD,YAAA,CAAAt6B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAA2N,QAAA,CAAAn9B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAg6B,YAAA,CAAAp7B,CAAA,CAAAoB,GAAA;QAAA;UAAAg6B,YAAA,CAAAn6B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA+6B,YAAA,GAAAp7B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAkwB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAz6B,CAAA,MAAA06B,QAAA,GAAAD,YAAA,CAAAx6B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA6N,QAAA,CAAAr9B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAk6B,YAAA,CAAAt7B,CAAA,CAAAoB,GAAA;QAAA;UAAAk6B,YAAA,CAAAr6B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAi7B,YAAA,GAAAt7B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA+vB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA36B,CAAA,MAAA46B,QAAA,GAAAD,YAAA,CAAA16B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA+N,QAAA,CAAAv9B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAo6B,YAAA,CAAAx7B,CAAA,CAAAoB,GAAA;QAAA;UAAAo6B,YAAA,CAAAv6B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAm7B,YAAA,GAAAx7B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAi1B,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA76B,CAAA,MAAA86B,QAAA,GAAAD,YAAA,CAAA56B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAiO,QAAA,CAAAz9B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAs6B,YAAA,CAAA17B,CAAA,CAAAoB,GAAA;QAAA;UAAAs6B,YAAA,CAAAz6B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAq7B,YAAA,GAAA17B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAosB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA/6B,CAAA,MAAAg7B,QAAA,GAAAD,YAAA,CAAA96B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAmO,QAAA,CAAA39B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAw6B,YAAA,CAAA57B,CAAA,CAAAoB,GAAA;QAAA;UAAAw6B,YAAA,CAAA36B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAu7B,YAAA,GAAA57B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAmzB,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAj7B,CAAA,MAAAk7B,QAAA,GAAAD,YAAA,CAAAh7B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAqO,QAAA,CAAA79B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAA06B,YAAA,CAAA97B,CAAA,CAAAoB,GAAA;QAAA;UAAA06B,YAAA,CAAA76B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEAhpB,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC9M,QAAQ,CAAC;MAEpDvb,QAAQ,CAAC,WAAW,CAAC,GAAG3I,kBAAkB,CAAC2/B,qBAAqB,CAAC3O,IAAI,CAAC5M,SAAS,CAAC;MAEhFzb,QAAQ,CAAC,OAAO,CAAC,GAAG3I,kBAAkB,CAAC4/B,wBAAwB,CAAC5O,IAAI,CAAC1M,KAAK,CAAC;MAE3E,IAAI0M,IAAI,CAACxM,YAAY,KAAK,IAAI,EAAE;QAC9B7b,QAAQ,CAAC,cAAc,CAAC,GAAGqoB,IAAI,CAACxM,YAAY;MAC9C;MAEA,IAAIwM,IAAI,CAACtM,aAAa,KAAK,IAAI,EAAE;QAC/B/b,QAAQ,CAAC,eAAe,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACtM,aAAa,CAAC;MAChE;MAEA,IAAIsM,IAAI,CAACpM,UAAU,KAAK,IAAI,EAAE;QAC5Bjc,QAAQ,CAAC,YAAY,CAAC,GAAGqoB,IAAI,CAACpM,UAAU;MAC1C;MAEA,IAAIoM,IAAI,CAAClM,WAAW,KAAK,IAAI,EAAE;QAC7Bnc,QAAQ,CAAC,aAAa,CAAC,GAAGqoB,IAAI,CAAClM,WAAW;MAC5C;MAEA,IAAIkM,IAAI,CAAChM,WAAW,KAAK,IAAI,EAAE;QAC7Brc,QAAQ,CAAC,aAAa,CAAC,GAAGqoB,IAAI,CAAChM,WAAW;MAC5C;MAEArc,QAAQ,CAAC,WAAW,CAAC,GAAG,mBAAmB;MAE3C,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAg+B,mBAAmB7O,IAAwB,EAAc;MACvD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAA47B,YAAA,GAAAj8B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAAwxB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAt7B,CAAA,MAAAu7B,QAAA,GAAAD,YAAA,CAAAr7B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAA0O,QAAA,CAAAl+B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA+6B,YAAA,CAAAn8B,CAAA,CAAAoB,GAAA;QAAA;UAAA+6B,YAAA,CAAAl7B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAA87B,YAAA,GAAAn8B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAixB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAx7B,CAAA,MAAAy7B,QAAA,GAAAD,YAAA,CAAAv7B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA4O,QAAA,CAAAp+B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAi7B,YAAA,CAAAr8B,CAAA,CAAAoB,GAAA;QAAA;UAAAi7B,YAAA,CAAAp7B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAg8B,YAAA,GAAAr8B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAA8wB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA17B,CAAA,MAAA27B,QAAA,GAAAD,YAAA,CAAAz7B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAA8O,QAAA,CAAAt+B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAm7B,YAAA,CAAAv8B,CAAA,CAAAoB,GAAA;QAAA;UAAAm7B,YAAA,CAAAt7B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAk8B,YAAA,GAAAv8B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAg2B,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAA57B,CAAA,MAAA67B,QAAA,GAAAD,YAAA,CAAA37B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAgP,QAAA,CAAAx+B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAAq7B,YAAA,CAAAz8B,CAAA,CAAAoB,GAAA;QAAA;UAAAq7B,YAAA,CAAAx7B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAAo8B,YAAA,GAAAz8B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAAmtB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA97B,CAAA,MAAA+7B,QAAA,GAAAD,YAAA,CAAA77B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAkP,QAAA,CAAA1+B,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAu7B,YAAA,CAAA38B,CAAA,CAAAoB,GAAA;QAAA;UAAAu7B,YAAA,CAAA17B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAs8B,YAAA,GAAA38B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAk0B,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAh8B,CAAA,MAAAi8B,QAAA,GAAAD,YAAA,CAAA/7B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAoP,QAAA,CAAA5+B,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAy7B,YAAA,CAAA78B,CAAA,CAAAoB,GAAA;QAAA;UAAAy7B,YAAA,CAAA57B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAAC3K,cAAc,KAAK,IAAI,EAAE;QAChC,IAAMqa,mBAAmB,GAAG,IAAIx8B,KAAK,EAAc;QAAC,IAAAy8B,YAAA,GAAA98B,0BAAA,CACjCmtB,IAAI,CAAC3K,cAAc;UAAAua,QAAA;QAAA;UAAtC,KAAAD,YAAA,CAAAn8B,CAAA,MAAAo8B,QAAA,GAAAD,YAAA,CAAAl8B,CAAA,IAAAC,IAAA,GAAwC;YAAA,IAA7B2sB,OAAI,GAAAuP,QAAA,CAAA/+B,KAAA;YACb6+B,mBAAmB,CAACv4B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAChD;QAAC,SAAAtsB,GAAA;UAAA47B,YAAA,CAAAh9B,CAAA,CAAAoB,GAAA;QAAA;UAAA47B,YAAA,CAAA/7B,CAAA;QAAA;QACD+D,QAAQ,CAAC,gBAAgB,CAAC,GAAG+3B,mBAAmB;MAClD;MAEA,IAAI1P,IAAI,CAACvK,eAAe,KAAK,IAAI,EAAE;QACjC,IAAMoa,oBAAoB,GAAG,IAAI38B,KAAK,EAAc;QAAC,IAAA48B,YAAA,GAAAj9B,0BAAA,CAClCmtB,IAAI,CAACvK,eAAe;UAAAsa,QAAA;QAAA;UAAvC,KAAAD,YAAA,CAAAt8B,CAAA,MAAAu8B,QAAA,GAAAD,YAAA,CAAAr8B,CAAA,IAAAC,IAAA,GAAyC;YAAA,IAA9B2sB,OAAI,GAAA0P,QAAA,CAAAl/B,KAAA;YACbg/B,oBAAoB,CAAC14B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACjD;QAAC,SAAAtsB,GAAA;UAAA+7B,YAAA,CAAAn9B,CAAA,CAAAoB,GAAA;QAAA;UAAA+7B,YAAA,CAAAl8B,CAAA;QAAA;QACD+D,QAAQ,CAAC,iBAAiB,CAAC,GAAGk4B,oBAAoB;MACpD;MAEA,IAAI7P,IAAI,CAACnK,iBAAiB,KAAK,IAAI,EAAE;QACnC,IAAMma,sBAAsB,GAAG,IAAI98B,KAAK,EAAc;QAAC,IAAA+8B,YAAA,GAAAp9B,0BAAA,CACpCmtB,IAAI,CAACnK,iBAAiB;UAAAqa,QAAA;QAAA;UAAzC,KAAAD,YAAA,CAAAz8B,CAAA,MAAA08B,QAAA,GAAAD,YAAA,CAAAx8B,CAAA,IAAAC,IAAA,GAA2C;YAAA,IAAhC2sB,OAAI,GAAA6P,QAAA,CAAAr/B,KAAA;YACbm/B,sBAAsB,CAAC74B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACnD;QAAC,SAAAtsB,GAAA;UAAAk8B,YAAA,CAAAt9B,CAAA,CAAAoB,GAAA;QAAA;UAAAk8B,YAAA,CAAAr8B,CAAA;QAAA;QACD+D,QAAQ,CAAC,mBAAmB,CAAC,GAAGq4B,sBAAsB;MACxD;MAEAr4B,QAAQ,CAAC,WAAW,CAAC,GAAG,WAAW;MAEnC,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAs/B,2BAA2BnQ,IAAgC,EAAc;MACvE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnvB,KAAK,CAAC;MAE9C,OAAO8G,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAu/B,oBAAoBpQ,IAAyB,EAAc;MACzD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAm9B,YAAA,GAAAx9B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAA+yB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA78B,CAAA,MAAA88B,QAAA,GAAAD,YAAA,CAAA58B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAAiQ,QAAA,CAAAz/B,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAs8B,YAAA,CAAA19B,CAAA,CAAAoB,GAAA;QAAA;UAAAs8B,YAAA,CAAAz8B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAq9B,YAAA,GAAA19B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAwyB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA/8B,CAAA,MAAAg9B,QAAA,GAAAD,YAAA,CAAA98B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAmQ,QAAA,CAAA3/B,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAw8B,YAAA,CAAA59B,CAAA,CAAAoB,GAAA;QAAA;UAAAw8B,YAAA,CAAA38B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAu9B,YAAA,GAAA59B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAqyB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAAj9B,CAAA,MAAAk9B,QAAA,GAAAD,YAAA,CAAAh9B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAqQ,QAAA,CAAA7/B,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAA08B,YAAA,CAAA99B,CAAA,CAAAoB,GAAA;QAAA;UAAA08B,YAAA,CAAA78B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACnnB,UAAU,KAAK,IAAI,EAAE;QAC5BlB,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACnnB,UAAU,CAAC;MAC1D;MAEA,IAAImnB,IAAI,CAAC3mB,uBAAuB,KAAK,IAAI,EAAE;QACzC,IAAM6mB,4BAA4B,GAAG,IAAIhtB,KAAK,EAAc;QAAC,IAAAy9B,YAAA,GAAA99B,0BAAA,CAC1CmtB,IAAI,CAAC3mB,uBAAuB;UAAAu3B,QAAA;QAAA;UAA/C,KAAAD,YAAA,CAAAn9B,CAAA,MAAAo9B,QAAA,GAAAD,YAAA,CAAAl9B,CAAA,IAAAC,IAAA,GAAiD;YAAA,IAAtC2sB,OAAI,GAAAuQ,QAAA,CAAA//B,KAAA;YACbqvB,4BAA4B,CAAC/oB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACzD;QAAC,SAAAtsB,GAAA;UAAA48B,YAAA,CAAAh+B,CAAA,CAAAoB,GAAA;QAAA;UAAA48B,YAAA,CAAA/8B,CAAA;QAAA;QACD+D,QAAQ,CAAC,yBAAyB,CAAC,GAAGuoB,4BAA4B;MACpE;MAEA,IAAIF,IAAI,CAAC5d,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMghB,eAAe,GAAG,IAAIlwB,KAAK,EAAc;QAAC,IAAA29B,YAAA,GAAAh+B,0BAAA,CAC7BmtB,IAAI,CAAC5d,UAAU;UAAA0uB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAAr9B,CAAA,MAAAs9B,QAAA,GAAAD,YAAA,CAAAp9B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAAyQ,QAAA,CAAAjgC,KAAA;YACbuyB,eAAe,CAACjsB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAA88B,YAAA,CAAAl+B,CAAA,CAAAoB,GAAA;QAAA;UAAA88B,YAAA,CAAAj9B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGyrB,eAAe;MAC1C;MAEA,IAAIpD,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAA69B,YAAA,GAAAl+B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAy1B,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAv9B,CAAA,MAAAw9B,QAAA,GAAAD,YAAA,CAAAt9B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAA2Q,QAAA,CAAAngC,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAg9B,YAAA,CAAAp+B,CAAA,CAAAoB,GAAA;QAAA;UAAAg9B,YAAA,CAAAn9B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEAhpB,QAAQ,CAAC,WAAW,CAAC,GAAG,YAAY;MAEpC,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAogC,4BAA4BjR,IAAiC,EAAc;MACzE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAACziB,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAM4jB,eAAe,GAAG,IAAIjuB,KAAK,EAAc;QAAC,IAAAg+B,YAAA,GAAAr+B,0BAAA,CAC7BmtB,IAAI,CAACziB,UAAU;UAAA4zB,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA19B,CAAA,MAAA29B,QAAA,GAAAD,YAAA,CAAAz9B,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,IAAI,GAAA8Q,QAAA,CAAAtgC,KAAA;YACbswB,eAAe,CAAChqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAm9B,YAAA,CAAAv+B,CAAA,CAAAoB,GAAA;QAAA;UAAAm9B,YAAA,CAAAt9B,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGwpB,eAAe;MAC1C;MAEA,IAAInB,IAAI,CAACviB,QAAQ,KAAK,IAAI,EAAE;QAC1B9F,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACviB,QAAQ;MACtC;MAEA,IAAIuiB,IAAI,CAACriB,OAAO,KAAK,IAAI,EAAE;QACzBhG,QAAQ,CAAC,SAAS,CAAC,GAAGqoB,IAAI,CAACriB,OAAO;MACpC;MAEA,IAAIqiB,IAAI,CAAChiB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMsjB,gBAAgB,GAAG,IAAIpuB,KAAK,EAAc;QAAC,IAAAk+B,YAAA,GAAAv+B,0BAAA,CAC9BmtB,IAAI,CAAChiB,WAAW;UAAAqzB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA59B,CAAA,MAAA69B,QAAA,GAAAD,YAAA,CAAA39B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAgR,QAAA,CAAAxgC,KAAA;YACbywB,gBAAgB,CAACnqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAq9B,YAAA,CAAAz+B,CAAA,CAAAoB,GAAA;QAAA;UAAAq9B,YAAA,CAAAx9B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG2pB,gBAAgB;MAC5C;MAEA,IAAItB,IAAI,CAAC3hB,WAAW,KAAK,IAAI,EAAE;QAC7B,IAAMojB,gBAAgB,GAAG,IAAIvuB,KAAK,EAAc;QAAC,IAAAo+B,YAAA,GAAAz+B,0BAAA,CAC9BmtB,IAAI,CAAC3hB,WAAW;UAAAkzB,QAAA;QAAA;UAAnC,KAAAD,YAAA,CAAA99B,CAAA,MAAA+9B,QAAA,GAAAD,YAAA,CAAA79B,CAAA,IAAAC,IAAA,GAAqC;YAAA,IAA1B2sB,OAAI,GAAAkR,QAAA,CAAA1gC,KAAA;YACb4wB,gBAAgB,CAACtqB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC7C;QAAC,SAAAtsB,GAAA;UAAAu9B,YAAA,CAAA3+B,CAAA,CAAAoB,GAAA;QAAA;UAAAu9B,YAAA,CAAA19B,CAAA;QAAA;QACD+D,QAAQ,CAAC,aAAa,CAAC,GAAG8pB,gBAAgB;MAC5C;MAEA,IAAIzB,IAAI,CAACzhB,cAAc,KAAK,IAAI,EAAE;QAChC5G,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACzhB,cAAc,CAAC;MAClE;MAEA5G,QAAQ,CAAC,IAAI,CAAC,GAAGqoB,IAAI,CAACvhB,EAAE;MAExB,IAAIuhB,IAAI,CAACzkB,0BAA0B,KAAK,IAAI,EAAE;QAC5C,IAAMolB,+BAA+B,GAAG,IAAIztB,KAAK,EAAc;QAAC,IAAAs+B,YAAA,GAAA3+B,0BAAA,CAC7CmtB,IAAI,CAACzkB,0BAA0B;UAAAk2B,QAAA;QAAA;UAAlD,KAAAD,YAAA,CAAAh+B,CAAA,MAAAi+B,QAAA,GAAAD,YAAA,CAAA/9B,CAAA,IAAAC,IAAA,GAAoD;YAAA,IAAzC2sB,OAAI,GAAAoR,QAAA,CAAA5gC,KAAA;YACb8vB,+BAA+B,CAACxpB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5D;QAAC,SAAAtsB,GAAA;UAAAy9B,YAAA,CAAA7+B,CAAA,CAAAoB,GAAA;QAAA;UAAAy9B,YAAA,CAAA59B,CAAA;QAAA;QACD+D,QAAQ,CAAC,4BAA4B,CAAC,GAAGgpB,+BAA+B;MAC1E;MAEA,IAAIX,IAAI,CAAChI,QAAQ,KAAK,IAAI,EAAE;QAC1B,IAAM0Z,aAAa,GAAG,IAAIx+B,KAAK,EAAc;QAAC,IAAAy+B,YAAA,GAAA9+B,0BAAA,CAC3BmtB,IAAI,CAAChI,QAAQ;UAAA4Z,QAAA;QAAA;UAAhC,KAAAD,YAAA,CAAAn+B,CAAA,MAAAo+B,QAAA,GAAAD,YAAA,CAAAl+B,CAAA,IAAAC,IAAA,GAAkC;YAAA,IAAvB2sB,OAAI,GAAAuR,QAAA,CAAA/gC,KAAA;YACb6gC,aAAa,CAACv6B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC1C;QAAC,SAAAtsB,GAAA;UAAA49B,YAAA,CAAAh/B,CAAA,CAAAoB,GAAA;QAAA;UAAA49B,YAAA,CAAA/9B,CAAA;QAAA;QACD+D,QAAQ,CAAC,UAAU,CAAC,GAAG+5B,aAAa;MACtC;MAEA/5B,QAAQ,CAAC,WAAW,CAAC,GAAG,oBAAoB;MAE5C,OAAOA,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAghC,mBAAmB7R,IAAwB,EAAc;MACvD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,MAAM,CAAC,GAAG3I,kBAAkB,CAAC8iC,0BAA0B,CAAC9R,IAAI,CAACnjB,IAAI,CAAC;MAE3E,IAAImjB,IAAI,CAACxH,kBAAkB,KAAK,IAAI,EAAE;QACpC7gB,QAAQ,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACxH,kBAAkB,CAAC;MAC1E;MAEA,IAAMuZ,SAAS,GAAG,IAAI7+B,KAAK,EAAc;MAAC,IAAA8+B,YAAA,GAAAn/B,0BAAA,CACvBmtB,IAAI,CAACnH,IAAI;QAAAoZ,QAAA;MAAA;QAA5B,KAAAD,YAAA,CAAAx+B,CAAA,MAAAy+B,QAAA,GAAAD,YAAA,CAAAv+B,CAAA,IAAAC,IAAA,GAA8B;UAAA,IAAnB2sB,IAAI,GAAA4R,QAAA,CAAAphC,KAAA;UACbkhC,SAAS,CAAC56B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;QACtC;MAAC,SAAAtsB,GAAA;QAAAi+B,YAAA,CAAAr/B,CAAA,CAAAoB,GAAA;MAAA;QAAAi+B,YAAA,CAAAp+B,CAAA;MAAA;MACD+D,QAAQ,CAAC,MAAM,CAAC,GAAGo6B,SAAS;MAE5B,OAAOp6B,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAqhC,aAAalS,IAAkB,EAAc;MAC3C,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,MAAM,CAAC,GAAG3I,kBAAkB,CAACmjC,oBAAoB,CAACnS,IAAI,CAACnjB,IAAI,CAAC;MAErElF,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAE9B,OAAO8G,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAuhC,4BAA4BpS,IAAiC,EAAc;MACzE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACtG,QAAQ;MAEpC/hB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACpG,IAAI;MAE5B,OAAOjiB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAwhC,4BAA4BrS,IAAiC,EAAc;MACzE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACtG,QAAQ;MAEpC/hB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACpG,IAAI;MAE5B,OAAOjiB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAyhC,qBAAqBtS,IAA0B,EAAc;MAC3D,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAIqoB,IAAI,CAAC1F,yBAAyB,KAAK,IAAI,EAAE;QAC3C,IAAMiY,8BAA8B,GAAG,IAAIr/B,KAAK,EAAc;QAAC,IAAAs/B,YAAA,GAAA3/B,0BAAA,CAC5CmtB,IAAI,CAAC1F,yBAAyB;UAAAmY,QAAA;QAAA;UAAjD,KAAAD,YAAA,CAAAh/B,CAAA,MAAAi/B,QAAA,GAAAD,YAAA,CAAA/+B,CAAA,IAAAC,IAAA,GAAmD;YAAA,IAAxC2sB,IAAI,GAAAoS,QAAA,CAAA5hC,KAAA;YACb0hC,8BAA8B,CAACp7B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC3D;QAAC,SAAAtsB,GAAA;UAAAy+B,YAAA,CAAA7/B,CAAA,CAAAoB,GAAA;QAAA;UAAAy+B,YAAA,CAAA5+B,CAAA;QAAA;QACD+D,QAAQ,CAAC,2BAA2B,CAAC,GAAG46B,8BAA8B;MACxE;MAEA,IAAIvS,IAAI,CAAC5gB,SAAS,KAAK,IAAI,EAAE;QAC3B,IAAM0iB,cAAc,GAAG,IAAI5uB,KAAK,EAAc;QAAC,IAAAw/B,YAAA,GAAA7/B,0BAAA,CAC5BmtB,IAAI,CAAC5gB,SAAS;UAAAuzB,QAAA;QAAA;UAAjC,KAAAD,YAAA,CAAAl/B,CAAA,MAAAm/B,QAAA,GAAAD,YAAA,CAAAj/B,CAAA,IAAAC,IAAA,GAAmC;YAAA,IAAxB2sB,OAAI,GAAAsS,QAAA,CAAA9hC,KAAA;YACbixB,cAAc,CAAC3qB,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC3C;QAAC,SAAAtsB,GAAA;UAAA2+B,YAAA,CAAA//B,CAAA,CAAAoB,GAAA;QAAA;UAAA2+B,YAAA,CAAA9+B,CAAA;QAAA;QACD+D,QAAQ,CAAC,WAAW,CAAC,GAAGmqB,cAAc;MACxC;MAEA,IAAI9B,IAAI,CAACpF,mBAAmB,KAAK,IAAI,EAAE;QACrC,IAAMgY,wBAAwB,GAAG,IAAI1/B,KAAK,EAAc;QAAC,IAAA2/B,YAAA,GAAAhgC,0BAAA,CACtCmtB,IAAI,CAACpF,mBAAmB;UAAAkY,QAAA;QAAA;UAA3C,KAAAD,YAAA,CAAAr/B,CAAA,MAAAs/B,QAAA,GAAAD,YAAA,CAAAp/B,CAAA,IAAAC,IAAA,GAA6C;YAAA,IAAlC2sB,OAAI,GAAAyS,QAAA,CAAAjiC,KAAA;YACb+hC,wBAAwB,CAACz7B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UACrD;QAAC,SAAAtsB,GAAA;UAAA8+B,YAAA,CAAAlgC,CAAA,CAAAoB,GAAA;QAAA;UAAA8+B,YAAA,CAAAj/B,CAAA;QAAA;QACD+D,QAAQ,CAAC,qBAAqB,CAAC,GAAGi7B,wBAAwB;MAC5D;MAEA,OAAOj7B,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAkiC,mCACE/S,IAAwC,EAC5B;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,0BAA0B,CAAC,GAAG,IAAI,CAACsoB,SAAS,CACnDD,IAAI,CAAC5E,wBAAwB,CAC9B;MAED,IAAI4E,IAAI,CAAC1E,iBAAiB,KAAK,IAAI,EAAE;QACnC3jB,QAAQ,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAAC1E,iBAAiB,CAAC;MACxE;MAEA,OAAO3jB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAmiC,mBAAmBhT,IAAwB,EAAc;MACvD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,KAAK,CAAC,GAAGqoB,IAAI,CAAC1V,GAAG;MAE1B3S,QAAQ,CAAC,KAAK,CAAC,GAAGqoB,IAAI,CAACnE,GAAG;MAE1BlkB,QAAQ,CAAC,KAAK,CAAC,GAAGqoB,IAAI,CAACjE,GAAG;MAE1BpkB,QAAQ,CAAC,KAAK,CAAC,GAAGqoB,IAAI,CAACxV,GAAG;MAE1B,OAAO7S,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAoiC,4BAA4BjT,IAAiC,EAAc;MACzE,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAE9B8G,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACjjB,OAAO,CAAC;MAElD,OAAOpF,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAqiC,mBAAmBlT,IAAwB,EAAc;MACvD,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAMw7B,wBAAwB,GAAG,IAAIjgC,KAAK,EAAc;MAAC,IAAAkgC,YAAA,GAAAvgC,0BAAA,CACtCmtB,IAAI,CAACrD,mBAAmB;QAAA0W,QAAA;MAAA;QAA3C,KAAAD,YAAA,CAAA5/B,CAAA,MAAA6/B,QAAA,GAAAD,YAAA,CAAA3/B,CAAA,IAAAC,IAAA,GAA6C;UAAA,IAAlC2sB,IAAI,GAAAgT,QAAA,CAAAxiC,KAAA;UACbsiC,wBAAwB,CAACh8B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;QACrD;MAAC,SAAAtsB,GAAA;QAAAq/B,YAAA,CAAAzgC,CAAA,CAAAoB,GAAA;MAAA;QAAAq/B,YAAA,CAAAx/B,CAAA;MAAA;MACD+D,QAAQ,CAAC,qBAAqB,CAAC,GAAGw7B,wBAAwB;MAE1D,OAAOx7B,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAAyiC,6CACEtT,IAAkD,EACtC;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACtG,QAAQ;MAEpC/hB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACpG,IAAI;MAE5B,OAAOjiB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA0iC,yCACEvT,IAA8C,EAClC;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACtG,QAAQ;MAEpC/hB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACpG,IAAI;MAE5B,OAAOjiB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA2iC,0CACExT,IAA+C,EACnC;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/BA,QAAQ,CAAC,UAAU,CAAC,GAAGqoB,IAAI,CAACtG,QAAQ;MAEpC/hB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAACpG,IAAI;MAE5B,OAAOjiB,QAAQ;IACjB;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA1H,GAAA;IAAAY,KAAA,EAMA,SAAA4iC,mCACEzT,IAAwC,EAC5B;MACZ,IAAMroB,QAAoB,GAAG,CAAC,CAAC;MAE/B,IAAM+7B,kBAAkB,GAAG,IAAIxgC,KAAK,EAAc;MAAC,IAAAygC,YAAA,GAAA9gC,0BAAA,CAChCmtB,IAAI,CAACjC,aAAa;QAAA6V,QAAA;MAAA;QAArC,KAAAD,YAAA,CAAAngC,CAAA,MAAAogC,QAAA,GAAAD,YAAA,CAAAlgC,CAAA,IAAAC,IAAA,GAAuC;UAAA,IAA5B2sB,OAAI,GAAAuT,QAAA,CAAA/iC,KAAA;UACb6iC,kBAAkB,CAACv8B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;QAC/C;MAAC,SAAAtsB,GAAA;QAAA4/B,YAAA,CAAAhhC,CAAA,CAAAoB,GAAA;MAAA;QAAA4/B,YAAA,CAAA//B,CAAA;MAAA;MACD+D,QAAQ,CAAC,eAAe,CAAC,GAAG+7B,kBAAkB;MAE9C,IAAI1T,IAAI,CAAC7B,SAAS,KAAK,IAAI,EAAE;QAC3B,IAAM0V,cAAc,GAAG,IAAI3gC,KAAK,EAAc;QAAC,IAAA4gC,YAAA,GAAAjhC,0BAAA,CAC5BmtB,IAAI,CAAC7B,SAAS;UAAA4V,QAAA;QAAA;UAAjC,KAAAD,YAAA,CAAAtgC,CAAA,MAAAugC,QAAA,GAAAD,YAAA,CAAArgC,CAAA,IAAAC,IAAA,GAAmC;YAAA,IAAxB2sB,IAAI,GAAA0T,QAAA,CAAAljC,KAAA;YACbgjC,cAAc,CAAC18B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,IAAI,CAAC,CAAC;UAC3C;QAAC,SAAAtsB,GAAA;UAAA+/B,YAAA,CAAAnhC,CAAA,CAAAoB,GAAA;QAAA;UAAA+/B,YAAA,CAAAlgC,CAAA;QAAA;QACD+D,QAAQ,CAAC,WAAW,CAAC,GAAGk8B,cAAc;MACxC;MAEA,IAAI7T,IAAI,CAAC3B,IAAI,KAAK,IAAI,EAAE;QACtB1mB,QAAQ,CAAC,MAAM,CAAC,GAAGqoB,IAAI,CAAC3B,IAAI;MAC9B;MAEA,IAAI2B,IAAI,CAACzB,MAAM,KAAK,IAAI,EAAE;QACxB5mB,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACzB,MAAM,CAAC;MAClD;MAEA,IAAIyB,IAAI,CAACvB,kBAAkB,KAAK,IAAI,EAAE;QACpC9mB,QAAQ,CAAC,oBAAoB,CAAC,GAAGqoB,IAAI,CAACvB,kBAAkB;MAC1D;MAEA,IAAIuB,IAAI,CAACrB,MAAM,KAAK,IAAI,EAAE;QACxBhnB,QAAQ,CAAC,QAAQ,CAAC,GAAGqoB,IAAI,CAACrB,MAAM;MAClC;MAEA,IAAIqB,IAAI,CAACnB,QAAQ,KAAK,IAAI,EAAE;QAC1BlnB,QAAQ,CAAC,UAAU,CAAC,GAAG3I,kBAAkB,CAACglC,4BAA4B,CACpEhU,IAAI,CAACnB,QAAQ,CACd;MACH;MAEA,IAAImB,IAAI,CAACf,UAAU,KAAK,IAAI,EAAE;QAC5B,IAAMgV,eAAe,GAAG,IAAI/gC,KAAK,EAAc;QAAC,IAAAghC,YAAA,GAAArhC,0BAAA,CAC7BmtB,IAAI,CAACf,UAAU;UAAAkV,QAAA;QAAA;UAAlC,KAAAD,YAAA,CAAA1gC,CAAA,MAAA2gC,QAAA,GAAAD,YAAA,CAAAzgC,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzB2sB,OAAI,GAAA8T,QAAA,CAAAtjC,KAAA;YACbojC,eAAe,CAAC98B,IAAI,CAAC,IAAI,CAAC8oB,SAAS,CAACI,OAAI,CAAC,CAAC;UAC5C;QAAC,SAAAtsB,GAAA;UAAAmgC,YAAA,CAAAvhC,CAAA,CAAAoB,GAAA;QAAA;UAAAmgC,YAAA,CAAAtgC,CAAA;QAAA;QACD+D,QAAQ,CAAC,YAAY,CAAC,GAAGs8B,eAAe;MAC1C;MAEA,IAAIjU,IAAI,CAACb,WAAW,KAAK,IAAI,EAAE;QAC7BxnB,QAAQ,CAAC,aAAa,CAAC,GAAGqoB,IAAI,CAACb,WAAW;MAC5C;MAEA,IAAIa,IAAI,CAACX,SAAS,KAAK,IAAI,EAAE;QAC3B1nB,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACX,SAAS,CAAC;MACxD;MAEA,IAAIW,IAAI,CAACnvB,KAAK,KAAK,IAAI,EAAE;QACvB8G,QAAQ,CAAC,OAAO,CAAC,GAAGqoB,IAAI,CAACnvB,KAAK;MAChC;MAEA,IAAImvB,IAAI,CAACT,SAAS,KAAK,IAAI,EAAE;QAC3B5nB,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAACsoB,SAAS,CAACD,IAAI,CAACT,SAAS,CAAC;MACxD;MAEA5nB,QAAQ,CAAC,WAAW,CAAC,GAAG,2BAA2B;MAEnD,OAAOA,QAAQ;IACjB;EAAC;EAAA,OAAAioB,UAAA;AAAA,EAt+DsB7wB,QAAQ,CAACqlC,mBAAmB;AAy+DrD,IAAMC,UAAU,GAAG,IAAIzU,UAAU,EAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0U,UAAUA,CAACtU,IAAoB,EAAc;EAC3D,OAAOqU,UAAU,CAACpU,SAAS,CAACD,IAAI,CAAC;AACnC;;AAEA;;AAEA;AACA"}